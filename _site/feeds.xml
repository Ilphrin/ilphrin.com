<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>Kevin / Ilphrin</title>
		<description>A blog about IT, free software and stuff like that</description>
		<link>http://ilphrin.com</link>
		<atom:link href="http://ilphrin.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Un nouveau stock de musiques en libre écoute</title>
				
					<description>&lt;p&gt;Je n’en parle pas beaucoup, mais je suis un grand féru de musique et, bien que je ne sois pas un connaisseur technique dans le domaine, j’apprécie énormément la découverte de nouveaux groupes et de nouveaux genres. Je vais régulièrement sur le site de &lt;a href=&quot;https://jamendo.com&quot;&gt;Jamendo&lt;/a&gt;, qui présente un paquet d’artistes très hétérogènes, le tout sous écoute libre pour un usage personnel. Pour changer un peu du thème de l’informatique je me suis dit que j’allais faire un premier pack des derniers groupes que j’ai écouté sur le site.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Pour chaque artiste, groupe, ou album le titre est un lien vers l’une des musiques qui lui est lié.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;leftImg&quot;&gt;&lt;img src=&quot;/images/djspooky.jpg&quot; alt=&quot;DJ Spooky&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;dj-spookyhttpilphrincomkevinprojectsdodgellhtml&quot;&gt;&lt;a href=&quot;http://ilphrin.com/kevin/projects/dodgell.html&quot;&gt;DJ Spooky&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;C’est pas courant que j’en écoute alors je vais commencer par un peu de musique électronique. DJ Spooky est un compositeur, éditeur et auteur américain, et a sorti dernièrement un projet nommé &lt;a href=&quot;http://djspooky.com/antarctica/&quot;&gt;Book of Ice&lt;/a&gt; qui parle de l’Antarctique. Dans ce projet on retrouve un album composé par lui-même dans un style électro qui s’appelle &lt;a href=&quot;https://www.jamendo.com/album/122759/of-water-and-ice&quot;&gt;Of Water And Ice&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La musique qui m’a le plus marqué est la musique éponyme de l’album, qui reflète beaucoup ce continent glacé notamment avec l’écho de la voix qui donne une impression de vasteté. À écouter pour les amateurs d’électro ;)&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;rightImg&quot;&gt;&lt;img src=&quot;/images/alumno.jpg&quot; alt=&quot;Alumno&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;alumno-musichttpswwwjamendocomtrack1284466we-are-victorious&quot;&gt;&lt;a href=&quot;https://www.jamendo.com/track/1284466/we-are-victorious&quot;&gt;Alumno Music&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.alumomusic.com/&quot;&gt;Alumno Music&lt;/a&gt; est un studio de musique indépendant dirigé par l’anglais Matt Harris, compositeur, producteur, designer et photographe. Son studio produit des musiques de plusieurs genres allant de la “musique inspirante” au pop et au (gentil) rock. Je vais parler d’une musique en particulier de ce créateur car je n’en ai pas encore écouté d’autres, qui s’appelle &lt;a href=&quot;https://www.jamendo.com/track/1284466/we-are-victorious&quot;&gt;We Are Victorious&lt;/a&gt;. C’est une musique avec un rythme assez doux et une majorité de sons éléctroniques.&lt;/p&gt;

&lt;p&gt;C’est une musique assez agréable à entendre pour se détendre, ou que j’écoute parfois en faisant une activité comme de la peinture ou de la cuisine, à voir ce que donne le reste de ses musiques pour voir ce qu’elle valent!&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;leftImg&quot;&gt;&lt;img src=&quot;/images/akashicRecords.jpg&quot; alt=&quot;Akashic Records&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;akashic-recordshttpswwwjamendocomtrack1158368the-final-battle-no-vox&quot;&gt;&lt;a href=&quot;https://www.jamendo.com/track/1158368/the-final-battle-no-vox&quot;&gt;Akashic Records&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Encore une fois je n’ai écouté qu’une seule musique (au moins ça vous poussera à aller écouter par vous-même le reste ;)). &lt;a href=&quot;http://saregama-music.blogspot.fr/&quot;&gt;Akashic Records&lt;/a&gt; est un projet audiovisuel fondé par le compositeur et producteur Saregama (aka Serge). Il crée de la musique mais aussi des films, documentaires, des campagnes publicitaires, etc. La musique que j’ai écouté s’appelle &lt;a href=&quot;https://www.jamendo.com/track/1158368/the-final-battle-no-vox&quot;&gt;The Final Battle&lt;/a&gt;, c’est de la musique classique mais qui s’apparente beacoup à une bande-son de film hollywoodien, avec un côté épique.&lt;/p&gt;

&lt;p&gt;D’ailleurs la jaquette est un spartiate tel qu’on peut le voir dans le film 300 avec son allure dynamique et son tas de muscles. C’est une musique assez entrainante, qui passerait bien aussi pour un trailer de jeu-vidéo.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;rightImg&quot;&gt;&lt;img src=&quot;/images/mattiaVladMorleo.jpg&quot; alt=&quot;Mattia Vlad Morleo&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;mattia-vlad-morleohttpswwwjamendocomtrack1305561fiore-d-inchiostro&quot;&gt;&lt;a href=&quot;https://www.jamendo.com/track/1305561/fiore-d-inchiostro&quot;&gt;Mattia Vlad Morleo&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;On termine en douceur avec un compositeur italien du nom de &lt;a href=&quot;http://nuke.morleoeditore.com/&quot;&gt;Mattia Vlad Morleo&lt;/a&gt;, il fait presque exclusivement de la musique classique avec comme instrument principal du piano. C’est le style le plus calme des 4 groupes/compositeurs que je présente ici, j’utilise notamment &lt;a href=&quot;https://www.jamendo.com/track/1305561/fiore-d-inchiostro&quot;&gt;Fiore D’Inchiostro&lt;/a&gt; pour le menu de mon jeu vidéo &lt;a href=&quot;http://ilphrin.com/kevin/projects/dodgell.html&quot;&gt;Dodgell&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si je devais parler de tous les groupes que j’écoute sur Jamendo on ne s’en sortirait pas donc je vais m’arrêter là pour le moment, je sortirais peut-être une deuxième article sur le sujet si l’envie s’en fait ressentir ;)&lt;/p&gt;
</description>
				<pubDate>Tue, 27 Dec 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/12/27/un-nouveau-stock-de-musiques-libres.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/12/27/un-nouveau-stock-de-musiques-libres.html</guid>
			</item>
		
			<item>
				<title>Avoir des commentaires sur un site Jekyll avec Staticman</title>
				
					<description>&lt;p&gt;Ça y est! Après maintenant 2 ans d’acharnement, j’ai enfin un système de commentaires fonctionnel et cool sur mon site! Pourquoi fut-ce si long? Eh bien pour deux raisons, la première c’est que je maintiens de site web avec le &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;CMS Jekyll&lt;/a&gt;, qui permet de faire des sites uniquement statiques. L’avantage c’est que c’est très simple à mettre en place et à développer (je m’embête pas avec des bases de données ou du PHP pour avoir du back-end). L’inconvénient, c’est que je peux difficilement profiter des avantages d’un site dynamique, et notamment les commentaires. Mais ça c’était avant qu’on me parle de &lt;a href=&quot;https://staticman.net/&quot;&gt;Staticman&lt;/a&gt;&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Lorsque j’ai posé la question sur le chat &lt;a href=&quot;irc:irc.freenode.net/jekyll&quot;&gt;IRC&lt;/a&gt; de jekyll pour savoir par quel moyen je pouvais faire marcher les commentaires sur mon site, tout de suite après on m’a redirigé vers le site de Staticman. L’idée de cet outil est d’apporter des possibilités de traitement de données sur des sites statique. Le site donne des exemples comme les commentaires, les reviews, ou les votes. En plus il est fait pour fonctionner avec un dépôt Github.&lt;/p&gt;

&lt;p&gt;En lisant la description détaillée sur le site et sur le &lt;a href=&quot;https://github.com/eduardoboucas/staticman&quot;&gt;dépôt Github du projet&lt;/a&gt;, on en apprend un peu plus sur son fonctionnement, par exemple pour un commentaire:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un utilisateur va vouloir rédiger un commentaire sur un site X, et cliquer sur “Envoyer”&lt;/li&gt;
  &lt;li&gt;Le formulaire envoie une requête au serveur NodeJS de Staticman, qui va recevoir la donnée, la traiter selon le fichier de configuration que vous écrivez sur le dépôt de votre site, et vous envoyer le contenu formaté sous forme de Pull Request sur votre dépôt pour ajouter un fichier dans le dossier _data/ de Jekyll&lt;/li&gt;
  &lt;li&gt;Vous acceptez la merge request, et il ne vous reste plus qu’à build votre site jekyll et à l’envoyer sur votre serveur pour voir votre joli commentaire.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Le fonctionnement de Staticman est vraiment aussi simple que ça. Le &lt;a href=&quot;https://staticman.net/docs&quot;&gt;site&lt;/a&gt; explique comment faire pour l’intégrer à son site. J’ai eu toutefois des petites difficultés notamment sur le fichier de configuration. Je vais donc vous poster ici le contenu de mon fichier et de mon template pour que vous voyiez comment ça marche en pratique:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;allowedFields&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;name&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;email&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;url&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;message&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;post_id&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;allowedOrigins&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ilphrin.com&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;master&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{fields.name}_{@timestamp}&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;yml&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;generatedFields&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;timestamp-seconds&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;moderation&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ilphrin.com&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;_data/comments/&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;requiredFields&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;name&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;email&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;message&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;post_id&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;commitMessage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;New&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;blog&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Il n’y a pas grand-chose à dire sur ce fichier-là il parle de lui-même à mon avis. Vous devez placer ce fichier à la racine de votre dépôt pour que Staticman le lise correctement. Voici ensuite la partie de la page HTML pour les formulaires sur mon site:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;commentform&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://api.staticman.net/v2/entry/Ilphrin/ilphrin.com/master/comments&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;options[slug]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;avoir-des-commentaires-dans-jekyll-avec-staticman&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;options[redirect]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://ilphrin.com/planet/2016/12/16/avoir-des-commentaires-dans-jekyll-avec-staticman.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;options[origin]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://ilphrin.com&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fields[post_id]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/planet/2016/12/16/avoir-des-commentaires-dans-jekyll-avec-staticman&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form_info&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title_form&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Nom:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;E-mail:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Site Web:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content_form&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;25&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fields[name]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(Requis)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;25&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fields[email]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(Requis, non publié)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;25&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fields[url]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(Optionnel)&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fields[message]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cols=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;60&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;comment&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placheolder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(Requis)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Envoyer ✔&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Là il ne faut surtout pas oublier deux choses: la première c’est l’action du formulaire à indiquer dans la balise &lt;strong&gt;&amp;lt;form&amp;gt;&lt;/strong&gt;, et la deuxième c’est que les différents champs que vous voulez renseigner sont dans des objets. Pour ajouter une option vous aurez &lt;strong&gt;&amp;lt;input name=”option[MonOption]”&amp;gt;&lt;/strong&gt; et pour un champ à traiter se sera &lt;strong&gt;&amp;lt;input name=”fields[MonChamp]”&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Voilà vous avez maintenant les outils pour mettre en place des commentaires facilement et rapidement pour votre site, vous n’aurez plus d’excuses ;)&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;
&lt;p&gt; Pour plus de lecture sur le sujet je vous conseille aussi ce très bon article (en anglais) &lt;a href=&quot;https://mademistakes.com/articles/jekyll-static-comments/&quot;&gt;SUR CE LIEN&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
				<pubDate>Fri, 16 Dec 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/12/16/avoir-des-commentaires-dans-jekyll-avec-staticman.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/12/16/avoir-des-commentaires-dans-jekyll-avec-staticman.html</guid>
			</item>
		
			<item>
				<title>Update: Neovim 0.1.7, petit tour</title>
				
					<description>&lt;p&gt;Ca y est, une nouvelle version de Neovim vient de sortir! Et avec elle sont lot de fonctionalités et de corrections bien sympa (voire même plus que sympa vous allez voir ;) ), profitons-en pour revoir les fonctionalités cool de Neovim&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Neovim est en développement depuis une paire d’années maintenant et, avec le soutien de nombreux contributeurs, rajoute un interêt non negligeable à ce bon vieux Vim qui sort une version toutes les décennies. Voici une liste non-exhaustives des nouveautés non seulement dans la 0.1.7 mais aussi dans le travail antérieur:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;En 0.1.7 nous avons maintenant le &lt;strong&gt;inccommand&lt;/strong&gt;, successeur au &lt;em&gt;incsub&lt;/em&gt;, nous permet d’avoir un aperçu temps-réel des modifs sur du texte, par le biais par example d’une substitution comme :%s/coucou/plop/g (une exemple &lt;a href=&quot;https://asciinema.org/a/92207&quot;&gt;ICI&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;La Newsletter #7 est sortie, et dedans un il y un retour sur ce qui a été fait&lt;/li&gt;
  &lt;li&gt;La commande &lt;em&gt;:tchdir&lt;/em&gt; qui permet de changer de répertoire localement à un ‘tab’&lt;/li&gt;
  &lt;li&gt;La ‘statusline’ peut maintenant aligner un nombre indéfini d’élements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/extr0py/oni&quot;&gt;oni&lt;/a&gt; est un GUI pour Mac, mais le support de Linux est en cours (chez moi il se lance mais n’affiche rien d’autre qu’une barre et une page blanche), il peut réussir là ou NyaoVim à été un peu décevant à mon goût&lt;/li&gt;
  &lt;li&gt;La commande &lt;em&gt;:CheckHealth&lt;/em&gt; qui permet d’avoir des rapports d’erreurs sur la configuration, le statut des plugins, et diverses informations comme le statut de la gestion du clipboard sur votre système&lt;/li&gt;
  &lt;li&gt;Les utilisateurs de Debian seront heureux d’apprendre que Neovim sera dans la &lt;a href=&quot;https://packages.debian.org/stretch/neovim&quot;&gt;prochaine version de Debian&lt;/a&gt; ;)&lt;/li&gt;
  &lt;li&gt;Le transcompileur VimL vers Lua fait des progès intéressants, mais sont développement est mis en arrière-plan par rapport au support de Windows.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bien sûr ce n’est pas une liste complète, pour cela je vous invite à aller voir &lt;a href=&quot;https://neovim.io/news/&quot;&gt;CECI&lt;/a&gt; et &lt;a href=&quot;https://github.com/neovim/neovim/releases/tag/v0.1.7&quot;&gt;CELA&lt;/a&gt; pour beaucoup plus de détails.&lt;/p&gt;

&lt;p&gt;Désolé pour cet article un peu court, et en retard par rapport a mon planning hebdomadaire mais je dois avoue que j’ai pas mal de boulot en ce moment, mais promis je reviendrais assez rapidement, probablement pour parler des commentaires sur mon blog qui sont maintenant fonctionnel et ce grâce à Staticman!&lt;/p&gt;
</description>
				<pubDate>Mon, 12 Dec 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/12/12/update-neovim-1-7-tour-des-fonctionalites.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/12/12/update-neovim-1-7-tour-des-fonctionalites.html</guid>
			</item>
		
			<item>
				<title>C&#39;était: Le Hackaton MesInfos à Lyon</title>
				
					<description>&lt;p&gt;Bon pour commencer l’explication il faudrait parler de &lt;a href=&quot;cozycloud.cc&quot;&gt;CozyCloud&lt;/a&gt;. Pour ceux qui ne savent pas, CozyCloud est un outil de cloud (j’ai l’impression de rien dire) personnel. Il fonctionne comme un serveur sur lequel on utilise des applications. Applications qui sont trouvable soit sur le marketplace officiel, et qui contient une vingtaine d’applications, soit sur un dépot Github quelconque. Ces applications peuvent être sur tout et n’importe quoi. Mais l’interêt consiste surtout à pouvoir être le seul à posséder ses données, car CozyCloud est fait pour être auto-hébergé.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;&lt;img src=&quot;/images/cozy_01.png&quot; alt=&quot;Cozycloud&quot; /&gt;&lt;/p&gt;

&lt;p&gt;C’est-à-dire que vous pouvez facilement (moyennant quelques connaissances techniques quand même) installer un CozyCloud chez vous sur un serveur personnel. Du coup vous disposez d’un super outil de cloud, mais vous avez la main sur ce qui sort et qui rentre puisque c’est à vous ;)&lt;/p&gt;

&lt;p&gt;Depuis plusieurs mois maintenant, CozyCloud à travaillé avec la &lt;a href=&quot;http://fing.org/?Presentation&quot;&gt;Fing&lt;/a&gt;, un think tank dans le domaine de la transformation numérique (et pas digital, n’est-ce pas), sur le projet MesInfos. &lt;a href=&quot;http://mesinfos.fing.org/&quot;&gt;MesInfos&lt;/a&gt; propose aux utilisateurs de reprendre le contrôle de leurs données, et ce à travers un concept de “Self Data”. Pour comprendre ce terme, je vais simplement citer MesInfos: Le Self Data, c’est devenir l’acteur de ses données personnelles. Ne plus se contenter de les produire pour que d’autres les exploitent, mais bien récupérer le contrôle de celles-ci pour les utiliser à ses propres fins. Le Self Data peut ainsi se définir comme « la production, l’exploitation et le partage de données personnelles par les individus, sous leur contrôle et à leurs propres fins ».&lt;/p&gt;

&lt;p&gt;MesInfos à tissé des liens partenariaux avec des entreprises pour que celles-ci fournissent un moyen à leur utilisateurs de voir les données récoltés sur leur personne. On va pouvoir, par exemple, récupérer ses factures EDF, ou dans une tout autre mesure récupérer ses commits sur Github. La palette de possibilités est assez large et ne dépend que du nombre d’entreprises partenaires, mais on a déjà un aperçu sur le site de MesInfos rubirques &lt;a href=&quot;http://mesinfos.fing.org/partenaires/&quot;&gt;partenaires&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dans CozyCloud on retrouve donc une nouvelle application qui s’appelle My Accounts (Mes comptes en français je suppose, j’ai mon pc en anglais du coup je ne saurais dire). Dedans on va pouvoir se connecter à un service en entrant ses identifiants comme si on se connectait à ledit service, et une fois que c’est fait CozyCloud récupère automatiquement et périodiquement vos données, qui finissent je le rappelle dans votre espace CozyCloud, aucune donnée ne sors de chez vous.&lt;/p&gt;

&lt;p&gt;En brut il n’y a pas grand chose d’utile à ces données, mais l’interêt va consister ensuite à créer des applications CozyCloud qui vont utiliser intelligemment ces données. Et c’est enfin le moment où je parle du sujet de cet article: Le Hackaton MesInfos qu’il y a eu une semaine plus tôt au &lt;a href=&quot;http://www.tuba-lyon.com/&quot;&gt;Tubà&lt;/a&gt; de Lyon, du Vendredi soir au Dimanche soir.&lt;/p&gt;

&lt;p&gt;En un week-end il fallait imaginer une utilisation des données de MesInfos dans CozyCloud à travers une application. Les critères de validations sont sur le nombres de services sur lequelles nous prenons des données, la pertinence du projet, et l’état d’avancement à la fin du weekend.&lt;/p&gt;

&lt;p&gt;Il fallait tout d’abord composer les groupes. Autant dire que je ne connaissais presque personne à part les autres étudiants d’Epitech présents à cet événement. J’ai donc rejoint une personne qui avait présenté son idée de projet lors des présentation. Nous avons formé un groupe complet de 6 personnes aux compétences très diverses.&lt;/p&gt;

&lt;p&gt;Nous étions 3 étudiants d’Epitech dans le groupe (moi seul 3e année), les autres avaient des activités qui n’avaient aucun rapport (j’ai oublié parce que je suis un poisson rouge). Le projet s’appelait BeGreen. L’idée était d’utiliser les données sur la consommation de l’utilisateur, et de lui présenter son empreinte écologique d’une part, et de l’inciter ensuite à l’améliorer d’autre part grâce à la gamification.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/begreen.png&quot; alt=&quot;BeGreen Logo&quot; class=&quot;medium&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le Hackaton s’est déroulé au Tubà à Lyon, c’est un lieu que je ne connaissais absolument pas. (Alors que je passe deux fois par jour devant en allant au bahut…) C’est un endroit où l’on peut essayer des services et projet innovant, ou même venir avec son idée de projet pour l’aider a le développer.&lt;/p&gt;

&lt;p&gt;Donc il y avait tout ce beau monde (CozyCloud, MesInfos, la Fing qui est a l’origine de MesInfos, le Tubà) des représentant du Grand Lyon et de ce qui touche à l’Open Data (comme Mme &lt;a href=&quot;https://twitter.com/n_vernus_prost&quot;&gt;Nathalie VernusProst&lt;/a&gt;), afin de nous aider et conseiller.&lt;/p&gt;

&lt;p&gt;Mis à part un chef de projet qui nous a fait perdre beaucoup de temps à monopoliser le temps de parole et un léger conflit le concernant, le weekend s’est très bien déroulé! En plus il y avait un très bon couscous (si ya des orgas qui lisent mon article, merci pour le couscous j’en ai encore mangé en rentrant chez moi x) ).&lt;/p&gt;

&lt;p&gt;Du coup je vais raccourcir et en venir aux trois groupes qui ont gagnés. Le premier est “Qui suis-je”, qui était principalement composé de camarades de ma promo à Epitech qui ont profités de ce Hackaton pour réfléchir à leur projet de fin d’études (qui correspondait très bien)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mesinfos_01.jpeg&quot; alt=&quot;Qui suis-je&quot; class=&quot;small&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le deuxième groupe s’appelait “Métro Boulot Dodo”. Je ne vais pas trop détailler sur ce projet parce que… j’ai pas bien compris ce qu’ils font je dois avouer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mesinfos_02.jpeg&quot; alt=&quot;Metro boulot dodo&quot; class=&quot;small&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Et enfin le 3e groupe s’appelait “Billy”, ça à été mon groupe préféré car leur présentation était très centrée sur l’humour et ça à beaucoup marché. Billy est une application qui va afficher l’argent qu’il vous reste à dépenser dans vos loisirs, et faisant la différence entre votre montant sur votre compte bancaire et les factures qu’il vous reste à payer. L’interface présentée était très simple (une grosse icone au milieu avec le montant)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mesinfos_03.jpg&quot; alt=&quot;Billy&quot; class=&quot;small&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Donc résultat un très bon weekend et que je re-ferais avec plaisir, ça m’a permis de voir un peu plus comment développer des applications dans CozyCloud et avec NodeJS, et ça m’a donné quelques idées d’applications à faire à l’occasion (comme une vue des commits Github, j’aime pas du tout l’interface du profil Github).&lt;/p&gt;
</description>
				<pubDate>Sun, 04 Dec 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/12/04/cetait-le-hackaton-mes-infos-a-lyon.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/12/04/cetait-le-hackaton-mes-infos-a-lyon.html</guid>
			</item>
		
			<item>
				<title>Encore de l&#39;UML avec StarUML</title>
				
					<description>&lt;p&gt;Oui je parle encore d’UML et de conception, mais promis après cet article ma période UML et maquette est finie ;) (quoique j’ai bien envie de continuer avec Figma, mais on a le temps avant ça!). Après l’essai de Umbrello, moi et un ami avons cherché un autre logiciel pour faire de l’UML et nous sommes tombés sur StarUML&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Bon je vais en décevoir quelques’un par contre, StarUMl n’est pas un logiciel libre, et il dispose même de deux version, une payante et une gratuite. Mais on est rassuré de savoir que la version gratuite fonctionne comme WinRAR: On nous demande d’acheter la version payante mais si on ne veut pas on peut très bien continuer avec la version gratuite qui est largement suffisante pour la plupart des utilisations! (Note: La plupart des extensions officielles sont elles open source et disponible sur Github)&lt;/p&gt;

&lt;p&gt;Déjà en arrivant sur la page du projet, on a une assez bonne surprise puisque StarUML est multi-plateforme et est donc installable nativement sous Linux, Windows et Mac OS X. Puisque nous étions deux à l’essayer, nous avons pu doubler les tests. Moi sous Linux Mint 18 et mon camarade sous Windows 10.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sous Windows 10 installation rapide et sans soucis.&lt;/li&gt;
  &lt;li&gt;Sur mon Linux Mint 18 j’ai des soucis de dépendances, “Dependency not satisfiable: libgcrypt11 (&amp;gt;= 1.4.5)” mais j’ai libgcrypt20 d’installé, donc je ne suis pas bien sûr de comprendre le message. Dans le doute j’envoie un message à l’équipe de StarUML pour poser la question.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Du coup pour le faire fonctionner j’ai pris la version windows que j’ai installé avec Wine et PlayOnLinux au bout de quelques essais.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/staruml.jpg&quot; alt=&quot;Capture StarUML&quot; /&gt;&lt;/p&gt;

&lt;p&gt;J’ai l’impression de commencer cet article en faisant de la mauvaise pub pour StarUML, mais en vérité j’aime beaucoup ce logiciel! Sur le site officiel on a une liste de ses fonctionnalités phares à mon avis tout à fait subjectif:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Support de l’UML 2&lt;/li&gt;
  &lt;li&gt;Support de ERD pour la modélisation de bases de données&lt;/li&gt;
  &lt;li&gt;Gestionnaire d’extension (Je n’ai pas réussi à le faire marcher sous Wine, mais il y a une bonne documentation de l’API et plusieurs extensions vraiment sympa comme le support du Markdown pour la documentation des diagrammes)&lt;/li&gt;
  &lt;li&gt;Generation de code à partir d’un diagramme dans divers langage: C#, Java, C++, etc. Certaines extensions rajoutent le support d’autres langages!&lt;/li&gt;
  &lt;li&gt;Export en PDF&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En plus de cela, StarUML dispose d’une interface érgonomique qui nous permet de rapidement rajouter un élément, trouver ce que l’on cherche, et modifer un élément existant. Dans la capture d’écran que j’ai mis un peu plus haut, on peut voir que l’écran est découpé en trois zones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A gauche la liste des diagrammes et des composants que l’on peut rajouter: Classes, Interfaces, relations, flèches, notes, etc.&lt;/li&gt;
  &lt;li&gt;Au centre la vue du digramme en cours, c’est là qu’on va faire le gros de nos manipulations. En bas a droite de cette vue on peut voir un miniature de la vue, on peut se déplacer dedans avec la souris et StarUML va automatiquement zommer ou dé-zoomer si on se déplace plus ou moins près dans la vue&lt;/li&gt;
  &lt;li&gt;A droite une vue en arborescence de tous les composants que l’on a rajouté, ainsi qu’une boite de configuration pour l’élément sélectionné si on veut modifier quelque chose manuellement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;StarUML se rapproche déjà beaucoup plus de ce que je recherchai en terme de création de diagramme UML (à savoir que je me concentre principalement sur les diagrammes de classe) que Umbrello, qui est certes puissant et fait son travail mais ne dispose pas d’une interface aussi poussée et pratique d’utilisation.&lt;/p&gt;

&lt;p&gt;Je pense qu’on a un exemple typique de différences que l’on peut retrouver entre un logiciel entièrement gratuit et libre et un autre logiciel qui dispose d’un business model pour assurer son développement. Je pense qu’on peut faire un logiciel libre et même gratuit tout en ayant un moyen de financer son projet. Que ce soit un Kickstarter, un Tipee, des partenariats commerciaux, la publicité, les “bonus” payants, ou que sais-je encore.&lt;/p&gt;

&lt;p&gt;Il y a aussi la façon dont on exploite les ressources d’une communauté (je sais pas si exploiter est un très joli mot dans cette situation). Par exemple le fait de fournir une API et une documentation bien faite pour développer des extensions à son logiciel est un excellent moyen de booster un projet (Dois-je parler de Vim/Neovim, Firefox, LibreOffice, et d’autres?).&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;
Je pense bientot refaire le système de commentaire de mon site, ce truc codé à la main ne fonctionne pas du tout et je ne reçois jamais les commentaires correctement. J&#39;ai entendu parler de HashOver pour les sites statiques je vais voir ce que ça donne!
&lt;/p&gt;
&lt;/div&gt;
</description>
				<pubDate>Thu, 24 Nov 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/11/24/encore-de-l-uml-avec-staruml.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/11/24/encore-de-l-uml-avec-staruml.html</guid>
			</item>
		
			<item>
				<title>Faire des maquettes avec Figma</title>
				
					<description>&lt;p&gt;Quand il s’agit de faire des maquettes d’applications, on peut soit se tourner vers des solutions Web gratuites telles que &lt;a href=&quot;https://balsamiq.com/&quot;&gt;Balsamiq&lt;/a&gt; ou &lt;a href=&quot;https://moqups.com/&quot;&gt;Moqups&lt;/a&gt; soit utiliser des logiciels payant (et souvent propriétaires) comme &lt;a href=&quot;https://www.sketchapp.com/&quot;&gt;Sketch&lt;/a&gt;. Je suis étudiant, j’ai pas beaucoup de sous, et j’ai donc une préférences pour les outils Web cités en premiers. Parmi ces alternatives, j’ai eu connaissance d’un petit nouveau par le biais de la newsletter d’&lt;a href=&quot;https://www.invisionapp.com/&quot;&gt;Invision&lt;/a&gt; (très sympa pour faire des maquettes aussi, et gratuit dans sa version normale). Je ne suis pas un expert de ce qui touche à l’UI et l’UX, mais je compte bien le devenir et le premier pas pour ça c’est la pratique! Dans cette optique là je voulais vous parler de &lt;a href=&quot;https://www.figma.com&quot;&gt;Figma&lt;/a&gt;.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Bon déjà je pars avec un avis subjectif puisque j’accroche beaucoup au nom et au style du site. Ensuite il faut savoir aussi que j’aime beaucoup les outils qui innovent dans leur domaine en ajoutant une composante collaborative (comme le font très bien les outils Framasoft d’ailleurs dont cet excellent &lt;a href=&quot;https://framapad.org/&quot;&gt;Framapad&lt;/a&gt;). Figma est dans cette catégorie-là, puisque vous allez pouvoir faire de la conception d’application ou de site simultanément avec vos collègues, amis, autres!&lt;/p&gt;

&lt;p&gt;Lorsque l’on arrive sur le site du projet, on est accueilli avec une demo de l’application avec deux personnes qui travaillent sur un projet en même temps:&lt;/p&gt;

&lt;div style=&quot;width:85%; height:634px;&quot;&gt;
&lt;iframe style=&quot;border:none; width:100%; height:100%;&quot; src=&quot;https://player.vimeo.com/video/184067080?background=1&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;L’interface se divise en 4 zone:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A gauche la liste des calques et objets&lt;/li&gt;
  &lt;li&gt;Au centre le canvas pour travailler et voir sa maquette&lt;/li&gt;
  &lt;li&gt;A droite un panneau de paramètre de l’élément sélectionné ou de l’outil&lt;/li&gt;
  &lt;li&gt;Et en haut une barre d’outils avec largement de quoi s’amuser&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tout est fait en vectoriel, donc on peut mettre à l’échelle autant qu’on veut le contenu de sa maquette ça n’influencera pas sur la qualité de la maquette! (Enfin, je ne vais pas faire un cours sur les formats vectoriel x) )&lt;/p&gt;

&lt;p&gt;Sauf que ça c’est dans la pratique, mais dans Figma je n’ai pas vu de bouton pour choisir la finesse des images lors de l’export du document, du coup on se retrouve avec un fichier zip et des .png dedans, qui sont certes d’assez bonne qualité mais des fois qu’on veuille plus ou moins lourd comme fichiers, et bien on n’a pas le choix.&lt;/p&gt;

&lt;p&gt;J’aime beaucoup le design de l’interface et je pense que je vais essayer d’aller un peu plus loin avec Figma, et peut-être vous ressortir un article un peu plus détaillé de ses fonctionalités, et pourquoi pas un tutoriel, une fois que j’aurais essayé de faire deux trois travaux de conception avec.&lt;/p&gt;

&lt;p&gt;Si il y a des adeptes de Figma déjà dans le coin, hésitez pas à me dire ce que vous en pensez ou même si vous connaissez des alternatives libres qui font ce genre de chose, ça ce serait top =D&lt;/p&gt;
</description>
				<pubDate>Sat, 19 Nov 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/2016/11/19/faire-des-maquettes-avec-figma.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2016/11/19/faire-des-maquettes-avec-figma.html</guid>
			</item>
		
			<item>
				<title>Umbrello: Un outil pour faire de l&#39;UML</title>
				
					<description>&lt;p&gt;Pour nos projets a Epitech on doit de plus en plus travailler la partie conception plutôt que le projet en lui-même. Déjà parce que nos projets se complexifient: On passe d’un simple bash/sh à recoder à un équivalent de Mumble avec un client et un serveur tous les deux multi-plateforme. Et aussi bah… parce que ya pas que le code dans le dév, il faut réfléchir consciencieusement à l’architecture de son projet, aux différents composants que l’on va créer/coder et comment on va lier tout ce bazar.&lt;/p&gt;

&lt;!--break--&gt;

&lt;h3 id=&quot;luml&quot;&gt;L’UML&lt;/h3&gt;

&lt;p&gt;L’un des moyens les plus courant, les plus utilisés, de nos jours c’est l’UML pour &lt;em&gt;Unified Modelling Language&lt;/em&gt;. Il faut voir l’UML comme une RFC, une normalisation de la conception de systèmes. Ce n’est pas le nom d’un logiciel, mais d’un protocole à utiliser dans son logiciel ou son bout de papier, pour concevoir son programme.&lt;/p&gt;

&lt;p&gt;Avant de vous parler d’ Umbrello, je vais parler un peu plus en détail du fonctionnement de l’UML et comment en faire. Si vous connaissez déjà vous pouvez défiler la page pour voir directement le moment ou je parle d’Umbrello ;) (je mets un petit titre)&lt;/p&gt;

&lt;p&gt;En programmation, l’UML est particulièrement adapté lorsqu’on utilise un paradigme Orienté Objet type C++, Java, Python, etc. Mais rien n’empêche de l’utiliser pour d’autres choses! Lorsque l’on conçoit son programme, on passe par une phase d’abstraction. C’est-à-dire que l’on prend les éléments de ce qu’on veut obtenir, et on regarde s’il n’existe pas des caractéristiques communes entre ces éléments.&lt;/p&gt;

&lt;p&gt;On va prendre un exemple assez simple pour imager tout ça. Imaginez que vous êtes en train de développer un outil de simulation de téléviseurs, pour avoir une vue 3D, faire des tests, voir le fonctionnement ou n’importe quoi d’autre on s’en fiche. Votre programme permet de représenter des téléviseurs existants.&lt;/p&gt;

&lt;p&gt;On peut donc dire qu’on aura beaucoup de types de téléviseurs, avec tout un tas de marques, et de caractéristiques propres à chacun. Mais dans tous les cas ce sont les TV donc on doit pouvoir en déduire un certain nombre de propriétés communes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Toutes les TV ont une marque, des haut-parleurs, des câbles, etc.&lt;/li&gt;
  &lt;li&gt;Toutes les TV doivent pouvoir s’allumer, s’éteindre, changer de chaine, monter/descendre le volume, etc.&lt;/li&gt;
  &lt;li&gt;Toutes les TV ne fonctionnent que selon certains critères, par exemple seulement si la prise est branchée et s’il y a le câble ou l’antenne&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lorsque l’on va représenter ceci, on va avoir une classe dite “abstraite” mère appelé AbstractTV qui va contenir des cases et des fonctions vides pour chacun de ces attributs. Ensuite toutes les autres classes de TV vont découler de celle-ci, elles vont en &lt;em&gt;hériter&lt;/em&gt;, et devront donc s’appuyer sur le modèle d’AbstractTV.&lt;/p&gt;

&lt;p&gt;Et on peut donc représenter tout ça avec l’UML, je ne vais pas faire un schéma, je vous laisse le soin de trouver des tutos bien mieux que ce que je pourrais faire ;) Comme &lt;a href=&quot;http://www.tutorialspoint.com/uml/&quot;&gt;celui-ci&lt;/a&gt; ou &lt;a href=&quot;http://laurent-piechocki.developpez.com/uml/tutoriel/lp/cours/&quot;&gt;celui-là&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;umbrello&quot;&gt;Umbrello&lt;/h3&gt;

&lt;p&gt;J’ai découvert donc récemment un logiciel sous KDE pour faire de l’UML rapidement et simplement qui s’appelle… &lt;a href=&quot;https://umbrello.kde.org/&quot;&gt;Umbrello&lt;/a&gt; (vous l’auriez pas deviné hein?) Je n’ai utilisé pour l’instant que l’outil pour faire des diagrammes de classe, mais bien sûr la plupart des types de diagrammes pour l’UML sont réalisables.&lt;/p&gt;

&lt;p&gt;Ce logiciel est en développement et une version mineure sors tous les 4 mois à peu près. Une petite capture pour présenter la bête:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/umbrello01.png&quot; alt=&quot;umbrello interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En haut on a la barre d’outils pour faire la plupart des opérations nécessaires: création d’une interface, d’une classe, flèche de composition, d’agrégation, etc. Sur la gauche on a un panneau de détails sur les boites qu’on a crée sous forme d’arborescence et d’autres petits outils que je vous laisserais découvrir ;)&lt;/p&gt;

&lt;p&gt;On l’a utilisé tout le long de notre projet de ces deux dernières semaines et nous sommes relativement satisfaits. Il y a deux soucis assez désagréable dans Umbrello que je trouve dommage:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;La molette fait un zoom/dezoom plutôt qu’un défilement vertical/horizontal, et c’est assez contre-intuitif en plus de n’être absolument pas pratique, ni utile puisqu’il y a une petite barre de réglage du zoom en bas à droite largement suffisante.&lt;/li&gt;
  &lt;li&gt;Pas de Ctrl-Z ou de Ctrl-Y pour revenir dans l’historique des actions, en fait le seul moyen d’annuler ce qu’on vient de faire consiste soit à refaire manuellement nos mouvements en sens inverse, soit on peut utiliser “l’historique de commandes”, et on clique sur l’état auquel on veut revenir. L’historique est donc déjà implémenté mais pas moyen d’y accéder rapidement comme dans presque n’importe quel logiciel avec des raccourcis clavier.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;J’espère qu’il y aura des modifications faites sur ce sujet d’ici les prochaines versions, j’irais jeter un oeil sur leur liste de bugs pour essayer d’en parler. Sinon je vous conseille de l’essayer il est tout de même pratique et support quelques fonctionnalités avancés telles que l’import/export de code vers/depuis l’UML.&lt;/p&gt;
</description>
				<pubDate>Sun, 13 Nov 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/11/13/umbrello-un-outil-pour-faire-de-l-uml.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/11/13/umbrello-un-outil-pour-faire-de-l-uml.html</guid>
			</item>
		
			<item>
				<title>Un peu de SEO facile avec Jekyll</title>
				
					<description>&lt;p&gt;Quand on se balade sur Internet on en vient forcément à taper quelque chose sur son moteur de recherche préféré, la magie opère, et on se retrouve avec des tonnes des liens correspondant à ce que l’on cherchait, selon le titre du site, de l’article, de la page, ou du contenu. Mais pour que cela se fasse il faut indiquer au moteur de recherche à quoi sert chaque élément de notre page et quel est son role afin d’être référencé correctement. C’est le but de la SEO que je vais expliquer sans rentrer dans les détails&lt;/p&gt;

&lt;!--break--&gt;
&lt;p&gt;La SEO (pour Search Engine Optimization si vous avez envie de crâner en soirée mondaine web), “est un ensemble de techniques visant à optimiser la visibilité d’un site web dans les pages de résultats de recherche” (cf &lt;a href=&quot;https://fr.wikipedia.org/wiki/Optimisation_pour_les_moteurs_de_recherche&quot;&gt;Wikipédia&lt;/a&gt;). Lorsque vous créez une page Web basiqe, vous utilisez du HTML pour baliser les différents types de contenu qui composent votre page. Par exemple pour la page que vous lisez ça donne un truc dans ce genre:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
    Kevin / Ilphrin
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navigation&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Kevin/Ilphrin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Accueil&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    ...
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Un peu de SEO facile avec Jekyll&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Quand on se balade sur internet on en vient forcément...&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Enfin bref, vous avez compris l’idée. Dans ce bout de code on va identifier quelque éléments auxquels nous pouvons attribuer un rôle. Je ne parle pas encore de SEO mais juste de “Que fait tel élément?”:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;La balise &lt;em&gt;body&lt;/em&gt; qui sert à indiquer le contenu d’une page de ce blog&lt;/li&gt;
  &lt;li&gt;Le &lt;em&gt;titre&lt;/em&gt; en h1 du blog dans la div ‘title’&lt;/li&gt;
  &lt;li&gt;Le &lt;em&gt;contenu&lt;/em&gt; de l’article, dans la balise div ‘content’&lt;/li&gt;
  &lt;li&gt;Le &lt;em&gt;titre de l’article&lt;/em&gt; avec la balise h1 dans la div ‘content’&lt;/li&gt;
  &lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et bien avec le travail de la SEO, on va pouvoir dire tout ça à Google, Bing, DuckDuckGo, Lilo, Qwant, (rajouter ici votre moteur de recherche favori). Et ceci vient d’un travail de sémantique, c’est-à-dire qu’au même titre qu’en langage humain nous rajoutons des adjectifs pour décrire des objets, nous allons rajouter des mots-clés à nos balises HTML pour décrire ces “objets”.&lt;/p&gt;

&lt;p&gt;Il y a trois mots-clés que je vais vous apprendre ici pour faire ça:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;itemscope:&lt;/em&gt; Permet de dire au MDR (Moteur De Recherche) qu’un bloc concerne un objet spécifique.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;itemtype:&lt;/em&gt; Définit le type d’un élémént. En français on aurait quelque chose comme: Ceci est un &lt;em&gt;caillou&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;itemprop:&lt;/em&gt; Ajoute une propriété au type pour le définir précisément. En français: Ceci est un caillou &lt;em&gt;rose&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour le premier il est assez simple de savoir où on va le place. Dans mon exemple du dessus on placerait l’attribut itemscope aux balises &amp;lt;body&amp;gt; et &amp;lt;div class=&quot;content&quot;&amp;gt;. 
Pour les deuxièmes et troisièmes ça va être un poil plus complexe. Nous allons avoir besoin de &lt;a href=&quot;https://schema.org&quot;&gt;schema.org&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Schema.org est le standard sur le web pour la classification de contenu structuré, comme des flux de données, des pages web, ou même des emails. Ce site est un énorme annuaire de tous les types et propriété de types qui existent et qui sont utilisé par les moteurs de recherche. Chaque fois que vous voudrez définir un élément de votre page, c’est sur ce site qu’il vous faudra aller pour trouver le type correspondant à ce que vous voulez, ainsi que les propriétés qui lui sont associés.&lt;/p&gt;

&lt;p&gt;La totalité de ces types forme un hiérarchie ordonné et logique. Par exemple le type Blog descend du type CreativeWork dont descend le type Thing (tout le monde descend de lui si je ne dis pas de bêtises). Sur une page de type, vous avez la liste des propriétés qui lui sont accessible.&lt;/p&gt;

&lt;p&gt;Assez de blabla mettons en place tout ça. On regarde les quelques schemas qui nous concerne, on prend des propriétés à balancer en miam miam au code, et on applique tout ça. Pour l’exemple si dessus nous obtenons:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
    Ilphin / Kevin
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemscope&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemtype=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schema.org/Blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navigation&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemprop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Ilphrin/Kevin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemscope&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemtype=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schema.org/SiteNavigationElement&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sortie&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    ...
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemprop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;articleBody&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Un peu de SEO difficile avec Hide&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Quand on se balade IRL on en vient forcément...&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si vous avez l’oeil vif, vous aurez remarqué que le choix d’un type de schéma est très simple, il suffit d’indiquer l’URL du schéma voulu. Le moteur de recherche n’aura qu’à faire le lien lui-même ;). On se retrouve donc avec:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pour &lt;em&gt;body:&lt;/em&gt; Un itemscope, et un itemtype qui vaut Blog&lt;/li&gt;
  &lt;li&gt;Pour &lt;em&gt;‘title’:&lt;/em&gt; Un itemprop “author”&lt;/li&gt;
  &lt;li&gt;Pour le &lt;em&gt;ul:&lt;/em&gt; Un itemscope aussi et un itemtype qui vaut SiteNavigationElement&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Au final ça reste assez logique, mais le plus long va être de trouver les types que vous voulez pour vos pages. Pour ma part je n’en ai pas mis beaucoup, mais ça à suffit à ce que je sois plus facilement trouvable sur Google comme l’ont indiqués mes analytics ovh et piwik (j’ai plus les chiffres piwik parce que je l’ai supprimé malencontreusement, mais d’après les graph d’OVH, j’ai eu environ 1500 visites le jour de la sortie de mon article sur Terminix, contre 300 environ avant pour les autres articles). Et je suis presque sûr que j’ai dû mettre un itemtype ou un itemprop au mauvais endroit sur mon site x)&lt;/p&gt;

&lt;p&gt;Finalement, pourquoi est-ce que je parle de Jekyll? (Pour rappel, c’est ce que j’utilise comme outil pour faire mon site, c’est un CMS de site statique) Et bien c’est qu’avec le système de layouts il est assez facile de placer ses attributs dans ses modèles et de laisser Jekyll les placer ensuite quand il génère les pages.&lt;/p&gt;

&lt;p&gt;Un petit exemple de code encore avec mon template de base pour chaque page du site:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/images/LogoV1.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/js/previous.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
    Kevin / Ilphrin
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemscope&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemtype=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schema.org/Blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maintenant que ma balise&lt;/p&gt;

&lt;p&gt;est mise en place, chacune de mes pages aura son itemscope et son type “Blog”. C’est un exemple stupide mais au moins vous voyez l’idée.
On peut aussi imaginer pouvoir mettre en place des itemtype specifique à chaque article, en mettant une variable dans le YAML du post, et lors du traitement et de la génération des pages Jekyll placerait l’itemtype adéquat.&lt;/p&gt;

&lt;p&gt;Bon pour ça je suppose que le plus propre et modulaire serait de faire un plugin Jekyll, mais vu que j’aime pas le Ruby c’est pas prévu dans mon emploi du temps. Par contre si ça intéresse quelqu’un… :D&lt;/p&gt;

</description>
				<pubDate>Sun, 06 Nov 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/11/06/un-peu-de-seo-facile-avec-jekyll.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/11/06/un-peu-de-seo-facile-avec-jekyll.html</guid>
			</item>
		
			<item>
				<title>Terminix en version 1.30</title>
				
					<description>&lt;p&gt;Il ne me semble pas avoir déjà parlé de Terminix jusqu’à présent donc je vais brièvement expliquer ce qu’est ce super projet.&lt;/p&gt;

&lt;p&gt;Terminix est un émulateur de terminal en tuiles( tiling) pour Linux avec GTK3. C’est la description officielle du projet. Avec ce logiciel on dispose d’un terminal qu’on peut séparer de plusieurs façons: vertical, horizontal, ou avec des onglets. Son utilisation de GTK3 est plutôt cool puisqu’on se retrouve avec une interface très clean et agréable a l’oeil (et des petites animations, comme j’en raffole!)&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Si on regarde la page &lt;a href=&quot;https://github.com/gnunn1/terminix&quot;&gt;Github du projet&lt;/a&gt; on a une liste assez longue de fonctionnalités toutes plus sympa les unes que les autres. On peut citer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Le ré-arrangement des tuiles de terminal avec du &lt;strong&gt;drag n drop&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Le mode &lt;a href=&quot;https://github.com/gnunn1/terminix/wiki/Quake-Mode&quot;&gt;Quake&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Les notifications lors de la fin d’une tâche&lt;/li&gt;
  &lt;li&gt;La sauvegarde de la sortie du terminal&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour ce qui est du mode Quake ce n’est pas une fonctionnalité que j’utilise très souvent, mais avec l’ergonomie de Terminix c’est assez agréable à utiliser. On peut installer ce logiciel sur à peu près toutes les principales distributions GNU/Linux.&lt;/p&gt;

&lt;p&gt;Il y a plusieurs semaines la nouvelle version de Terminix est sortie, rajoutant notamment:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Le mode Quake cité précédemment&lt;/li&gt;
  &lt;li&gt;Un gestionnaire de mot de passe qui utilise Gnome Keyring&lt;/li&gt;
  &lt;li&gt;Les liens personnalisés&lt;/li&gt;
  &lt;li&gt;Un gestionnaire de presse-papiers avancé&lt;/li&gt;
  &lt;li&gt;Un nom de session par défaut&lt;/li&gt;
  &lt;li&gt;Le changement de session rapide&lt;/li&gt;
  &lt;li&gt;Le support expérimental pour les Trigger en installant un patch VTE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il y a deux changements qui pour moi sont très intéressants et peuvent donner à réfléchir sur les possibilités qu’ils offrent.&lt;/p&gt;

&lt;p&gt;Tout d’abord il y a les liens personnalisés, qui nous permettent de lancer une commande lorsque l’on clique sur un bout de phrase sur la sortie standard qui rentre dans la condition d’une expression régulière. Dans une &lt;a href=&quot;https://www.youtube.com/watch?v=8qvZ37ojE0c&quot;&gt;vidéo de présentation&lt;/a&gt; on peut voir un exemple de ça pour lancer gedit si on a un fichier suivi d’un numéro de ligne dans la sortie standard. C’est un exemple assez simple, mais je pense que c’est vraiment une fonctionnalité qui à du sens, avec peut-être des gens qui vont commencer à partager leur regexp respectifs qui sait :D Je ne l’ai pas encore utilisé parce que je fais tout dans neovim en ce moment, mais je vais me pencher dessus&lt;/p&gt;

&lt;p&gt;La deuxième fonctionnalité qui m’a marqué c’est le changement de session rapide. Je n’ai pas réussi à le faire marcher sur mon pc (il faut un peu bidouiller pour l’instant de ce que j’ai compris). En gros en fonction de l’utilisateur sur lequel vous êtes identifié et sur quelle machine (si vous êtes en SSH sur un autre pc par exemple), vous allez avoir un profil de thème spécifique qui sera affiché, et lorsque vous changerez d’utilisateur ou de machine, vous passerez au nouveau profil de thème correspondant. Encore une fois dans la vidéo de présentation il y a un exemple de ça qui est utilisé. C’est une fonctionnalité plus esthétique qu’autre chose, mais je trouve ça très sympa aussi =D&lt;/p&gt;

&lt;p&gt;Reste à voir s’il y aura des patchs pour mettre à jour VTE de GTK et ne plus avoir à bidouiller avec Terminix pour avoir ces fonctionnalités.&lt;/p&gt;

</description>
				<pubDate>Sat, 29 Oct 2016 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2016/10/29/terminix-en-version-1-30.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/10/29/terminix-en-version-1-30.html</guid>
			</item>
		
			<item>
				<title>Superpowers passe en 2.0, revenons dessus</title>
				
					<description>&lt;p&gt;Je vous avais déjà parlé de Superpowers dans l’article précédent. Ce logiciel sert pour “la création de jeux 2D+3D pour tous”, et il est gratuit en entièrement Open Source!&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Une nouvelle version est sortie il y a quelques jours, l’occasion pour moi de revenir parler un peu de ce logiciel, les deux/trois trucs que j’ai découvert dessus, et mon premier jeu de découverte de l’outil. Mais d’abord les nouveautés apportées par cete version:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mise à jour des traduction en Russe.&lt;/li&gt;
  &lt;li&gt;Ajout d’une traduction en Italien.&lt;/li&gt;
  &lt;li&gt;Utilisation d’une version de NodeJS plus récente.&lt;/li&gt;
  &lt;li&gt;Correction d’un crash lors du déplacement d’un dossier.&lt;/li&gt;
  &lt;li&gt;Ajout de la possibilité de choisir le nom du serveur.&lt;/li&gt;
  &lt;li&gt;Suppression du paramètre inutile “port” dans le fichier config.json.&lt;/li&gt;
  &lt;li&gt;Gestion d’erreur lors du téléchargement du registre.&lt;/li&gt;
  &lt;li&gt;D’autres petites correction dans les différentes parties du projet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Le développement de Superpowers avance constamment et ça fait plaisir à voir. Il y a encore peu de contributeurs au code principal, mais il y a une bonne communauté qui se forme que ce soit sur &lt;a href=&quot;itch.io&quot;&gt;itch.io&lt;/a&gt; ou sur le chat Discord, et de plus en plus de gens se mettent à créer des jeux avec cet IDE.&lt;/p&gt;

&lt;p&gt;J’aimerais parler d’une fonctionalité qui m’intéresse particulièrement, qui est l’ajout de Shaders. Pour une petite définition de ce qu’est un Shader je vous invite à lire l’article sur &lt;a href=&quot;https://en.wikipedia.org/wiki/Shader&quot;&gt;wikipedia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/superpowers_03.jpg&quot; alt=&quot;superpowers_03&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lorsque l’on édite un Shader, on arrive sur une page découpé en 4 zones. En haut à gauche la définition des &lt;em&gt;uniforms&lt;/em&gt; et des &lt;em&gt;attributes&lt;/em&gt;, en haut à droite on a une prévsualisation du Shader sur la surface que l’on veut (Un plan, une image, une sphere, ou un cube), en bas a gauche l’éditeur de Shader Vertex, et en bas à droite l’éditeur de Shader Fragments.&lt;/p&gt;

&lt;p&gt;J’ai commencé à apprendre à faire des Shader en découvrant cet outil (je ne savais même pas ce qu’était un Shader avant!), et depuis j’utilise Superpowers pour apprendre à utiliser et créer des Shader car il permet de rapidement voir le résultat sur des element de notre jeu et de les incorporer dans une scène.&lt;/p&gt;

&lt;p&gt;Il existe déjà des outils très puissant en ligne pour les shaders (comme ShaderToy, bien que le site fasse ramer à mort mon ordinateur…), mais l’avoir directement dans son logiciel de développement de jeu rajoute un plus intéressant. Il ne manque plus qu’une auto-complétion pour divers elements: variables OpengL, Attributes/Uniforms/Varying, fonctions GLSL, etc… Dans l’editeur de code Vertex ou Fragment.&lt;/p&gt;

&lt;p&gt;Pas de rapport ave les Shaders, mais je me suis lancé dans la création d’un petit jeu sans ambition pour apprendre à manipuler Superpowers. Vous pouvez le voir dans la partie “Projet” de mon site, il s’appelle Dodgell.&lt;/p&gt;

&lt;p&gt;Dans ce jeu, vous jouez un petit bonhomme qui avance tout seul dans l’espace (on voit les planètes et les étoiles qui défilent en arrière-plan c’est pour ça =D), et vous devez esquiver le plus longtemps possible les ennemis qui arrivent du haut de l’écran. A chaque ennemis qui sort de l’écran par le bas, vous gagnez 5 points. Le meilleur score sur le même ordinateur est enregistré.&lt;/p&gt;

&lt;p&gt;Faire ce petit jeu m’a permis d’apprendre les bases des bases avec Superpowers, c’est-à-dire l’utilisation des scènes, des behaviors, des tilemap, tilesets, etc… Et surtout de manipuler l’API &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;. Je ne compte pas le continuer bien longtemps, je pense rajouter des choses comme un menu, peut-être des niveaux différents, des ennemis différents (plus gros, plus rapides, avec des mouvements non-linéaires!). J’aimerais surtout me lancer dans un &lt;a href=&quot;https://fr.wikipedia.org/wiki/Shoot_%27em_up&quot;&gt;Shoot’em up&lt;/a&gt;, ça fait un moment que ça me trotte dans la tête (d’ailleurs on peut voir Dodgell comme un croquis de Shoot’em up, mais où on tire pas).&lt;/p&gt;

&lt;p&gt;Surtout depuis que je me suis mis à des jeux comme &lt;a href=&quot;https://en.wikipedia.org/wiki/Touhou_Project&quot;&gt;Touhou Project&lt;/a&gt;, ou même d’autres jeux qui n’ont aucun rapport dans le principe mais qui m’ont donné beaucoup d’idées pour faire un jeu sympa, comme &lt;a href=&quot;http://typemoon.wikia.com/wiki/Fate/Grand_Order&quot;&gt;Fate Grand Order&lt;/a&gt; ou &lt;a href=&quot;https://www.pathofexile.com/&quot;&gt;Path of Exile&lt;/a&gt;. Le premier ayant des fonctionalités telle que les événements ou les combats qu’on pourrait qualifier de collaboratifs (un boss avec X milliars de PV, chaque joueurs qui le combat peut faire tomber un certain nombre de millions de PV, si toute la communauté bat le boss dans le temps imparti ils gagnent des trucs). Dans le deuxième ce sont surtout les effets des mob qui sont intéressants, et qu’on peut appliquer dans un Shoot’em up (des ennemis qui vous tirent dessus, et qui en plus ont un lien de plasma qui les relient et qui sont mortels si vous passez au travers).&lt;/p&gt;

&lt;p&gt;Enfin voilà tout ça pour dire que je vais bien m’amuser dans les temps qui viennent avec Superpowers, même si j’ai d’autres projets à faire en même temps (je me lance dans un lecteur de flux RSS entièrement en Rust :D) et que ma troisième année à Epitech va commencer, je vais essayer de prendre du temps pour avancer Dodgell, et faire d’autres jeux avec Superpowers, notamment avec d’autres gens pour ENFIN voir ce que valent ces fameuses fonctionalités collaboratives promises avec Superpowers. Ca intéresse quelqu’un dans le public de faire des jeux tous ensemble? ;)&lt;/p&gt;
</description>
				<pubDate>Tue, 30 Aug 2016 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2016/08/30/superpowers-version-2-0.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/08/30/superpowers-version-2-0.html</guid>
			</item>
		
			<item>
				<title>Des jeux Web avec Superpowers</title>
				
					<description>&lt;p&gt;Quand il s’agit de développer des jeux vidéos sur base d’HTML5, il existe de nombreux cours et librairies sur Internet relatif à ce sujet, et on peut maintenant trouver facilement des ressources pour apprendre à développer des jeux avec telles ou telle technologie (jetez un oeil &lt;a href=&quot;https://hacks.mozilla.org/2016/02/html-5-game-development-video-series/&quot;&gt;ICI&lt;/a&gt;, ça veut le coup d’oeil ;)). Dans la continuité de ce boum technologique, et né &lt;strong&gt;Superpowers&lt;/strong&gt;: Un IDE pour développer des Jeux Web de façon collaborative.&lt;/p&gt;

&lt;!--break--&gt;

&lt;h3 id=&quot;le-concept&quot;&gt;Le concept&lt;/h3&gt;

&lt;p&gt;Superpowers est un projet libre, qui tourne sur une base d’&lt;a href=&quot;http://electron.atom.io/&quot;&gt;Electron&lt;/a&gt; donc le logiciel lui-même est fait avec des technologies Web, et il est multiplateforme donc vous pouvez l’essayer sous Windows, Mac OS ou Linux, mais aussi directement depuis le navigateur Web!&lt;/p&gt;

&lt;p&gt;Superpowers fonctionne par système de client&amp;lt;-&amp;gt;serveur, le serveur s’occupe de gérer les différents projets, et l’accès par les clients à ceux-ci. Lorsque vous lancez le serveur il se lance par défaut en &lt;em&gt;localhost&lt;/em&gt; sur un port pré-défini. Une fois le serveur lancé vous pouvez vous y connecter avec un client, avec potentiellement un mot de passe et/ou un nom d’utilisateur à fournir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/superpowers_01.png&quot; alt=&quot;superpowers_01&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;on-peut-commencer--travailler&quot;&gt;On peut commencer à travailler…&lt;/h3&gt;

&lt;p&gt;Tout est faisable à l’intérieur de cet environnement de développement. Que ce soit sur les graphismes, le code, le son, etc… Le site officiel fourni un &lt;a href=&quot;http://docs.superpowers-html5.com/fr/bien-demarrer/a-propos-de-superpowers&quot;&gt;très bon tutoriel&lt;/a&gt; pour débuter avec Superpowers.&lt;/p&gt;

&lt;p&gt;Lorsque l’on travaille avec Superpowers sur l’aspect du code, on ne travaille pas directement avec l’HTML, le CSS, ou même le Javascript. Ici tout est en &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, un langage de surcouche à Javascript, qui peut ensuite être compilé vers ce dernier. Pour apprendre à utiliser Superpowers il faut apprendre le langage TypeScript, qui est vraiment très simple, mais aussi à la fois puissant. Je laisse la parole à d’autres personnes plus compétentes pour parler de celui-ci quelque part sur le Net, mais vraiment l’essayer c’est l’adopter. ;)&lt;/p&gt;

&lt;h3 id=&quot;en-collaboration&quot;&gt;…En collaboration!&lt;/h3&gt;

&lt;p&gt;Le gros point qui est à mettre en avant à mon avis, et le fait que Superpowers permet aux créateurs de Jeux Vidéos de travailler ensemble, et simultanément sur un projet. Chaque changement se voit en temps réel auprès des autres clients connectés: L’un peut coder pendant qu’un autre prépare des TileSets, et qu’un autre construit une Scène de jeu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/superpowers_02.png&quot; alt=&quot;superpowers_02&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ce logiciel est encore en Bêta officiellement, il a donc encore quelques soucis, et manque de deux/trois fonctionalités qui pourraient être utiles (des notifications de modifications sur une partie du projet, un moyen de communication, pourquoi pas intégrer un client IRC directement à l’intérieur), mais cela n’assombrit pas ses nombreuses qualités.&lt;/p&gt;

&lt;p&gt;Il est rare en ce moment d’avoir un projet libre qui prend les devant et qui innove dans un domaine. Quand aujourd’hui la tendance est à la copie de fonctionalités en comparaison d’autres outils payants et/ou propriétaires, Superpowers apporte une nouvelle pierre à l’édifice des jeux vidéos en Web, et je suis impatient de démarrer un projet sérieux avec (Surement un Shoot ‘em up, bien sûr libre cela va de soi, si il y a des intéressés ;) ).&lt;/p&gt;

&lt;p&gt;Pour finir, un petit lien vers un dépot Github qui contient de gros tutoriaux sur Superpowers en créant de A à Z des petits jeux d’arcade: &lt;a href=&quot;https://github.com/mseyne/superpowers-tutorials&quot;&gt;ICI&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Thu, 30 Jun 2016 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2016/06/30/des-jeux-web-avec-superpowers.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/06/30/des-jeux-web-avec-superpowers.html</guid>
			</item>
		
			<item>
				<title>Dev&#39; d&#39;un Gauntlet: La conclusion d&#39;un jeu qui ne s&#39;est pas fini</title>
				
					<description>&lt;p&gt;La date de rendu de notre projet de Gauntlet, qui est l’un des deux gros projet de fin de deuxième année, s’est terminée il y a à peu près une semaine maintenant. Il y a du bon et du moins bon, et je me suis dit que mettre sur papier numérique ce qu’il faut en retirer peut être un exercice utile, déjà pour moi pour avoir des notes pour plus tard, et peut-être que nos erreurs serviront à ce que quelqu’un ne refasse pas les mêmes =D.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Pour avoir un peu de contexte, je vous envoie vers mon précédent article (&lt;a href=&quot;/planet/2016/05/02/dev-dun-gauntlet-la-programmation-telle-qu-ecrite-par-satan.html&quot;&gt;Ici, là oui ici!&lt;/a&gt;
Ce Gauntlet-like est le deuxième jeu sur lequel je travaille, après TuxleTriad. Il y a de nombreux paramètres qui ont changé par rapport au développement de ce dernier:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;C’est un travail de groupe, donc il faut penser le code pour qu’il soit compréhensible par ceux qui vont potentiellement l’exploiter.&lt;/li&gt;
  &lt;li&gt;Nous avons dû passer un temps conséquent en début à nous organiser et nous distribuer les tâches, notamment par le biais d’un diagramme des principaux objets C++. (Merci &lt;a href=&quot;https://framasoft.org/article1057.html&quot;&gt;Dia!&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;C’est un jeu en 3D et non pas en 2D, et donc beaucoup de choses changent ne serait-ce que pour la gestion des coordonnées, mais aussi des collisions (qui fut l’une des parties de notre projet dont je suis le moins fier).&lt;/li&gt;
  &lt;li&gt;C’est un projet en C++, et non en Python, donc beaucoup plus bas niveau et avec une philosophie bien différente.&lt;/li&gt;
  &lt;li&gt;Nous avons utilisé la librairie Irrlicht qui nous était totalement inconnus (jusqu’à ce que je me souvienne qu’elle est utilisée dans &lt;a href=&quot;http://www.minetest.net/&quot;&gt;Minetest&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Et j’oublie sûrement d’autres choses mais bon tout le monde est déjà parti de mon article maintenant donc c’est pas bien grave.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il y a donc pas mal de challenges à relever là-dedans, mais rien d’insurmontable à première vue pour peu qu’on y passe le temps nécessaire.&lt;/p&gt;

&lt;p&gt;Je vais surtout me concentrer sur deux choses dans cet article: L’architecture de notre code dans sa globalité, et les outils dont je me suis occupé.&lt;/p&gt;

&lt;p&gt;Nous avons passé plusieurs heures avec Dia pour concevoir l’architecture de notre jeu. Il fallait une structure qui nous permet d’implémenter les composants d’Irrlicht, mais surtout de les surcharger pour y appliquer nos propres traitements. Pour cela nous avons conçu une classe IrrlichtEngine, qui contiendrait les principaux objets d’Irrlicht dans ses attributs, et qui s’occuperait en outre de la boucle de jeu principale.&lt;/p&gt;

&lt;p&gt;À cette classe, nous viendront lui ajouter les différents éléments nécessaires que nous concevons. Dans mon cas ce fut la classe Camera, qui s’occupe de gérer le déplacement et le zoom automatiques de la caméra en fonction de la position des joueurs, et la classe CollisionManager qui permet de dire si oui ou non en est en train de se taper contre quelque chose, et si oui contre quoi on se tape.&lt;/p&gt;

&lt;p&gt;En dehors de mon travail, nous avions aussi une classe pour gérer les entrées provenant du clavier et de manettes d’XBox branchées en USB, des classes pour gérer les objets 3D en jeu, et des sous-classe de celle-ci pour des éléments comme les Joueurs, les Ennemis, etc… Une classe pour les IA, une pour les objets en jeu (je parle là des objets qu’on utilise en jeu tels qu’une potion ou du poulet).&lt;/p&gt;

&lt;p&gt;Plus nous ajoutions de fonctionnalités et de classes, plus nous nous rendions compte que le concept de cette classe IrrlichtEngine était tout simplement bloquant dans chacun de nos développements. Un exemple des plus parlants est mon CollisionManager (bien qu’il me semble que les IA ont eu leurs doses de souffrance aussi):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un Joueur veut taper un ennemi. On rajoute une condition si la touche d’attaque est appuyée. Si oui, on veut pouvoir baisser les points de vie de la personne en face. Problème: Le Joueur ne peut savoir qui il tape, car la liste des Personnages en jeu sont dans IrrlichtEngine, et qu’il n’est pas accessible aux autres classes.&lt;/li&gt;
  &lt;li&gt;C’est là qu’intervient mon IrrlichtEngine, une classe codée à part et qui sera un attribut de l’IrrlichtEngine qui peut retourner le Personnage qui est en face.&lt;/li&gt;
  &lt;li&gt;Pour être initialisé il a besoin d’un composant d’Irrlicht, le SceneManager. On ne peut pas le lui donner dans le constructeur, donc je dois créer une fonction initCollisionMgr() qui sera appelée dans le constructeur de l’IrrlichtEngine avec son attrbut SceneManager.&lt;/li&gt;
  &lt;li&gt;Enfin mes fonctions utiles doivent prendre en paramètre un pointeur vers le Personnage qui veut savoir qui il a en face de lui, et faire joujou avec ses attributs et des fonctions d’Irrlicht pour voir s’il collisionne avec quelqu’un d’autre (Question: Le verbe collisionner existe?)&lt;/li&gt;
  &lt;li&gt;…Et en plus mes collisions ne fonctionent même pas correctement =D (Téléportations, bloquages, glissements sur le mur, et j’en passe).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En fait le souci principal au coeur de notre IrrlichtEngine c’est qu’on a pris chacun des composants d’Irrlicht qui étaient bien séparés dans leur coins pour les centraliser et bloquer l’accès à ceux-ci. Et lorsque nous nous sommes rendu compte de cela il était déjà trop tard, et pas question de rechanger l’architecture à 2 jours du rendu du projet! Nous avons donc fait avec tant bien que mal.&lt;/p&gt;

&lt;p&gt;Je ne dis pas que le code d’IrrlichtEngine était mauvais, loin de là. Au contraire il était justement très bien par rapport à ce qu’on voulait de lui, et ça nous a bloqué d’autant plus. Ce fut notre plus grande leçon je pense dans ce projet. Mais c’était la première fois, pour la plupart, pour un développement de jeu vidéo. Et même moi qui en ai féja fait un dont je suis pas peu fier, je n’était absolument pas dans mon environnement naturel.&lt;/p&gt;

&lt;p&gt;Mais il y a quand même plusieurs choses qui ont fonctionné très très bien dans ce projet, et vu que je n’ai pas tout fait du tout je ne parlerais que de mes “inventions”. Tout d’abord il y a la création des niveaux. Pour cela j’ai utilisé IrrEdit.&lt;/p&gt;

&lt;p&gt;IrrEdit est une extension au logiciel propriétaire et payant CopperCube, “un éditeur pour créer des jeux en 3D, des applications et des sites 3D sans programmer (cf le &lt;a href=&quot;http://www.ambiera.com/coppercube/&quot;&gt;site officiel&lt;/a&gt;)”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/irredit_01.png&quot; alt=&quot;irredit_1&quot; style=&quot;float:left&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Voilà le premier niveau que j’ai fait avec celui-ci. J’ai dû passer 30 h à apprendre à l’utiliser, et 2h à faire vraiment les niveaux. Son interface est pas mal du tout et je n’ai même pas encore exploité un centième de ses capacités.&lt;/p&gt;

&lt;p&gt;J’ai eu un souci, car il est exclusivement sous Windows, et j’avais pas de Windows fonctionnel sous la main (en fait si, mais je l’ai jamais démarré et j’avais pas envie de commencer =D). Donc j’ai fais chauffer Wine, et sous réserve de configurer CopperCube pour utiliser OpenGL plutôt que DirectX, tout fonctionnait au poil.&lt;/p&gt;

&lt;p&gt;Seul hic, lorsque j’exporte des scènes irrlicht, je ne peux les utiliser dans mon jeu à cause de chemins absolus dans les fichiers XML générés par IrrEdit. Déjà c’est moche en absolu, et en plus c’était des chemins Windows donc pour le Multi-OS c’est dur…&lt;/p&gt;

&lt;p&gt;J’ai donc dû passer un bon moment à développer un script en Bash qui va convertir les chemins absolus en chemins relatif, et avec des / plutôt que des \. Je vais mettre prochainement ce script avec sa doc sur un dépôt Github &lt;a href=&quot;https://github.com/Ilphrin/irredit_relative&quot;&gt;ICI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;J’ai déjà parlé du CollisionManager plus tôt, donc je n’en dirais pas plus j’ai fait un grand tour de ce qu’il faisait ;)&lt;/p&gt;

&lt;p&gt;Je me suis occupé aussi de la caméra! Avec la classe… Camera, bien deviné! Ici il n’y a rien de compliqué, je voulais une caméra qui aie un peu le même comportement que dans Super Smash Browl sur Wii/Wii U.&lt;/p&gt;

&lt;p&gt;Pour ceux qui ne voient pas, la caméra suit les différents joueurs, qu’ils soient 2 ou 8, et effectuent un ou zoom en fonction de la plus grande distance qu’il y a entre les joueurs.&lt;/p&gt;

&lt;p&gt;Du coup ma Caméra fait deux choses à chaque frame de jeu: Elle calcule le centre sur 2 dimensions entre les joueurs et se positionne en hauteur pour fixer ce centre, et elle zoom en fonction de la plus grande distance entre les joueurs. Ça permet d’avoir une caméra dynamique plutôt cool et sans difficulté. Il faut juste récupérer les positions de tous les joueurs.&lt;/p&gt;

&lt;p&gt;Dans l’ensemble ce projet aura été très intéressant, malgré une certaine fatigue ressentie pour ma part dû à un gros manque de repos.&lt;/p&gt;

&lt;p&gt;Pour finir, j’ai trouvé qu’Irrlicht à été un moteur 3D largement suffisant pour ce qu’on voulait faire avec, et je n’ai pas compté le nombre de fois qu’on a cherché à faire une action dans notre code, avant que quelqu’un vienne nous dire “Non mais faut pas vous embêter, ya des fonctions déjà dans Irrlicht pour faire ça automatiquement!”.&lt;/p&gt;

&lt;p&gt;Ce que je regrette au final c’est qu’il a le même souci que beaucoup d’autres projets, souvent pour les logiciels libres d’ailleurs, c’est qu’il a une documentation qui commence à se faire vieille, et j’ai l’impression que le forum l’est encore plus (pour nous aider on a dû regarder des posts qui datent de 2005!).&lt;/p&gt;

&lt;p&gt;Mais si vous avez des connaissances en C++, un ou deux gaillards sous la main et du temps libre, je vous conseille d’y jeter un coup d’oeil il possède de nombreuses fonctionnalités et surprises, et à l’avantage de fournir un moteur vraiment léger par rapport à la plupart de ses concurrents, pour un lot de fonctionalités largement suffisant (a mon goût).&lt;/p&gt;

&lt;p&gt;Je n’écrirai pas d’autres articles sur le sujet puisque je ne pense pas que j’aurais à re-travailler avec sauf pour un projet personnel à la limite. Sur ce, bonne soirée et félicitations pour m’avoir lu jusqu’au bout! =D J’vous donnerai un cookie si on se croise.&lt;/p&gt;
</description>
				<pubDate>Fri, 10 Jun 2016 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2016/06/10/dev-dun-gauntlet-on-fait-mumuse-avec-irrlicht-et-irredit.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/06/10/dev-dun-gauntlet-on-fait-mumuse-avec-irrlicht-et-irredit.html</guid>
			</item>
		
			<item>
				<title>Dev&#39; d&#39;un Gauntlet: La programmation telle que l&#39;a écrit Satan</title>
				
					<description>&lt;p&gt;Mettons un peu de contexte derrière ce titre étrange… Nous approchons de la fin de 2e année à Epitech, et l’un des plus gros projet de C++ a commencé: Indie Studio.&lt;/p&gt;

&lt;p&gt;Nous sommes 6 sur ce projet, avec 1 mois et demi devant nous pour développer 1 jeu dans une petite liste:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Gran_Trak_10&quot;&gt;Sprint&lt;/a&gt;: Un jeu de courses de voitures avec l’ajout de power-ups façon Mario-Kart&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Lemming&quot;&gt;Lemmings&lt;/a&gt;: Un jeu de reflexion où l’on doit gérer des petites bestioles un peu débiles. (Mais on connait non?)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Worms_(s%C3%A9rie://fr.wikipedia.org/wiki/Worms_(s%C3%A9rie))&quot;&gt;Worms&lt;/a&gt;: Nan celui-là vous êtes obligé de le connaitre, allez y jouer avant de continuer cet article.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Bomberman&quot;&gt;Bomberman&lt;/a&gt;: Un jeu multijoueur dont le but est de poser des bombes pour tuer le plus d’ennemis. (Je vais me faire censurer par le gouvernement avec des phrase comme ça)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Gauntlet&quot;&gt;Gauntlet&lt;/a&gt;: Un jeu d’action dans un donjon en vue de dessus, avec multijoueur jusque 4 sur le même pc! &lt;strong&gt;On a pris celui-ci&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;!--break--&gt;

&lt;p&gt;Nous avons quelques restrictions dont deux d’entres elles qui sont: Un jeu 3D, et un jeu multijoueur. Une fois le jeu choisi on va prendre un moteur 3D en piochant l’un de ces deux-là:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Irrlicht&quot;&gt;Irrlicht&lt;/a&gt;: Simple est bien foutu, et à décidé de parti sur celui-ci.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Ogre_3D&quot;&gt;Ogre 3D&lt;/a&gt;: Plus connu, il est apparemment beaucoup plus puissant et performant, mais nous n’avons pas réussi à le faire marcher, et vu que le temps presse nous avons dû trancher.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mon but est d’écrire un article chaque fois que nous nous réunissons tous pour bosser une journée entière dessus, afin de noter notre avancée et partager un peu nos démarches, idées, et pourquoi pas quelques bouts de codes. Mais nous ne pourrons pas diffuser le code du jeu réalisé puisqu’il sera au nom et à la licence d’Epitech.&lt;/p&gt;

&lt;p&gt;Je dirais que nous avons travaillé principalement sur 2 aspects aujourd’hui:&lt;/p&gt;

&lt;h3&gt;1) La documentation/L&#39;organisation&lt;/h3&gt;

&lt;p&gt;Nous avons commencé a nous répartir les tâches, en fonction des envies et des capacités. Moi et mon binome dans ce groupe, Nathanael, devons nous occuper de tout ce qui attrait à l’environnement de jeu et l’interface. C’est-à-dire un menu principal pour commencer.&lt;/p&gt;

&lt;p&gt;Mais aussi la gestion des cartes dans lesquelles les joueurs vont jouer avec notamment une possible génération aléatoire de carte, et les mécanismes pour ajuster le niveau de jeu: Le nombre de monstres, la force de ceuxi-ci, l’adaptation au nombre de joueurs, etc…&lt;/p&gt;

&lt;p&gt;J’avais fait un peu de lecture à l’époque ou j’ai codé &lt;a href=&quot;https://github.com/Ilphrin/TuxleTriad&quot;&gt;TuxleTriad&lt;/a&gt; sur la façon de gérer la difficulté dans un jeu du type de Gauntlet, et j’en avais retenu un “algo” que je pense utilise pour notre jeu.&lt;/p&gt;

&lt;p&gt;Chaque acteur - monstre, boss, héros, pnj - possède un ‘poids’ qu’il lui est attribué préalablement par le biais d’un fichier de configuration et qui détermine un peu sa force globale. Un héros aura un grand poids, et le but est qu’une fois le niveau crée, le total des poids des ennemis soit supérieur ou égal au poids des joueurs. Viennent par dessus s’ajouter des modificateurs externes pour ajuster la difficulté selon une situation ou un événement.&lt;/p&gt;

&lt;p&gt;Il y a plusieurs avantages à ce principe:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Les cartes&lt;/strong&gt;: On va pouvoir créer des cartes aléatoirement assez facilement si on construit bien ce système.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;La modularité&lt;/strong&gt;: On possède une grande modularité sur la façon de créer un niveau. On peut par exemple facilement imaginer une courbe de croissance….croissante, du modificateur de difficulté au fil de l’avancée dans les différents niveau. Ou faire des niveaux secrets avec pleins de trésors, mais aussi beaucoup d’ennemis puissants.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Je vois par contre un défaut à ce système: La mise en place. Nous allons avoir besoin de beaucoup de données de configurations pour générer tout ça, un fichier par niveau par exemple.&lt;/p&gt;

&lt;p&gt;Sinon nous en avons profité pour lire la Doc’ d’Irrlicht, et la chose la plus importante: Ça vient de l’Allemand et ça signifie Feu Follet! Quand même, je me devais de le dire ;)&lt;/p&gt;

&lt;p&gt;On sais donc que l’on peut utiliser OpenGL facilement sur Windows et sous Linux avec Irrlicht, qu’il possède un module de gestion des controlleur de types manettes, et qu’il possède un gestionnaire de fichier XML integré, dont nous nous servirons surement pour décrire les stats’ des monstres, des joueurs, et de tout le reste.&lt;/p&gt;

&lt;h3&gt;2) L&#39;enfer&lt;/h3&gt;

&lt;p&gt;Voilà on y arrive. En fait j’ai oublié de mentionner une restrictions de taille tout à l’heure: Nous devons créer un installateur pour Linux ET Windows.&lt;/p&gt;

&lt;p&gt;2 problèmes: De 1 personne n’aime coder sous Windows dans notre groupe, et de 2 on a jamais eu de projet à faire sous Windows avec Epitech, et là on va devoir tout apprendre sur le système de compilation et de linkage sous Windows.&lt;/p&gt;

&lt;p&gt;Et croyez-moi, maintenant que nous avons frolé le museau de la bête, on a pas envie de sentir ses poils! (J’espère que vous avez bien l’image en tete maintenant).&lt;/p&gt;

&lt;p&gt;Je vais vous épargnez les détails, mais dans le gros de notre processus d’apprentissage voici ce qu’il s’est passé:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On a voulu compiler avec GCC, on a compris qu’il fallait installer MinGW.&lt;/li&gt;
  &lt;li&gt;Mingw était pas trouvé dans le CMD (sérieux, Windows ose appeler ça la ligne de commande…)&lt;/li&gt;
  &lt;li&gt;J’ai réussi à lancer un tout petit fichier C avec MinGW.&lt;/li&gt;
  &lt;li&gt;On a quitté de rage, et regardé comment faire de la cross-compilation pour Windows à partir de notre chère patrie Linux. Après facilement 200Mo de paquets installés, on a quitté de rage.&lt;/li&gt;
  &lt;li&gt;On est retourné sous Windows, Rémi, happé par le désespoir, à installé Visual Studio pour créer un fichier de projet Irrlicht pour avoir une DLL de notre moteur.&lt;/li&gt;
  &lt;li&gt;Après 3/4h de travail acharné. Le Saint Graal apparait: “Compilation finished, 1 Build created, 0 errors” \o/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ce qu’il reste à faire donc:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Faire un .BAT pour automatiser cette compilation.&lt;/li&gt;
  &lt;li&gt;Avoir un .exe de notre jeu&lt;/li&gt;
  &lt;li&gt;Utiliser un outil comme Inno Setup pour lancer ce .BAT, générer noter .exe, et installer notre jeu correctement sous Windows.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Je peux vous dire que les insultes contre Windows ont été nombreuses (surtout venant de moi :D).&lt;/p&gt;

&lt;p&gt;Bon maintenant qu’on vois à peu près comment ça marche ça devrait le faire, mais plusieurs choses me gênent énormément dans ce que l’on a fait, mais que l’on ne peut pas faire grand chose contre par manque de temps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pourquoi faut-il un IDE obèse come Visual Studio pour compiler du code C?&lt;/li&gt;
  &lt;li&gt;Quitte à avoir un OS qui fait tout seul ce qu’il faut, pourquoi c’est si compliqué de compiler un printf(“Coucou\n”); ?&lt;/li&gt;
  &lt;li&gt;Pourquoi l’installateur de MinGW est aussi moche?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et enfin, pouquoi c’est si mal documenté? J’veux dire, la comilation c’est quand même l’essence même de l’informatique, pourquoi une chose aussi triviale est un tel calvaire à réaliser? Je sais que Windows se veut un OS pour le grand public, mais il y a bien des gens qui codent dessus? Sinon GNU/Linux n’aurait pas de soucis de popularité.&lt;/p&gt;

&lt;p&gt;Je ne veux que deux possibilités pour que quelqu’un développe de son plein gré (c’est-à-dire en dehors de son travail et tout) sous Windows: Soit il le fait depuis des années et connait le workflow Windows, dans ce cas ce serait sympa de la part de ce mec de populariser le MSDN ou de nous faire un ptit Wiki (j’offre des cookies =D), ou alors c’est que la lobotomie commerciale de Windows fait des merveilles, et que les gens ne codent sous Windows que parce qu’ils pensent que c’est ce qu’il se fait de mieux.&lt;/p&gt;

&lt;p&gt;Alors que franchement, entre nous, au final c’est pas si mal notre petit:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
./configure
make
make install
&lt;/code&gt;
&lt;/pre&gt;
</description>
				<pubDate>Mon, 02 May 2016 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2016/05/02/dev-dun-gauntlet-la-programmation-telle-qu-ecrite-par-satan.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/05/02/dev-dun-gauntlet-la-programmation-telle-qu-ecrite-par-satan.html</guid>
			</item>
		
			<item>
				<title>Alpha Omega: Extermination</title>
				
					<description>&lt;p&gt;Partie jouée avec trois joueurs: Oriana une Nécrosi, Skamos un bio-ingénieur, et Shedinn un Survivant. Première partie de test des règles et en tant que maitre de jeu pour ma part. J’ai décidé de mettre le compte-rendu sous forme narrative, sans autre raison que “J’avais envie” =D&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Cette journée n’avait rien d’anormale pour eux: un appel, un contrat, du nettoyage, de l’argent. Cette fois-ci c’était New-York, mais pas question d’aller enquêter sur l’assassinat d’un richissime démocrate, ou de débusquer une bande de malfrats:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Gérant&lt;/strong&gt;: Le service des travaux public de l’arcologie a des problèmes dans les égouts des bas-quartiers. Une équipe de technicien à disparue, et l’équipe de secours venue les chercher n’est jamais revenue, et on a des habitants qui ont entendus des bruits étranges. Faites un tour et voyez ce qu’il s’y trame, et si ça tire vous savez quoi répondre.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;C’était pas trop mal payé, alors ils sont descendus. Le matos de base était gentiment fourni, un casque avec lampe et radio, une combinaison histoire de dire qu’ils sont protégés, un flingue laser de chez Promethion, et un tonfa. Les égouts sont normalement très sales, mais dans le coin il y avait quelque chose de plus. Une puantueur difficilement descriptible. Il fallait avancer dans la lumière fournie par les lampes, mais rapidement la première intersection arrivait. Gauche ou tout droit? A gauche une porte leur faisait joliment signe malgré le fait qu’elle soit fermée à clés.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Oriana&lt;/strong&gt;: Donnez-moi une seconde je vais juste verifier qu’on aura pas de surprise derrière.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Elle s’accroupît et posa son oreille contre la porte en fermant les yeux. Mère Nature avait donnée à cette mutante une ouïe sur-développée. Mais après quelques minutes elle se releva et fît signe de la tête que tout était ok.&lt;/p&gt;

&lt;p&gt;Shedinn s’avança vers la porte dans l’intention de la crocheter avec ce qu’il pouvait trouver, il devissa deux trois tyuateries et mécaniques pour se faire un semblant de crochet. Mais rien à faire le petit clic de victoire ne venait pas.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Skamos&lt;/strong&gt;: Pousse-toi j’vais m’en occuper elle m’a pas l’air bien solide.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Il prit sont élan et avec sont fameux coup d’épaule enfonça la porte violemment et se retrouva dans une petite salle carrée. Pas grand chose, c’était plus une sorte de placard. Mais il y avait dans un coin des gros tuyaux et des pieds de biche qui pouvaient servir. Ils se servirent donc avant de retourner continuer le couloir dans le noir quasi-total.&lt;/p&gt;

&lt;p&gt;Une dizaine de mètres plus loin se trouvait une autre porte mais entrebaillée, et après avoir jeté un rapide coup d’oeil pour vérifier que tout était sûr Skamos y entra et se tourna vers ses compagnons:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Skamos&lt;/strong&gt;: Il y a un Droïde un peu pété ici, j’vais voir ce que je peux faire ça devrait pas être trop difficile.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sans trop de difficulté il réussit à le rallumer, mais à part quelques bips significatifs de son fonctionnement il ne semblait rien faire d’autre que de les suivre.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Shedinn&lt;/strong&gt;: Bon on verra plus tard pour l’instant il gêne pas tant qu’il reste derrière nous. On va voir ce qu’il y a derrière cette porte.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ils l’ouvrirent pour découvrir un autre couloir mais assez court, qui donnait sur un embranchement à trois chemins. Puisqu’il fallait choisir il partirent sur la gauche, qui bifurquait rapidement sur la droite, puis encore sur la droite un peu plus loin. Après avoir fait quelque mètres il entendirent des bruits. Oriana ferma les yeux et se concentra sur les sons.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;***&lt;/strong&gt;: …Allez ramenez la monnaie c’est moi qui empoche!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;***&lt;/strong&gt;: Encore! J’suis sûr que tu triches!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Deux hommes qui parlent, et un troisième qui semble juste râler dans sa barbe. Les trois compagnons approchèrent a pas de loup. La rencontre fut rapide. Juste en voyant les trois mercenaires les hommes précédemment en train de jouer aux cartes mirent la main sur leur flingue prêt a tirer. Mais Skamos fût encore plus rapide, l’arme déjà à la main. Deux rayons laser parcoururent la salle et arrachèrent à celui de droite son bras et sa jambe, le remettant immédiatement sur son siège.&lt;/p&gt;

&lt;p&gt;Oriana avait la même idée en tête, et visa celui du centre. La dernière chose que celui-ci vît c’est une lumière, arrivant en plein dans son visage brûlant, et tomba net au sol. Et pendant le moment de panque crée Shedinn en profita pour utiliser ses pouvoirs de Manipulation. Il prît le contrôle de la poussière et d’autres saletés du coin pour les projeter dans les yeux du troisième homme.&lt;/p&gt;

&lt;p&gt;Ce dernier tenta déséspérement de tirer sur Oriana mais elle put l’esquiver sans efforts. Après une seconde qui passa très vite, d’autres laser vinrent achever les survivants. En continuant leur exploration dans le couloir après la salle ils tombèrent nez à nez contre une porte blindée, avec un panneau de commande éteint. Skamos fît ce qu’il pût mais la réparation de ce panneau de commande dépassait ses compétences. Mais tout n’était pas perdu, et ils rebroussèrent chemin jusqu’à la salle du Droïde pour continuer dans un couloir encore inexploré.&lt;/p&gt;

&lt;p&gt;Plusieurs choses étaient visible: d’abord des squelettes de personnes qui avaient jadis porté un équipement de technicien, et une sorte de bave visqueuse de nauséabonde. Shedinn ne se sentait pas très à l’aise face à cela et se mit a gigoter et à être assez agité.&lt;/p&gt;

&lt;p&gt;Ils n’avaient d’autre choix que de continuer en suivant les traces baveuses qu’il y avait par terre. Et ils ne tardèrent pas à en découvrir l’origine lorsque cinq énorme et immonde limace furent visible devant eux dans une grande salle qui leur servait apparemment de nid.&lt;/p&gt;

&lt;p&gt;Le premier reflexe d’Oriana et de Shedinn fut de congeler l’eau des égouts autour de ces limaces pour les empêcher de bouger. Mais ce n’était pas suffisant pour les empêcher d’agir et de leur cracher à la figure une bave similaire mais qui semblait acide en plus de cela. Oriana s’en prit rapidement sur la jambe droite et bien que la douleur n’était pas insupportable elle restait conséquente.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Shedinn&lt;/strong&gt;: Bon ça je vais m’en charger!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Et le geste suivit la parole pendant qu’un énorme rocher apparu au dessus de l’une des limaces et vint l’ecraser comme si elle n’était pas là. Shedinn continua ses sortilèges et elimina une à une les limaces, tandis qu’Oriana les éléctrocuta et que Skamos faisait jouer son pistolet laser pour leur arracher des morceaux. Ca ne dura pas plus de 10 secondes mais c’était déjà bien suffisant pour ces mercenaires, cette bave avait un effet étrange et ils se sentaient moins à l’aise et avaient du mal à se concentrer bien que l’effet n’était que temporaire.&lt;/p&gt;

&lt;p&gt;Ils continuèrent dans la salle qui donnait sur un nouveau tunnel qu’il suivirent. Et plus ils approchaient plus ils entendaient des voix. Même pour Oriana c’était dur d’entendre mais l’une d’entre elle semblait plus forte, plus imposante que les autres:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;***&lt;/strong&gt;: Ca fait un moment que Bratt et ses deux couillons sont partis, on va voir ce qu’il font.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Shedinn&lt;/strong&gt;: Merde on ferait mieux de revenir et essayer de les avoir par suprise dans la salle a limaces et vite.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oriana et Skamos acquièserent et ils firent tous demi tour discrètement. Skamos resta loin derrière pour tirer tandis que Shedinn et Oriana se tenaient prêt a attaquer par magie sur les cotés dès qu’ils sortiraient du tunnel.&lt;/p&gt;

&lt;p&gt;Les voix s’approchèrent, et un Grigori immense apparu suivit de deux hommes de main. Les prenant par surprise Oriana et Shedinn attaquèrent les premiers sans se poser de question. Shedinn lança une gigantesque langue de feu qui brula a moitié l’homme de main le plus proche qui criait d’agonie. Oriana manqua de peu sa cible et son pieu de glace disparut au loin.&lt;/p&gt;

&lt;p&gt;Skamos qui profitait aussi de la diversion tira sur le deuxième homme de main qui n’eut même pas le temps de comprendre ce qui lui arrivait avant de succomber sous les rayon laser. Le Grigori qui ne prit pas le temps de réflechir courra vers Oriana qui, prise de panique, créa magiquement un mur de pierre devant elle contre lequel le Grigori s’écrasa après avoir lancé une énorme lame qui s’enfonça dans le béton du tunnel avec une force impensable.&lt;/p&gt;

&lt;p&gt;Mais Oriana était trop fatiguée pour maintenir le mur et celui-ci disparut rapidement. Skamos put tirer sur le Grigori avant qu’il ne réagisse mais il ne semblait pas souffrir du laser. Shedinn lança une boule de feu qui fit bruler la veste et le dos du Grigori qui grogna de douleur et se venga sur Oriana qui était toute proche. Avant même que quiconque puise réagir il la frappa de toutes ses forces et lui cassa un bras, le nez, et quelques dents.&lt;/p&gt;

&lt;p&gt;Shedinn bricola rapidement un sort pour immobiliser le Grigori qui se retrouva avec les jambes ensevelies sous une masse énorme de terre et de pierre. Oriana en profita rapidement pour fuir tandis que Skamos continuait de ses tirs successifs qui brulèrent des parties du corps de l’énorme créature. Et quand Oriana fut assez éloignée elle se retourna vers lui et dans un cri de rage créa deux un énorme pieu de glace qui s’enfonça dans le bras du Grigori et le traversa.&lt;/p&gt;

&lt;p&gt;Et avant que ce dernier ne puisse se libérer Shedinn lança une nouvelle boule de feu qui s’écrasa contre le visage de cette masse de muscles qui calcina sa tête, qui retomba avec le reste du corps au sol.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Shedinn au Gérant&lt;/strong&gt;: On a trouvé un Grigori qui semblait diriger sa petite mafia souterraine et on l’a éliminé.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Gérant&lt;/strong&gt;: Parfait, lui et son groupe étaient probablement la source de nos ennuis. Bon travail encore une fois, je vais repenser à vos promotions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Le sourire au lèvres en pensant a leur avenir fortuné, Oriana Skamos et Shedinn retournèrent par la bouche d’égout par laquelles ils étaient entrés et ressortir à l’air libre.&lt;/p&gt;

&lt;p&gt;Réussite du scénario d’introduction par les joueurs, sans trop de soucis ;)&lt;/p&gt;
</description>
				<pubDate>Sat, 26 Mar 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/2016/03/26/alpha-omega-extermination.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2016/03/26/alpha-omega-extermination.html</guid>
			</item>
		
			<item>
				<title>Nyaovim le GUI Neovim avec Electron</title>
				
					<description>&lt;p&gt;Voilà un projet dont j’avais plusieurs fois entendu parler mais sans jamais réellement me pencher dessus. Le seul défaut que je trouvais à Neovim c’est de ne pas avoir de GUI associé vraiment digne de ce nom, ce que je cherche est quelque chose de joli principalement mais aussi qui permette vraiment de profiter d’une interface graphique: prévisualisation, barre de défilement, bulle d’information et autre, etc…&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Et bien il s’avère qu’il existe un projet qui semble s’approcher pas mal de ce que je cherche dans l’architecture! Et ce projet s’appelle &lt;a href=&quot;https://github.com/rhysd/NyaoVim&quot;&gt;Nyaovim&lt;/a&gt; (Nya est l’équivalent de Miaou au Japon). C’est une interface graphique web pour Neovim, qui est utilisé comme application pc grâce à Electron.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;electron.atom.io&quot;&gt;Electron&lt;/a&gt; permet de créer des logiciels “desktop” avec des technos web, et à été développé notamment par Github pour créer leur petit nouveau: &lt;a href=&quot;atom.io&quot;&gt;Atom&lt;/a&gt;. Electron part du moteur de rendu web Chromium avec un outil coté serveur très connu qui est &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;NodeJS&lt;/a&gt;, et permet donc de créer des logiciels en HTML/CSS Javascript.&lt;/p&gt;

&lt;p&gt;L’avantage de ce système c’est qu’avec Nyaovim on va pourvoir d’une part créer des plugins dédiés à ce GUI en créant des &lt;a href=&quot;https://github.com/rhysd/neovim-component&quot;&gt;WebComponent&lt;/a&gt;, comme les deux que le développeur de Nyaovim à déjà codé: &lt;a href=&quot;https://github.com/rhysd/nyaovim-markdown-preview&quot;&gt;markdown-preview&lt;/a&gt; et &lt;a href=&quot;https://github.com/rhysd/nyaovim-popup-tooltip&quot;&gt;popup-tooltip&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bon du coup comment profiter de cet outil? C’est très simple, il faut disposer du gestionnaire de package de NodeJS appelé &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt;, disponible dans la plupart des dépôt des grandes distribution de ce monde, qui est fourni lorsqu’on installe NodeJS sur son pc. Ensuite la commande a lancer pour installer Nyaovim est la suivante:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;

sudo npm install -g nyaovim

nyaovim

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et voilà votre GUI est maintenant installé et lancé!&lt;/p&gt;

&lt;p&gt;Ce projet est indiqué comme instable sur son dépôt Github donc je ne serais pas vindicateur vis à vis du résultat. Mais il y a quand même de nombreux bugs qui me chagrine encore un peu:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Les bugs graphiques sont souvent présents, j’ai souvent ma barre vim-airline qui apparait en plein milieu de mon buffer, ou un caractère fantome qui se superpose à mon curseur, etc…&lt;/li&gt;
  &lt;li&gt;La bulle de complétion ne s’affiche plus, ou parfois apparait par clignotement, c’est qui est un peu dommage, surtout pour moi qui utilise les snippet Ultisnips à foison…&lt;/li&gt;
  &lt;li&gt;Quelques boutons dans la barre de menu pour ouvrir un buffer de certains fichiers de config’ ne serait pas un mal, comme nyaovimrc.html (le fichier de configuration de l’interface de nyaovim), ou tout simplement du vimrc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Malgré ces soucis je ne peux que conseiller d’aller voir ce projet qui à le mérite d’essayer quelque chose de nouveau et qui part sur une base très solide pour de futurs plugins ou améliorations très sympathique!&lt;/p&gt;

&lt;p&gt;Sur ce j’ai finit pour aujourd’hui, mais j’ai encore deux trois articles dans la poche en ce moment, notamment toujours a propos de Vim/Neovim qui risque de plaire à certains ;)&lt;/p&gt;
</description>
				<pubDate>Tue, 08 Mar 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/03/08/nyaovim-le-gui-neovim-avec-electron.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/03/08/nyaovim-le-gui-neovim-avec-electron.html</guid>
			</item>
		
			<item>
				<title>Génération de code C++ en plugin Neovim avec CLang</title>
				
					<description>&lt;p&gt;La Piscine de C++ qui marque le début de notre deuxième année à Epitech vient de se terminer. Durant ces deux semaines on étudie à fond la quasi-totalité des concepts liés à la POO.&lt;/p&gt;

&lt;p&gt;Rapidement tout le monde a commencé à chercher tout ce qui pouvait nous faciliter la vie pour coder, et de nombreux étudiants se sont tournés vers des IDE très puissants, mais aussi très lourds. Moi je suis du genre à rester sur mon Neovim même si j’ai moins de fonctionalités, au moins ça marche et je sais ce que je code.&lt;/p&gt;

&lt;p&gt;Mais mon égo en a pris un coup au vu de toutes les fonctionnalités de ces IDE et j’ai eu envie de développer un plugin qui puisse faire, à défaut de complètement, certaines choses de façon équivalentes à ces IDE. Pour ça j’ai dû apprendre à utiliser l’API Python de Neovim, et la librairie de parsing CLang.&lt;/p&gt;

&lt;p&gt;Mon plugin en est à ses balbutiements mais je compte bien l’améliorer au fil du temps. Je vais commencer par parler un peu de la création d’un plugin dans Neovim, puis du fonctionnement de CLang. Dans un prochain article je rentrerais un peu plus dans les détails sur la façon dont j’ai fait fonctionner les deux ensembles, mais cet article est déjà bien assez long ;)&lt;/p&gt;

&lt;!--break--&gt;

&lt;h2 id=&quot;neovim&quot;&gt;Neovim&lt;/h2&gt;

&lt;p&gt;Neovim a totalement changé son API pour les plugin par rapport à Vim, en utilisant &lt;a href=&quot;http://msgpack.org/&quot;&gt;msgpack&lt;/a&gt; pour pouvoir créer des clients comme on veut dans le langage qu’on veut pour faire une API, un GUI, etc…&lt;/p&gt;

&lt;p&gt;Dans mon cas je connais le Python, il y a une API Python, du coup je l’ai codé en Python, tout le monde suit? ;) Mais il y a de nombreux autres clients, vous pouvez voir la liste &lt;a href=&quot;https://github.com/neovim/neovim/wiki/Related-projects&quot;&gt;ICI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pour m’aider j’y suis allé pas-à-pas en suivant plusieurs exemples donnés sur le dépôt de &lt;a href=&quot;https://github.com/neovim/python-client&quot;&gt;l’API Python&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bon assez parlé place à l’action, comment ça fonctionne un plugin Neovim avec Python? Déjà il faut installer cette API, cela se fait par le biais de la commande suivante:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo pip install neovim&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;J’ai appelé mon plugin &lt;a href=&quot;https://github.com/Ilphrin/easy-cpp.nvim&quot;&gt;easy-cpp.nvim&lt;/a&gt;, je met dans un dossier éponyme le contenu de mon plugin, qui se résume par:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un README.md qui fera office d’introduction notamment sur Github&lt;/li&gt;
  &lt;li&gt;Un fichier LICENSE (MIT dans mon cas, j’aime bien cette license :3)&lt;/li&gt;
  &lt;li&gt;Un dossier rplugin/python&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;rplugin est pour Remote Plugin, c’est-à-dire les plugins qui son gérés grâce a une API client telle que celle de Python. et le dossier python permet d’indiquer pour quel langage ce plugin est destiné.&lt;/p&gt;

&lt;p&gt;Ce dossier est lui-même composé du:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;dossier easy-cpp/ qui va contenir tout le code, qui pour le moment n’est que dans un fichier &lt;strong&gt;init&lt;/strong&gt;.py parce que je suis sale&lt;/li&gt;
  &lt;li&gt;fichier easy-cpp.py, qui est vide et qui le restera.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Allons ensuite maintenant dans ce fichier &lt;strong&gt;init&lt;/strong&gt;.py. Il contient principalement une classe avec un décorateur de neovim pour indiquer que cette classe dirige le plugin. Cette classe est initialisée avec un paramètre qui est le client de vim en lui-même. Cet objet va servir à faire toute l’interaction avec notre éditeur de texte préferé.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;

@neovim.plugin
class Easy(object):
  def __init__(self, vim):
    self.vim = vim
    ...

  @neovim.command(&#39;EasyGenerate&#39;)
  def generate(self):
    ...

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On voit ici que j’ai utilisé deux décorateurs liés à neovim. @neovim.plugin permet donc de marquer votre classe comme étant celle qui gère le plugin comme je l’ai déjà dit. @neovim.command est à placer sur une méthode de votre classe.&lt;/p&gt;

&lt;p&gt;Elle va permettre de transformer votre méthode en commande pour Neovim. C’est-à-dire qu’une fois Neovim lancé, on peut taper :EasyGenerate et la fonction generate() va être lancée. Dans le principe c’est le gros de ce qu’il y a a apprendre pour créer un plugin pour Neovim. Mais il y a encore une chose dont je doit parler et qui est essentiel pour insérer du texte dans un fichier: la variable Buffer.&lt;/p&gt;

&lt;p&gt;On a notre objet self.vim qui contient énormément d’informations sur l’état actuel de l’éditeur (je vous invite a voir les fichiers de tests unitaires de l’API Python qui contiennent pas mal d’information sur le sujet). Parmis les variables qu’il contient j’ai principalement eu à utiliser self.vim.current.buffer et self.vim.buffers&lt;/p&gt;

&lt;p&gt;self.vim.buffers est un tableau qui contient chacune des lignes qui existent dans chacun des buffers ouverts. Le premier niveau du tableau (buffers[0], buffers[1], etc…) contient tour à tour les buffers ouverts. Le deuxième niveau (buffers[0][2], buffers[4][1:5], etc…). Pour modifier il suffit d’assigner une chaine de caractère à une ligne d’un buffer, ou meme un tableau de chaines de caractères.&lt;/p&gt;

&lt;p&gt;Pour ajouter à la fin d’un buffer il y a deux possibilités: soit on veut ajouter à la fin et dans ce cas on fait buffers.append(maChaineOuMonTableau), soit on veut intercaler une ou des lignes entre deux autres, par exemple si je veux insérer du texte à la ligne 42 je fais buffers.append(maChainOuMonTableau, 42). Au final c’est comme un tableau classique en Python :)&lt;/p&gt;

&lt;h2 id=&quot;clang&quot;&gt;CLang&lt;/h2&gt;

&lt;p&gt;CLang est extrêmement puissant, mais il n’y a malheureusement que peu de ressources documentaires sur le sujet, et encore moins pour la librairie en Python. Ayant réussi à faire deux trois chose avec je me suis dit que partager avec tout le monde ce que j’ai appris pourrait en pousser d’autres à faire le pas ;) (et m’apprendre des choses en retour!)&lt;/p&gt;

&lt;p&gt;J’ai commencé par suivre ce tutoriel tout d’abord aux conseil de mon ami &lt;a href=&quot;https://github.com/Strackeror&quot;&gt;Strackeror&lt;/a&gt;: &lt;a href=&quot;http://szelei.me/code-generator/&quot;&gt;http://szelei.me/code-generator/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ce tutoriel est très bien écrit (mais en anglais bien sûr), et il vous donne les bases pour comprendre CLang et l’utiliser dans Python. Mais dans mon cas je ne l’ai pas suivi en entier car mon but était un peu différent de ce qu’il voulait faire. Mon but est d’utiliser CLang pour analyser un fichier d’en-tête C++, et en extirper les prototypes de chaque méthode avec leur espace de nom.&lt;/p&gt;

&lt;p&gt;Je m’explique, j’ai fait un fichier de header pour mes tests, et un fichier de source pour comparer le résultat final que je veux:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#ifndef TEXTCOMPONENT_H
# define TEXTCOMPONENT_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;string&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inerTest&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TextComponent&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;TextComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

          &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;superSecretFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;newText&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;newText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;newText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newText&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;newText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newText&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;OutText&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;OutText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;OutText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutText&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;OutText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutText&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outputsmthing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#endif &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* TEXTCOMPONENT_H */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et ce que je veux obtenir:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;textcomponent.h&quot;
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inerTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inerTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inerTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;superSecretFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outputsmthing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;OutText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;J’ai volontairement fait un cas pas très joli d’encapsulation dans des espaces de noms, mais bon au moins si là ça fonctionne c’est que je suis sur une bonne base!&lt;/p&gt;

&lt;p&gt;Donc pour générer ça, on va avoir besoin d’installer clang pour python, pour ça rien de tel qu’un:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo pip install clang&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ensuite on ouvre un fichier python à coté de notre fichier header (je ne parle pas du fichier &lt;strong&gt;init&lt;/strong&gt;.py de tout à l’heure là on se met dans un autre dossier pour travailler sur autre chose sans le lier au plugin). On commence ce fichier en initialisant clang, lui demandant de créer un index, et de parser un fichier donné en paramètre avec sys.argv[]. Enfin, on va utiliser la sortie pour génerer la liste des fonctions du fichier de header:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;clang&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cindex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_library_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;/usr/lib/llvm-3.4/lib/libclang.so.1&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cindex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;translation_unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;-x&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;c++&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;-std=c++11&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;-D__CODE_GENERATOR__&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spelling&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cindex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CursorKind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXX_METHOD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_all_public_functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cindex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CursorKind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLASS_DECL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;a_class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spelling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a_class&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cindex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CursorKind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAMESPACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;child_classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_all_public_functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spelling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_classes&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cindex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CursorKind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FUNCTION_DECL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spelling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_all_public_functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translation_unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pas de panique je vais tout expliquer!&lt;/p&gt;

&lt;p&gt;Les premières lignes sont expliquées dans l’article que j’ai mis en lien plus haut, je ne pense pas avoir besoin de revenir dessus.&lt;/p&gt;

&lt;p&gt;Tout en bas on assigne à classes le retour de la fonction get_all_public_functions qui prend en paramètre un objet Cursor. Cet objet propre a CLang contient tout un tas d’informations sur chaque segment de code, sous forme d’arbre.&lt;/p&gt;

&lt;p&gt;Dans get_all_public_functions() on parcourt la liste des enfants de ce Cursor avec la méthode get_children(), la variable c obtenue est un…Cursor, vu que nous sommes dans un arbre de Cursors, chaque enfant est un autre Cursor dépendant de son parent.&lt;/p&gt;

&lt;p&gt;Cet objet contient de nombreuses informations, dont c.kind qui indique le type du Cursor. Dans notre cas on vérifie pour trois valeurs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Si c’est un classe (CLASS_DECL), dans ce cas-là on appelle la fonction get_methods() plus haut qui récupère toutes les méthodes de cette classe.&lt;/li&gt;
  &lt;li&gt;Si c’est un namespace (NAMESPACE) on recupère de façon récursive le retour de get_all_public_functions() avec comme valeur l’enfant courant. Puis on l’ajoute à result.&lt;/li&gt;
  &lt;li&gt;Si c’est une fonction (FUNCTION_DECL), on l’ajoute simplement à result.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;result étant un dictionnaire, on lui passe en guise le clé c.spelling, qui correspond au code en lui-même pointé par le curseur, dans notre cas c’est soit un nom de classe, soit un nom de namespace, soit un nom de fonction.&lt;/p&gt;

&lt;p&gt;Petit détail, la condition c.location.file.name == sys.argv[1] permet de vérifier qu’on parle toujours du même fichier, et pas d’un fichier récuperé lors d’un #include, qui sera aussi parsé par CLang quoiqu’on fasse, sauf qu’on veut pas l’ajouter en résultat ;)&lt;/p&gt;

&lt;p&gt;La suite au prochain épisode…&lt;/p&gt;
</description>
				<pubDate>Thu, 28 Jan 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/01/28/generation-de-c++-en-plugin-neovim-avec-clang.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/01/28/generation-de-c++-en-plugin-neovim-avec-clang.html</guid>
			</item>
		
			<item>
				<title>Nouvelle version de Sunflower (0.3)</title>
				
					<description>&lt;p&gt;J’avais déjà parlé de Sunflower il y a bien longtemps. Pour rappel, Sunflower est un logiciel de gestion de fichiers qui a la particularité de se concentrer sur une vue “jumelée”. C’est-à-dire avec deux panneaux de navigation. Le tout dans une interface sympatique et configurable à souhait.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Aujourd’hui est sortie une nouvelle version majeure: La 0.3! Parmi une très grande liste de nouveautés il y a celles-ci que je pourrait citer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ajout d’un bouton “Skip all” sur les fenêtres de dialogue.&lt;/li&gt;
  &lt;li&gt;Ajout des raccourcis pour les menus.&lt;/li&gt;
  &lt;li&gt;Gestion des fichiers .hidden pour les fichiers cachés.&lt;/li&gt;
  &lt;li&gt;Support de la corbeille.&lt;/li&gt;
  &lt;li&gt;Gestion de file d’attentes pour les opérations.&lt;/li&gt;
  &lt;li&gt;Meilleure gestion des liens symboliques.&lt;/li&gt;
  &lt;li&gt;Support de la séparation verticale.&lt;/li&gt;
  &lt;li&gt;Plusieurs corrections de bugs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et j’en passe un bon nombre. Toutes ces modifications sont visibles sur la page &lt;a href=&quot;https://github.com/MeanEYE/Sunflower/releases/tag/0.3-60&quot;&gt;Github du projet.&lt;/a&gt; Allez voir un peu ce que ça vaut, ce projet mérite vraiment le coup d’oeil ;)&lt;/p&gt;
</description>
				<pubDate>Mon, 18 Jan 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/01/18/nouvelle-version-de-sunflower.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/01/18/nouvelle-version-de-sunflower.html</guid>
			</item>
		
			<item>
				<title>Ce que j&#39;ai appris avec Gaia</title>
				
					<description>&lt;p&gt;Cela fait un moment que je n’ai pas parlé de Gaia, depuis la dernière fois où j’expliquais mon envie de bosser sur FirefoxOS, et ce que j’ai entrepris pour y contribuer au niveau du code. Je viens de finir de corriger mon premier bug, et il a été ajouté au code de la branche principale de FirefoxOS. Je me suis donc dit qu’un petit debrief sur ce que j’ai appris me permettrai de revoir un peu tout ça et notamment de réfléchir à la suite.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Si je devais résumer en deux mots ce que j’ai appris ce qui me viendrais là tout de suite à l’esprit c’est: Git et Tests.&lt;/p&gt;

&lt;p&gt;La plus grande difficulté quand on corrige un bug ce n’est pas tant la correction en elle-même pour des bugs de cette catégorie. Mais plutôt de se poser la question suivante: “Est-ce que ce que j’ai rajouté ou enlevé à un impact sur le code qui nécessite une modification ailleurs?”. Et dans mon cas la réponse à été un grand OUI (sinon je n’écrirais pas cet article ;) ). La correction du bug à été très simple, je vous montre le code espacé par deux lignes avant et après la modif:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NotificationHelper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getIconURI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;?titleID=&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;


&lt;span class=&quot;nl&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NotificationHelper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getIconURI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Jusque là, rien de bien compliqué. En fait là où des modifications devenaient nécessaire, c’est au niveau des tests unitaires. Il fallait modifier la façon dont les tests étaient fait pour ces variables, ce qui à conduit à modifer d’autres éléments, et ainsi de suite.&lt;/p&gt;

&lt;p&gt;Et sans l’aide du système de mentoring je n’aurais jamais vu qu’il fallait faire ces changements!&lt;/p&gt;

&lt;p&gt;Du coup j’ai dû apprendre à utiliser l’outil de tests unitaires de Gaia pour vérifier à chacune de mes modifications si les tests étaient fonctionnels. Cela peut paraître normal pour un développeur affirmé quelle que soit la catégorie, mais je ne suis qu’un jeune étudiant. Ce bug est ma toute première véritable contribution à du code dans le monde du logiciel libre. Du coup j’ai perdu un bon paquet de temps à comprendre ça 8)&lt;/p&gt;

&lt;p&gt;Ensuite est survenu un deuxième problème bien plus long et embêtant: Ma faible connaissance dans Git. Alors oui je l’utilise constamment pour tous les projets à rendre à Epitech, mais ça ne fait pas de moi un utilisateur avancé bien au contraire! Je ne suis jamais allé plus loin qu’un git commit -am “coucou” suivi d’un git push!&lt;/p&gt;

&lt;p&gt;Il a fallu donc tout que j’apprenne sur le système de branche, de merge, et autres joyeusetés qui forment ce CVS. Et c’est surement de ce coté-là que j’ai le plus appris car c’est là que j’ai fais le plus d’erreurs! (qui m’ont obligé d’ailleurs à faire 3 Pull Request sur Github avant que tout soit fonctionnel)&lt;/p&gt;

&lt;p&gt;Problème ou pas problème, je vais m’y remettre dès que la période de piscine de C++ d’Epitech est terminée. Car avec le système de mentoring de bug pour les débutants comme moi, on peut facilement s’intégrer et se faire aider par un mentor de bug, dans mon cas  azasypkin (qui à fait preuve d’une grande patience avec moi x) ), et ça m’a beaucoup motivé et donné envie de continuer!&lt;/p&gt;
</description>
				<pubDate>Sat, 02 Jan 2016 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2016/01/02/ce-que-j-ai-appris-avec-gaia.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2016/01/02/ce-que-j-ai-appris-avec-gaia.html</guid>
			</item>
		
			<item>
				<title>Ultisnips: Autocomplétion HTML</title>
				
					<description>&lt;p&gt;Pour ceux qui ne le savent pas, Ultisnips est un plugin pour Vim/NeoVim qui permet de créer des snippets. C’est l’outil le plus puissant de création de snippet que j’ai pu voir jusque maintenant, tout éditeur confondu. Les possibilités offertes par ce plugin sont immense, alors qu’il est très simple d’utilisation, a partir du moment où l’on sait exactement ce que l’on veut faire.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Cela fait maintenant 3 mois que j’utilise Ultisnips, et à chaque fois que je remarque que je répète souvent quelque chose dans mon code, je me presse d’en faire un snippet pour Ultisnips! Je dois en être à une vingtaine de snippets maintenant, et je commence tout juste à m’habituer à utiliser les fonctionalités les plus avancés. Et notamment les interpolation Python.&lt;/p&gt;

&lt;p&gt;Ça en jette comme nom hein? En fait derrière ce nom aux consonnances Trekistes se cache un moyen de controler les snippets en utilisant des bouts de code en Python. Je ne vais pas faire un cours sur Ultisnips parce qu’il y à déjà largement les ressources suffisantes qui existent déjà (J’en ai parlé dans mon article sur les &lt;a href=&quot;http://ilphrin.com/planet/2015/09/16/topo-des-plugins-vim-01.html&quot;&gt;plugin Vim&lt;/a&gt; avec notamment tous les liens des vidéos de cours).&lt;/p&gt;

&lt;p&gt;J’ai récemment essayé de faire mon propre snippet utilisant une interpolation Python. J’adore Python alors il était de mon devoir d’en faire, aussi inutile qu’il fût ;) Du coup je me suis lancé dans l’idée de faire un snippet pout autocompléter les balises HTML, notamment en les refermant tout de suite derrière, sans avoir à utiliser un autre plugin Vim. Et j’ai réussi (bon en même temps c’est pas la chose la plus complexe à faire), pour cela j’ai joué avec une expression régulière, et d’un petit test en Python. Voici donc le code de ce snippet:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;notUniqueTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;br&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;link&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;meta&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;img&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;endglobal&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;snippet&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;([a-z]+)(.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*)&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Tag&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rA&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;`!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notUniqueTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;sb&quot;&gt;`$1`&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notUniqueTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;endsnippet&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Le code de ce snippet n’est pas très compliqué mais je vais m’expliquer rapidement. Mon expression régulière vérifie l’existence d’un mot en minuscule, et potentiellement d’autres mots qui le suivent quels qu’ils soient, le tout entouré de chevrons. Si cette condition est vérifiée, alors le code Python commence.&lt;/p&gt;

&lt;p&gt;J’ai besoin de vérifier que ce n’est pas une balise unique que j’utilise, tel que &lt;br /&gt; ou &lt;meta /&gt;. Pour cela j’ai crée une fonction qui prend en paramètre le premier modèle de l’expression régulière ( ([a-z]+) soit le premier mot), et qui vérifie si le mot contenu ne fait pas partie de la liste écrite dans la fonction notUniqueTag().&lt;/p&gt;

&lt;p&gt;Si cete condition est elle aussi vérifiée, alors je change le contenu pour mettre &lt;mabalise&gt;$1&lt;/mabalise&gt;, avec $1 qui correspond à la position du curseur. Une fois qu’on a tapé le contenu, puisque c’est un snippet il suffit d’appuyer sur le raccourci pour aller à la position de curseur d’après (pour moi c’est Ctrl+J) pour aller à la fin de la balise fermante.&lt;/p&gt;

&lt;p&gt;J’aime vraiment cette capacité à faire rapidement des snippet dont le comportement n’est pas fixe, ça ouvre des possibilités pour se faciliter la vie qui sont très intéressante, si vous avez écrit des super snippet faites le moi savoir je suis toujours à l’affût de perles rares de ce genre ;)&lt;/p&gt;

&lt;p&gt;Bonne journée!&lt;/p&gt;

&lt;h3 id=&quot;edit&quot;&gt;EDIT&lt;/h3&gt;
&lt;p&gt;J’ai modifié grandement mon snippet, afin de gérer le niveau
 d’indentation et le saut de ligne en cas de balise de bloc (comme &amp;lt;body&amp;gt;). Pour cela j’ai changé l’expression régulière pour prendre tous les caractères avant la balise, pour les réutiliser.&lt;/p&gt;

&lt;p&gt;J’ai découpé un peu mon code python avec 3 fonctions supplémentaires:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;needNewLine: Qui regarde si la balise que l’on veut taper fait parti d’un tableau, si c’est le cas c’est qu’il faudra faire des saut de ligne et mettre le cursor sur la ligne vide entre la balise ouvrante et la balise fermante.&lt;/li&gt;
  &lt;li&gt;makeBegTag: Me permet d’écrire la balise ouvrante, en prenant en mettant un saut de ligne si needNewLine renvoie 1. Dans ce cas là on rajoute une indentation correspondant à celle récupérée avec le match.group(1)&lt;/li&gt;
  &lt;li&gt;makeEndTag: Idem pour la balise fermante&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Du coup le code final ressemble maintenant à ça:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;notUniqueTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;br&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;link&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;meta&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;img&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;needNewLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;head&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;p&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;section&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;article&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;style&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;aside&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeBegTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;needNewLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;  &quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeEndTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;needNewLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&amp;gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;endglobal&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;snippet&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;(.*)&amp;lt;([a-z]+)(.*)&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Tag&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rA&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;`!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notUniqueTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makeBegTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makeBegTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;sb&quot;&gt;`$1`&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notUniqueTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makeEndTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;endsnippet&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
				<pubDate>Wed, 16 Dec 2015 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2015/12/16/ultisnips-autocompletion-html.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2015/12/16/ultisnips-autocompletion-html.html</guid>
			</item>
		
			<item>
				<title>Livres et musiques libres</title>
				
					<description>&lt;p&gt;La musique et les livres font partie de mon quotidien depuis très longtemps, je ne peux pas faire quelque chose sans écouter un peu de musique dans mon casque ou prendre les transports en commun sans me balader avec quelque chose à lire.&lt;/p&gt;

&lt;p&gt;Et depuis que je connais la licence Creative Commons, je cherche ce qu’il se fait dans le domaine de la licence libre à ce sujet, du coup je me suis dit que la moindre des choses était de parler autour de moi de ceux qui m’ont plu et marqués&lt;/p&gt;

&lt;!--break--&gt;

&lt;h2 id=&quot;musique&quot;&gt;Musique&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.obsidianshell.com/div_en.php?p=news_en&quot;&gt;Obsidian Shell&lt;/a&gt;: Un groupe de métal symphonique, d’origine hongroise (pas fréquent n’est-ce pas?), c’est notamment l’un de leur album qui sert de Soundtrack pour le jeu vidéo libre &lt;a href=&quot;http://mars-game.sourceforge.net/&quot;&gt;M.A.R.S&lt;/a&gt;. Les musiques de ce groupe ont pas mal de punch et sont très bien pour mettre dans l’ambiance pour faire quelques parties de jeux vidéos.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.starrysky.fr/&quot;&gt;Starrysky&lt;/a&gt;: Un autre groupe de metal mais avec un style japonais, qui me fait parfois un peu penser à ce qu’on pourrait entendre avec du Vocaloid. Et en plus ils sont français, et très sympa pour les avoir rencontrés en vrai. Ils ont une bio sur leur site que j’ai mis en lien qui en dit plus sur eux.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pornophonique.de/&quot;&gt;Pornophonique&lt;/a&gt;: En voilà qui sortent pas mal du lot, ce duo est composé d’un guitariste…et d’un joueur de game boy. Rien de mieux pour mettre du 8bit dans les oreilles. J’aime surtout ce groupe par leur originalité, mais je n’en écoute pas tous les jours.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gwb.la/#listen&quot;&gt;Great White Buffalo&lt;/a&gt;: Ils font un rock doux et vraiment très agréable à écouter tout au long de la journée, avec parfois des morceaux qui bougent un peu plus, mais dans l’ensemble leurs musiques sont très bien pour se détendre ou faire une tache qui ne demande pas une concentration trop forte (comme écrire cet article, au hasard ;) )&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.dancing-willow.de/&quot;&gt;Dancing Willow&lt;/a&gt;: Alors là on part carrément sur autre chose de plus festif avec ce groupe de folk irlandaise. J’aime énormément leurs musiques qui sont capables de mettre de bonne humeur n’importe quel grincheux de ce bas monde.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://music.emilevankrieken.com/&quot;&gt;Aether&lt;/a&gt;: En fait le nom complet serait plutôt &lt;em&gt;Aether Original Soundtrack&lt;/em&gt;, puisqu’en fait ces musiques ont été créées pour un mod de Minecraft par un certain Emile Van Krieken, il avait alors 14 ou 16 ans quand ils les a fait, seul. Et le résultat est vraiment très agréable, toutes les musiques sont d’un genre très doux.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;livres&quot;&gt;Livres&lt;/h2&gt;

&lt;p&gt;Bon là c’est un peu plus court, je n’ai pas une très grande culture de ce coté-là, mais faut pas hésiter à m’en faire connaitre :D&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.atramenta.net/authors/aquilegia-nox-et-leo-sigrann/2808&quot;&gt;Pattes de velours&lt;/a&gt;: C’est la première fois que je lis quelque chose de la catégorie des polars, que ce soit sous licence libre ou non. Et cette première expérience m’a énormément plu! L’intrigue tourne autour de trois personnages qui se retrouvent emmené dans une histoire assez intéressante, et surtout le livre utilise une narration qui change de point de vue, passant d’un personnage a l’autre à chaque moment. Ainsi on voit tour à tour ce que pense et fait chacun des personnages dans la scène en cours.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.atramenta.net/lire/la-mort-est-mon-metier/44019&quot;&gt;La mort est mon métier&lt;/a&gt;: Je l’ai lu il y a un moment alors je ne m’en rappelle plus tellement, mais je me souviens l’avoir lu très rapidement (même pour un livre de cette taille, assez court). Et même si il peut donner le cafard pour le reste de la journée j’y ai pris un grand plaisir à le lire. Il a été écrit par Frédéric Bézies, qui n’est pas un inconnu au monde de la licence libre francophone dans ce domaine. Il faudrait que je lise les autres livres qu’il a fait.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voilà c’est à peu près tout. La quasi-totalité des musiques sont trouvable et téléchargeable sur Jamendo, et pareillement pour les livres qui sont sur Atramenta. Ces deux sites sont vraiment bien dans leurs domaines respectifs, je vous les conseille vivement si vous ne les connaissez pas déjà! Sur ce bonne journée, et bonne lecture/écoute ;)&lt;/p&gt;
</description>
				<pubDate>Tue, 08 Dec 2015 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2015/12/08/livres-et-musiques-libres.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2015/12/08/livres-et-musiques-libres.html</guid>
			</item>
		
			<item>
				<title>Mes premiers tests unitaires en Web</title>
				
					<description>&lt;p&gt;Dans le cadre de mon stage, je dois faire un outil de monitoring en Web pour afficher des statistiques sur des bases de données ElasticSearch. Nous avions carte blanche pour les technos à utiliser, l’organisation de l’outil, etc… L’outil en lui-même fonctionne, mais puisqu’il s’agit d’un stage (mon premier en plus), il y a tout interêt à solidifer cet outil et en profiter pour apprendre le plus de technos possibles.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Dans cette optique, je me suis lancé dans l’idée de rajouter des tests unitaires pour aider au développement futur de notre outil de monitoring. Je n’ai jamais fait de tests unitaires (je suis étudiant ne me jetez pas de pierres tout de suite ;) ), c’était donc l’occasion d’apprendre à en faire. Après avoir regardé à droite et à gauche sur le net, mon attention s’est fixé sur la combinaison PhantomJS + Mocha + Chai. Donc pour ceux qui ne connaissent pas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://phantomjs.org&quot;&gt;PhantomJS&lt;/a&gt; est un moteur de rendu web basé sur WebKit, et se comporte comme un navigateur web. A la différence qu’il servira non pas à aller regarder les derniers gifs sur 9gag mais à lancer du code Javascript. Le site web donne un aperçu de ce qu’il est possible de faire avec.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mochajs.org&quot;&gt;Mocha&lt;/a&gt; est un framework de test unitaires en Javascript. Il semble avoir toutes les fonctionalités qu’on peut éspérer pour un framework de test et il est largement utilisé donc dispose d’une bonne communauté pour répondre à la plupart des questions que l’on pourrait se poser.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://chaijs.com&quot;&gt;Chai&lt;/a&gt; est une librairie d’assertion. On pourrait penser que Mocha en aurait une mais ce n’est pas le cas, en fait Mocha va servir pour tout ce qui n’est pas une assertion, et nous laissont ce dernier aux mains de Chai.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour information, l’outil web utilise le Framework AngularJS. Donc il faut que tout ce gros bazar fonctionne pour tester mes controlleurs, mes services, etc… Et je puis vous dire que ça a été un beau gros casse tête, c’est un point que je déteste dans le web c’est cet éparpillement d’outils dans tous les sens et pour tout et n’importe quel utilisation. Et plus il y a d’outils plus c’est difficile de mettre de l’ordre dans ce qu’on fait et de maitriser ce qu’il se passe. M’enfin c’est un autre sujet.&lt;/p&gt;

&lt;p&gt;Et donc pour que les trois outils, cités plus haut, fonctionnent avec une application AngularJS, il faut rajouter à la liste Angular Mocks, qui permet d’injecter des modules/services et autres pour des tests unitaires.&lt;/p&gt;

&lt;p&gt;Dans un fichier html, on inclu tout ça comme ci-dessous (et dans cet ordre, sinon tout se casse):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./node_modules/mocha/mocha.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./node_modules/chai/chai.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;mocha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;bdd&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;mocha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;html&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;angular-mock.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test/tests.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mochaPhantomJS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mochaPhantomJS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mocha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;J’ai installé Mocha et Chai par le biais de Node Package Manager (npm), PhantomJS a été compilé à la main (c’est super long je vous préviens), et avec npm toujours j’ai installé mocha-phantomjs, qui permet de faire fonctionner les deux ensembles.&lt;/p&gt;

&lt;p&gt;Une fois tout cela en place on va pouvoir commencer à écrire les tests unitaires dans le fichier tests.js. Mon but est de tester les fonctionalités de mon Service AngularJS, qui contient la quasi-totalité des fonctions de mon applications. J’appelle ici mon module ‘monitoring’ et mon service ‘totalService’.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;monitoring&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;totalService&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;monitoring&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_totalService_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_$resource_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_$location_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;totalService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_totalService_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_$resource_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_$location_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On initialise ici Chai et on injecte le module d’abord en lançant angular.module(‘monitoring’), puis dans le beforeEach avec module(‘monitoring’), ainsi que le service TotalService avec la méthode inject(). Il ne reste plus qu’à le tester en lançant la commande:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;mocha-phantomjs -p chemin/vers/phantomjs/bin/phantomjs &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestRunner.html&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ensuite le reste dépend de l’application, et tout est expliqué correctement sur les docs respectives de Mocha, Chai et PhantomJS. Je suis content d’y être finalement arrivé après plusieurs jours à me casser la tête pour faire marcher tout ça. J’ai notamment passé deux jours avec un ‘undefined is not a function’ de angular-mock. Je pense que si je dois me lancer dans un gros projet Web ce serait de faire une bibliothèque qui simplifie tout ça, par exemple un pack qui comprend Mocha, Chai, PhantomJS, et Angular Mock, avec une simple commande pour lancer tout ça, et avec de base un dossier d’exemple qu’il ne reste plus qu’à reprendre et modifier pour travailler.&lt;/p&gt;

</description>
				<pubDate>Sun, 08 Nov 2015 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2015/11/08/mes-premiers-tests-unitaires-en-web.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2015/11/08/mes-premiers-tests-unitaires-en-web.html</guid>
			</item>
		
			<item>
				<title>Premiers pas avec Gaia (FirefoxOS)</title>
				
					<description>&lt;p&gt;J’utilise tous les jours mon Open C avec Firefox OS dessus, depuis deux ans maintenant (plus ou moins).
J’ai vu passer l’OS de la version 1.2 jusqu’à la version 3.0 d’aujourd’hui, si on omet la “nouvelle” branche 2.5 que je n’ai pas encore pu observer par moi-même.
Je met fréquemment a jour mon téléphone grâce au travail considérable de la communauté francophone pour Firefox OS qui a travaillé dur pour fournir un système automatisé de construction de builds installable sur les Open C vendu sur Ebay et dans les magasin en France, et ce avec différentes branches (la Beta, la Aurora, la Nightly, et Spark en 2.5), tout est expliqué en détail sur le site &lt;a href=&quot;http://builds.firefoxos.mozfr.org/doc/fr/devices/zte-open-c&quot;&gt;http://builds.firefoxos.mozfr.org/doc/fr/devices/zte-open-c&lt;/a&gt;&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Mais quant au système lui-même on retrouve de façon assez récurrente des commentaires sur ses défaut, ou les fonctionalités qu’il lui manque. Le premier qui me vient a l’esprit est le support du protocole &lt;a href=&quot;https://fr.wikipedia.org/wiki/CardDAV&quot;&gt;CardDav&lt;/a&gt;, qui est un protocole qui permet la synchronisation de ses contact a travers différent appareils.
Un bug a été crée vis-à-vis de ce manque sur le Bugzilla, datant de &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=859306&quot;&gt;début 2013&lt;/a&gt;, et qui depuis ne semble pas montrer le bout de son nez, même si la demande se fait très forte (moi le premier je dois l’avouer).&lt;/p&gt;

&lt;p&gt;Puisque Firefox OS est un projet libre, et que je fais mes début dans le Web, je me suis dit “Pourquoi ne pas essayer de mettre ma pierre a l’édifice?”! Et j’ai donc commencé a lire la documentation relative à Gaia. Je ne vais pas détailler ici ce qu’est exactement Gaia (il existe de très bonnes explications sur internet facilement trouvable a ce sujet), mais en gros c’est la couche graphique de Firefox OS: L’interface, les applications de base, etc…
Donc la première chose que j’ai fait c’est de regarder les bugs encore ouverts et qui sont marqué pour être à corriger par des petits nouveaux comme moi, a l’aide de l’outil web &lt;a href=&quot;http://www.joshmatthews.net/bugsahoy/?b2g=1&quot;&gt;Bugs Ahoy&lt;/a&gt; qui fait le café de ce coté là.
J’ai donc rapidement choisi un bug et envoyé une demande sur Bugzilla pour qu’on m’assigne ce bug. Il faut savoir qu’un bug peut posséder aussi un mentor, et ce système m’a tout de suite séduit puisqu’il permet de se faire aider par ledit mentor tout au long de l’étape de correction du bug pour faire ses débuts.&lt;/p&gt;

&lt;p&gt;La suite donc consiste a faire un fork du dépot de Gaia sur Github, de créer une branche de développement correspondant au bug que l’on souhaite corriger, et…à le corriger =D.
Outre la documentation qui est très complète (et presque entièrement traduite en français sur le MDN), la facilité d’utilisation des outils de développement, et l’accueil et l’aide agréable que j’ai reçu de la part des développeur m’ont vraiment donné envie de m’impliquer dans le développement de Gaia.
Même si pour l’instant je n’ai encore rien fait (ma correction est encore incomplète et le mentor du bug m’aide du mieux qu’il peut pour que je comprenne quoi faire), j’ai vraiment envie de m’investir plus longuement sur le sujet, et corriger le plus de bug possible.
Oui parce que, mon objectif à moi pour l’instant ce n’est pas de rajouter la fonctionalité révolutionnaire ou d’implémenter le CardDav dont je parlais plus haut, mais simplement de m’acquitter de la tâche souvent considerée comme ingrate de la correction de bug gênants pour le fonctionnement de l’OS.&lt;/p&gt;

&lt;p&gt;Et peut-être que cela laissera plus de temps à des développeurs plus experimentés pour bosser sur des sujet plus complexes ;).&lt;/p&gt;

&lt;p&gt;Si vous êtes comme moi et que vous avez envie de vous lancer, mais sans trop oser, dites-vous bien que d’autres sont venu avant et ont déjà fait dix-mille bêtises avant vous (moi le premier, je suis long a comprendre les choses!). Et en plus en terme d’outils ça ne demande pas grand chose pour pouvoir travailler efficacement:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Le dossier du dépot Gaia que vous avez forké&lt;/li&gt;
  &lt;li&gt;Le plugin WebIDE pour lancer votre version modifiée de Gaia&lt;/li&gt;
  &lt;li&gt;Et….c’est tout!&lt;/li&gt;
  &lt;li&gt;Ah si j’oubliais, beaucoup de patience, pour comprendre un peu comment tous ces outils s’imbriquent dans votre environnement de développement et télécharger Gaia ;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maintenant que j’y pense, ce serait cool d’avoir des événements un peu de type Hackaton, mais orienté sur la formation de nouveaux contributeurs curieux pour Firefox OS dans Lyon. Mais bon avant la dinde de Noël c’est pas la peine d’espérer!&lt;/p&gt;

&lt;p&gt;Avant de finir, vous avez vu ce que l’on peut faire avec Spark (Firefox OS 2.5)? Avec une recherche sur Lilo/DuckDuckGo/Tonton Roger, on peut trouver des exemple de deux/trois add-ons qui ont l’air vachement cool! Notamment un gars qui a rajouté une dizaine d’icones en bas du menu des notifications (le menu qu’on fait descendre avec un glissement de doigt du bord haut vers le bas). Malheureusement maintenant que j’écris cet article je n’arrive plus a retrouver où est-ce que j’ai vu cet add-on, mais bon tant pis il re-fera bien son apparition!&lt;/p&gt;
</description>
				<pubDate>Fri, 16 Oct 2015 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2015/10/16/coder-pour-firefoxos-c&#39;est-cool.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2015/10/16/coder-pour-firefoxos-c&#39;est-cool.html</guid>
			</item>
		
			<item>
				<title>Des news en tout genre</title>
				
					<description>&lt;p&gt;Depuis que j’ai mis en ligne le site, j’ai fait tout un tas de petites modifications mineures pour rendre le tout un peu plus joli/stable/fonctionnel, en voici une liste (non exhaustive puisque je ne me souviens pas de tout):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Les commentaires fonctionnent maintenant! J’ai bidouillé pendant un bon moment à comprendre pourquoi quand je recevais un mail avec le contenu du commentaire à ajouter, ce n’était pas en utf-8. En fait il fallait rajouter \r\n a la fin de chaque informations de l’en-tête de requete de mail pour que ça passe correctement…&lt;/li&gt;
  &lt;li&gt;Je profite des articles sur Vim pour améliorer mon fichier CSS vim_syntax.css, puisque Jekyll peut faire de la mise en valeur de code avec {\% highlight %}, mais avec mes règles CSS la coloration était effacée pour ne laisser que du jaune ocre. Puisque Jekyll est bien fait il crée une classe pour chaque élément sémantique du langage mis en valeur, ce qui fait qu’il ne reste plus qu’à créer une règle CSS par classe pour avoir sa coloration personnalisée!&lt;/li&gt;
  &lt;li&gt;Toujours dans le CSS j’ai viré tous les ‘outline’ possible avec un brutal =&amp;gt;  * {outline: none;}, de plus je me suis amusé avec les propriétés :focus pour le formulaire de commentaire pour rendre tout ça un peu plus vivant&lt;/li&gt;
  &lt;li&gt;Je pense ajouter une partie pour les news qui m’ont interressé ou mes pensées du moment, choses qui ne suffiraient pas à faire un article et n’ont donc pas leur place ici.&lt;/li&gt;
  &lt;li&gt;Le lien en bas pour le code du site sur Github dirige maintenant vers le dépot récemment crée. Je ne me suis pas vraiment cassé la tête a commenter les layouts ou a faire les choses de façon propre. Déjà parce que c’est la première fois que je fais un site complet donc je n’ai pas toutes les bonnes habitudes, et ensuite parce que ce n’est pas la peine je pense de détailler puisqu’il suffit de comprendre l’organisation de façon globale. (Et puis il y a beaucoup de choses qui sont inspirées de code trouvé sur l’Internet donc mieux documentés que par moi).&lt;/li&gt;
  &lt;li&gt;Si vous avez regardé le dépôt vous avez pu remarquer que mon CV est sur le site, mais que je n’ai mis aucun lien pour l’afficher. C’est volontaire. Si vous souhaitez vraiment le voir il est a http://ilphrin.com/kevin/CV_en.pdf, je compte ne faire que passer le lien sur mon compte Linkedin ou dans mes cartes de visite, je ne crois pas que ce soit la peine de prendre un bout de place sur le site pour ça.&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Thu, 24 Sep 2015 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2015/09/24/des-news-en-tout-genres.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2015/09/24/des-news-en-tout-genres.html</guid>
			</item>
		
			<item>
				<title>Topo de mes plugins Vim - 02</title>
				
					<description>&lt;p&gt;Les plugins c’est vraiment le top, alors dans Vim je vous en parle même pas, c’est comme rajouter des animations CSS, si je ne fait pas attention j’en rajoute un peu partout! Depuis la dernière fois j’ai rajouté quelque plugins qui ne révolutionnent pas mon utilisation de Vim, mais restent quand même un petit plus agréable. Du coup aujourd’hui ça va être plus court mais il y aura plus de monde ;)&lt;/p&gt;

&lt;!--break--&gt;

&lt;h2 id=&quot;rustvim&quot;&gt;rust.vim&lt;/h2&gt;

&lt;h4 id=&quot;pour-grer-le-langage-de-mozilla&quot;&gt;Pour gérer le langage de Mozilla&lt;/h4&gt;

&lt;p&gt;Installation: &lt;a href=&quot;http://vimawesome.com/plugin/rust-vim-love-story&quot;&gt;http://vimawesome.com/plugin/rust-vim-love-story&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Je pense que tout est dans le titre, si vous vous lancez dans l’apprentissage de Rust ce plugin est incontournable pour avoir une coloration syntaxique et quelques outils de completion (comme pour la documentation de code avec ///), et quelques actions supplémentaires (mais je n’utilise que la coloration syntaxique personnellement).
Note intéressante sur ce plugin: Apparemment il se synchronise de façon journalière au dépot github de Rust (le dépot du plugin pas le plugin en lui-même hein!)
Il n’y a pas besoin de configuration précise pour fonctionner correctement, vous faites un git clone dans votre dossier de plugins et le tour est joué!&lt;/p&gt;

&lt;h2 id=&quot;indentline&quot;&gt;indentLine&lt;/h2&gt;

&lt;h4 id=&quot;savoir-o-en-est-lindentation&quot;&gt;Savoir où en est l’indentation&lt;/h4&gt;

&lt;p&gt;Installation: &lt;a href=&quot;http://vimawesome.com/plugin/indentline&quot;&gt;http://vimawesome.com/plugin/indentline&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C’est un plugin que j’ai découvert cette semaine. Il permet d’afficher des guides pour les nieaux d’indentation dans le fichier. Je trouve ça assez pratique surtout quand des fois j’ai de mauvaises indentation (genre une espace après avoir indenté d’un niveau).
Avec ce plugin on peut notamment configurer le caractère a afficher en fond comme guide, et aussi la couleur de ce caractère. Respectivement avec les commandes dans le vimrc:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:indentLine_char&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;¦&#39;&lt;/span&gt; &quot;Je &lt;span class=&quot;k&quot;&gt;ne&lt;/span&gt; sais pas comment &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; obtiens &lt;span class=&quot;k&quot;&gt;ce&lt;/span&gt; caractè&lt;span class=&quot;k&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;au&lt;/span&gt; clavier&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; je &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&#39;ai récuperé avec &lt;span class=&quot;k&quot;&gt;un&lt;/span&gt; Copier&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;Coller
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:indentLine_color_term&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &quot;Pour avoir une couleur noir&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;nerdcommenter&quot;&gt;NERDCommenter&lt;/h2&gt;

&lt;h4 id=&quot;les-commentaires-faciles&quot;&gt;Les commentaires faciles&lt;/h4&gt;

&lt;p&gt;Installation: &lt;a href=&quot;http://vimawesome.com/plugin/the-nerd-commenter&quot;&gt;http://vimawesome.com/plugin/the-nerd-commenter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Je l’utilise souvent pour écrire un pavé de texte dans du code, puis le mettre en commentaire en sélectionnant le tout et en faisant ensuite \cc ou \cs. Il dispose de tout un tas de commandes pour aller un peu plus loin dans la gestion des commentaires mais son utilisation basique me suffit amplement. Il ne lui manque plus qu’à ajouter la gestion pour Rust et ce serait parfait :D (j’ai posté une Issue sur la page Github à ce sujet, je mettrai à jour l’article si il y a du nouveau de ce coté là!)&lt;/p&gt;

&lt;h2 id=&quot;vim-cargo&quot;&gt;vim-cargo&lt;/h2&gt;

&lt;h4 id=&quot;quelques-commandes-pour-cargo&quot;&gt;Quelques commandes pour Cargo&lt;/h4&gt;

&lt;p&gt;Installation: &lt;a href=&quot;http://vimawesome.com/plugin/vim-cargo&quot;&gt;http://vimawesome.com/plugin/vim-cargo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fork plus complet: &lt;a href=&quot;https://github.com/shmup/vim-cargo&quot;&gt;https://github.com/shmup/vim-cargo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tant qu’on parle de Rust autant parler de ce plugin. Ce petit plugin très simple rajoute 4 (à ce jour, et 8 dans le Fork que j’ai mis en lien) petites commandes classiques pour manipuler Cargo le gestionnaire de projet qui va de pair avec Rust. Le code semble très court et simple je pense que je vais essayer de l’étoffer un peu, ça me permettra d’apprendre a écrire du VimScript!&lt;/p&gt;

&lt;h2 id=&quot;colorizer&quot;&gt;Colorizer&lt;/h2&gt;

&lt;h4 id=&quot;avoir-un-surlignage-selon-les-couleurs&quot;&gt;Avoir un surlignage selon les couleurs&lt;/h4&gt;

&lt;p&gt;Installation: &lt;a href=&quot;http://vimawesome.com/plugin/color-highlight&quot;&gt;http://vimawesome.com/plugin/color-highlight&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tout est dans le titre encore une fois. Colorizer va analyser votre texte/code, et si il reconnait des écritures de format de couleur il va surligner le texte de la couleur correspondante, par exemple avec “red” il va surligner red en rouge, il sait reconnaitre aussi des modèles plus complexes comme notamment les format utilisés en CSS. #FF0000, rgb(255, 0, 0), rgba(255, 0, 0, 255) et hsl(120%, 70%, 820%) par exemple seront tous surligné en une teinte de rouge.&lt;/p&gt;

&lt;h2 id=&quot;mru-most-recently-used&quot;&gt;MRU (Most Recently Used)&lt;/h2&gt;

&lt;h4 id=&quot;voir-les-fichiers-rcemments-ouverts&quot;&gt;Voir les fichiers récemments ouverts&lt;/h4&gt;

&lt;p&gt;Installation: &lt;a href=&quot;http://vimawesome.com/plugin/mru-vim&quot;&gt;http://vimawesome.com/plugin/mru-vim&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MRU permet par le biais de la commande eponyme (:MRU, on sait jamais) de voir la liste des fichiers récemments ouverts, d’en sélectionner un, et de l’ouvrir avec la touche Enter. C’est une fonctionalité classique mais j’avoue que je n’y pensais plus quand j’utilisais Vim, maintenant je lance vim dans mon terminal où que je sois avec j’ouvre le fichier sur lequel je bosse en ce moment avec le :MRU. Je me suis meme permis de rajouter ces quelque petites lignes dans mon vimrc:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; bufname&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;
  autocmd &lt;span class=&quot;nb&quot;&gt;VimEnter&lt;/span&gt; * MRU
&lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;
autocmd &lt;span class=&quot;nb&quot;&gt;BufNewFile&lt;/span&gt; * MRU&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Comme ça MRU se lance si j’ai ouvert vim sans aucun fichier en paramètre, et lorsque que je crée un nouveau buffer vide. Néanmoins il ne s’ouvre pas lorsque je crée un nouvel Onglet vide (j’y travaille j’y travaille!)&lt;/p&gt;
</description>
				<pubDate>Mon, 21 Sep 2015 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2015/09/21/topo-de-mes-plugins-vim-02.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2015/09/21/topo-de-mes-plugins-vim-02.html</guid>
			</item>
		
			<item>
				<title>Topo de mes plugins Vim - 01</title>
				
					<description>&lt;p&gt;Au fil des mois de mes utilisations de Vim, je finis par emmagasiner un bon paquet de plugins, dont je me sers plus ou moins souvent selon ma capacité à me souvenir de leur existence dans mes dossier. Et le gros problème que j’ai avec ces plugins c’est que je pour beaucoup je ne me souviens jamais de comment ils fonctionnent de A à Z, et j’aime avoir une documentation complète pour me rappeler tout ça.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Or, autant Vim en lui même est très bien documenté avec non seulement des documents de référence pour le :help mais aussi par le biais de tutoriaux très bien fait tels que VimTutor ainsi qu’un jeu web pour apprendre les bases de vim. (Sans parler de VimGolf, tiens j’irais y jouer après la rédaction de cet article.) Mais pour les plugins je manque généralement de ressources, et la documentation de référence fournie avec le :help ne me suffit pas pour me souvenir de la configuration précise d’un plugin quand je veux modifier quelque chose de précis, ou parfois c’est (je l’avoue) simplement dû a ma flemme de lire la langue de Shakespeare.&lt;/p&gt;

&lt;p&gt;Du coup je vais écrire ici toutes mes notes sur l’utilisation des mes plugins vim, comment je peux configurer etc… et j’aurais peut-être au bout d’un moment une bonne base de connaissances qu’il deviendra intéréssant d’utiliser (c’est pour ça que j’ai mis - 01 dans le titre c’est que je pense découper en plusieurs articles pour ne pas que ça fasse trop gros d’un seul coup)&lt;/p&gt;

&lt;h2 id=&quot;ultisnips&quot;&gt;Ultisnips&lt;/h2&gt;

&lt;h3 id=&quot;faire-des-snippets-comme-dans-atom-ou-sublimetext&quot;&gt;Faire des snippets comme dans Atom ou SublimeText&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;www.sirver.net&quot;&gt;Site de l’auteur&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;: http://vimawesome.com/plugin/ultisnips-forever-and-always&lt;/p&gt;

&lt;p&gt;C’est sûrement l’outil le plus abouti à ce jour pour ce qui est de l’écriture de snippets. Mais j’ai eu énormément de mal à le faire fonctionner, si j’ai bien compris d’ou venait le souci, c’est dû a une incompatibilité avec autre plugin.
Donc pour éviter ce genre de problèmes il faut mettre ses snippets dans un autre dossier que ~/.vim/snippets. Moi j’ai simplement mis ~/.vim/Ultisnips/ et modifié le paramètre dans mon vimrc:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:UltiSnipsSnippetsDir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~/.vim/Ultisnips/&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Une fois cela fait on va pouvoir commencer a écrire des snippets! Et pour cela il existe plusieurs vidéos qui sont très bien faites dans le domaine. Je ne puis que conseiller les liens donné dans la documentation d’Ultisnips:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sirver.net/blog/2011/12/30/first-episode-of-ultisnips-screencast/&quot;&gt;http://www.sirver.net/blog/2011/12/30/first-episode-of-ultisnips-screencast/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sirver.net/blog/2012/01/08/second-episode-of-ultisnips-screencast/&quot;&gt;http://www.sirver.net/blog/2012/01/08/second-episode-of-ultisnips-screencast/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sirver.net/blog/2012/02/05/third-episode-of-ultisnips-screencast/&quot;&gt;http://www.sirver.net/blog/2012/02/05/third-episode-of-ultisnips-screencast/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sirver.net/blog/2012/03/31/fourth-episode-of-ultisnips-screencast/&quot;&gt;http://www.sirver.net/blog/2012/03/31/fourth-episode-of-ultisnips-screencast/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ainsi que:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://vimcasts.org/episodes/meet-ultisnips/&quot;&gt;http://vimcasts.org/episodes/meet-ultisnips/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vimcasts.org/episodes/ultisnips-python-interpolation/&quot;&gt;http://vimcasts.org/episodes/ultisnips-python-interpolation/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vimcasts.org/episodes/ultisnips-visual-placeholder/&quot;&gt;http://vimcasts.org/episodes/ultisnips-visual-placeholder/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Écrire un snippet avec Ultisnips est assez similaire a la façon qu’ont les autres éditeurs de texte de le faire. Par exemple, a chaque fois que j’écris un article sur ce blog je remplis d’abord trois informations YAML puis un paragrapge, un tags de découpage pour la première page du site, et la suite de l’article, je peux donc écrire un snippet pour accélérer un tout petit peu les chose:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;s&quot;&gt;snippet post&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${1:post_kevin}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kevin&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;$3&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&amp;lt;!--break--&amp;gt;&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;$4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On peut utiliser des petits bout de codes en Python, VimL ou Bash pour des utilisations plus complexes. Par exemple si je veut choisir un layout différent parmis ceux que j’ai sur mon site en utilisant une autocomplétion personnalisée je peux améliorer le snippet précédent:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;s&quot;&gt;global !p&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;def complete(t, opts)&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;if t&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;opts = [m[len(t):] for m in opts if m.startswith(t)]&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;if len(opts) == 1&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;return opts[0]&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;return opts&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;snippet post&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$1 `!p snip.rv = complete(t[1], [&#39;post_kevin&#39;, &#39;index&#39;, &#39;autre_layout&#39;, &#39;etc...&#39;])`&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kevin&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;$3&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&amp;lt;!--break--&amp;gt;&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;$4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(code python honteusement piqué su site de l’auteur du plugin)&lt;/p&gt;

&lt;p&gt;Maintenant que j’ai réussi a l’installer je pense que je vais m’amuser à écrire des tonnes de snippets dans tous les sens et pour tout et n’importe quoi!&lt;/p&gt;

&lt;h2 id=&quot;vim-airline&quot;&gt;Vim-airline&lt;/h2&gt;

&lt;h4 id=&quot;ou-comment-rendre-linterface-de-vim-badass&quot;&gt;Ou comment rendre l’interface de Vim badass&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://bling.github.io/&quot;&gt;Site de l’auteur&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;: &lt;a href=&quot;http://vimawesome.com/plugin/vim-airline-sad-beautiful-tragic&quot;&gt;http://vimawesome.com/plugin/vim-airline-sad-beautiful-tragic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;J’aime beaucoup ce plugin, mais j’ai eu aussi pas mal de difficultés à le faire marcher vraiment correctement jusqu’à récemment ou je me suis replongé dessus.
Le principal problème que  j’avais etait…qu’il ne m’obéissait pas du tout en fait! Le premier problème que j’avais venat du fait qu’il ne s’affciahait que lorsque j’avais au moins deux fenêtres Vim. Or en me baladant sur superuser.com j’ai trouvé cette commande a rajouter dans le vimrc:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; laststatus&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si on regarde la documentation Vim correspondant à ce paramètre, on comprend que ça gère les cas dans lesquels la statusline doit s’afficher ou non, en mettant la valeur 2 on lui demande de s’afficher tout le temps, alors qu’avec la valeur 1 on lui demande de ne s’afficher que lorsqu’il y a au moins deux fenêtres.&lt;/p&gt;

&lt;p&gt;On peut ensuite configurer l’apparence de cette statusbar de deux façons. Soit en choisissant manuellement chacun des composants et leur apparence, soit en choisissant un thème avec la commande suivant:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;AirlineTheme&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et en faisant défiler a l’aide de la commande Tab.
On peut déjà choisir les informations qui sont affichées dans la statusbar, pour ça vim-airline découpe la barre en &lt;strong&gt;Section&lt;/strong&gt;, qui sont nommées de a,b,c,x,y,z. Voici ma configuration:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; lastsatus&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:airline_powerline_fonts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:airline_section_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;%{strftime(&quot;%H:%M&quot;)}&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:airline_section_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;%{char2nr(getline(&quot;.&quot;)[col(&quot;.&quot;)-1])}&#39;&lt;/span&gt; &quot;Pour obtenir &lt;span class=&quot;k&quot;&gt;la&lt;/span&gt; valeur &lt;span class=&quot;k&quot;&gt;ascii&lt;/span&gt; du caractè&lt;span class=&quot;k&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;la&lt;/span&gt; position du curseur
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:airline_section_z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Line:%l Col:%c&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pour avoir les jolis affichages en flèches de vim-airline. il faut installer les polices de caractères de powerline. Pourquoi? Parce que ce sont des caractères en forme de flèche ou de branche ou tout un tas d’autres choses qui en fait ne vont pas servir à écrire du texte mais a affiner l’affichage. Pour l’installer il suffit d’aller sur la page &lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;Github de powerline&lt;/a&gt; et de lancer le install.sh du .zip téléchargé.&lt;/p&gt;

&lt;p&gt;Pour changer le thème de base:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:airline_theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;murmur&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lorsque j’ai voulu pour la première fois changer de thème, je me suis rendu compte que je n’obtenais absolument pas les même résultats que sur les screenshots de Vim-airline. Avant de modifier les couleurs il fallait donc déjà qu’elles soient fonctionnelles! A force de farfouiller sur le net, j’ai compris qu’il y avait une variable liée a la gestion du nombre de couleurs dans Vim qui s’appelle t_Co, j’ai rajouté donc cette ligne dans mon vimrc:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; t_Co&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;256&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et victoire ça marche! En fait avant cette ligne ma valeur pour t_Co était de 8! Si cette variable est le nombre de couleurs de la fenêtre Vim, alors avant j’avais encore moins de couleur que Mario Bros sur arcade!(Et j’ai vérifié)&lt;/p&gt;

&lt;p&gt;Il me reste encore un bon paquet de plugins a traiter, mais au moins juste écrire cet article m’a permis de revoir pas mal de choses sur la configuration de Vim-airline et Ultisnips ce qui n’est pas plus mal (Pour l’histoire du lastsatus a 1 par défaut, je ne l’ai appris qu’hier)&lt;/p&gt;

&lt;p&gt;Si certaines personnes lisant cet article trouvent des choses à redire ou a rajouter n’hésitez pas mon adresse mail est dans l’onglet Contact, en attendant que les commentaires fonctionnent sur le site!&lt;/p&gt;

&lt;p&gt;@pluche&lt;/p&gt;
</description>
				<pubDate>Wed, 16 Sep 2015 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2015/09/16/topo-des-plugins-vim-01.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2015/09/16/topo-des-plugins-vim-01.html</guid>
			</item>
		
			<item>
				<title>Un nouveau blog tout beau avec Jekyll</title>
				
					<description>&lt;p&gt;Voilà j’ai enfin terminé de faire ce blog! Il sera passé par beaucoup d’étapes, mais le résultat vaut vraiment le coup. Principalement parce que c’est moi qui l’ai fait, en choississant a ma sauce chaque petit morceau. Je pense que la partie la plus dure n’a pas tant été l’apprentissage de Jekyll pour générer un site statique, mais plutôt le choix d’un design final pour ce site. Autant se l’avouer tout de suite: Je ne suis pas doué quand il s’agit de réfléchir au design d’un site web. Autant pour un logiciel il existe des bibliothèques qui définissent des menus, des canvas, des onglets etc… Autant dans le web c’est une galaxie de possibilités, a un tel point qu’on ne s’y retrouve plus.
&lt;!--break--&gt;&lt;/p&gt;

&lt;p&gt;Mais bon j’y suis finalement arrivé. Il manque encore quelques petite touches au site (je pense notamment aux commentaires, qui ne fonctionnenent pas du tout vous pouvez essayer vous ne verrez jamais votre commentaire s’afficher sur mon site, et aussi une petite liste des copains et autres sites a voir. Peut-être vais-je rajouter ça dans l’onglet Contact).&lt;/p&gt;

&lt;p&gt;Un peu de technique maintenant. Comme je l’ai mentionné, j’utilise Jekyll pour faire de la génération de code statique. Pour ceux qui ne savent pas, statique signifie (en gros) qu’il n’y a pas de code PHP, donc pas de gestion coté serveur. Vous avec de l’HTML, et du CSS. C’est quasiment tout ce qu’il y a sur ce site. Le gros avantage de Jekyll par rapport a ce que je voulais est qu’il est spécialisé pour la conception de Blogs, avec une gestion des articles qui sont écrit de mon coté en langage Markdown, puis sont transformé en page HTML/CSS par Jekyll selon un modèle que j’ai défini.&lt;/p&gt;

&lt;p&gt;Ah oui il faut en parler de ces modèles, ou plutôt appelé par Jekyll des Layouts. Pour générer du code avec Jekyll, on commence par écrire des pages qui serviront de modèles pour la génération, et en mettant dedans des commandes Jekyll pour lui donner des informations, comme lui dire a quel endroit insérer le contenu de la page qui utilise ce Layout. Un modèle peut être tout et n’importe quoi en HTML. Pour ce site j’utilise a peu près deux catégories de Layouts, d’un coté ceux qui contiennent le code de base d’une page HTML donc avec le DOCTYPE les balises &amp;lt;head&amp;gt; les lignes d’insertion de CSS etc… Agrémentés donc en plein milieu d’une ligne avec  pour placer le contenu de la page. Et d’un autre coté j’utilise des Layouts qui eux-mêmes sont derivés des Layouts de la première catégories.&lt;/p&gt;

&lt;p&gt;C’est le système que j’aime le plus avec Jekyll car ça permet de créer des modèles de pages au début, ce qui fait que pour la suite on a plus qu’à écrire le contenu qu’on veut et indiquer le modèle a utiliser. Non seulement ça simplifie la vie mais c’est en plus très facilement lisible quand on veut remettre les mains dans le cambouis. Par exemple quand j’écris cet article, j’écris un fichier de type Markdown, avec le contenu de mon article et le formattage que je veux faire (Jekyll s’occupe aussi de convertir le Markdown en HTML. Franchement, quel homme ce Jekyll!), et avec au début deux trois lignes d’information qui sont utilisées par Jekyll dont le Layout.&lt;/p&gt;

&lt;p&gt;Je pense que je vais conclure sur le fait que je suis vraiment satisfait des possibilités offertes par Jekyll. Il permet de facilement faire du code statique sans se casser la tête et surtout le rendu final est très performant puisqu’on n’a ni PHP ni Javascript pour faire tout ça. Mais après rien n’empêche de rajouter du PHP ou du Javascript! Par exemple sur ce site le bouton ‘Contact’ a une propriété HTML onclick qui lance une fonction Javascript pour afficher ou non la barre de Contact. J’ai aussi quelques lignes de PHP qui me permettent de gérer le formulaire d’envoi de commentaire, pour m’envoyer un mail avec le contenu et je n’ai plus qu’à rajouter ça au site (pas très pratique certes puisqu’il faut recopier le contenu du mail, le nom et l’article associé, dans le dossier _comments, mais apparemment il existe des ptits gars qui ont fait un script pour automatiser tout ça)&lt;/p&gt;

&lt;p&gt;Si vous voulez vous lancer dans la création d’un blog et que vous êtes débutant comme moi, Jekyll est vraiment un très bon outil pour faire ça.&lt;/p&gt;

&lt;p&gt;Gloire a Jekyll :3&lt;/p&gt;
</description>
				<pubDate>Fri, 04 Sep 2015 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2015/09/04/un-nouveau-blog-tout-beau-avec-jekyll.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2015/09/04/un-nouveau-blog-tout-beau-avec-jekyll.html</guid>
			</item>
		
			<item>
				<title>Neobot un bot en ligne de commande pour les unix like</title>
				
					<description>&lt;p&gt;Salut tout le monde&lt;/p&gt;

&lt;p&gt;Alors tout d’abord pour ceux qui ne le savent pas, qu’est-ce qu’un &lt;em&gt;bot&lt;/em&gt; en informatique? C’est un programme qui va se gérer tout seul pour accomplir une ou des tâches voulues par les développeurs du bot. Leurs utilisation est vaste, cela va du jeu vidéo (les ennemis d’un jeu de FPS contrôlés par l’ordinateur par exemple) à la gestion des salons de discussion IRC en passant par les bien connus spambots, vous savez les faux comptes inscris sur les forums de discussions simplement pour balancer de la pub en vrac… Pour en savoir plus, je vous invite à lire la page wikipédia sur les &lt;a href=&quot;https://fr.wikipedia.org/wiki/Bot_informatique&quot;&gt;bot informatique&lt;/a&gt;.&lt;/p&gt;

&lt;!--break--&gt;
&lt;p&gt;Il existe une catégorie de bot qui ont pour but de tenir une conversation en ayant l’air le plus possible humain, connu sous le nom de Chatbot. C’est sur cette catégorie de bot que l’on va s’attarder aujourd’hui avec &lt;a href=&quot;http://dcjtech.info/topic/neobot-v1-0b-release/&quot;&gt;Neobot&lt;/a&gt;. C’est un logiciel développé par Devyn C. Johnson (dont j’ai déjà parlé ici, rappelez-vous les articles sur le &lt;a href=&quot;http://mintic.blog4ever.com/blog/linux-kernel-introduction&quot;&gt;Kernel Linux&lt;/a&gt;), dont le coeur du programme est développé en Python3, pour quelque détails supplémentaires sur les outils utilisé, vous pouvez regarder &lt;a href=&quot;https://www.chatbots.org/chatbot/neo/&quot;&gt;ICI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Neobot est portable, c’est-à-dire qu’il n’a pas besoin d’être installé pour être lancé. Une fois téléchargé et dezippé, vous pouvez lancer directement l’executable appelé Betabot. Il faut attendre quelques secondes pour que le Neobot soit totalement lancé. Lorsque que c’est le cas il devrait vous afficher un message de bonjour. Voilà vous pouvez commencer à discuter avec lui (uniquement en anglais pour le moment)&lt;/p&gt;

&lt;p&gt;Je trouve ce bot particulièrement intéressant pour deux raisons principalement: la première est que, malgré le fait que ce soit écrit en python qui est un langage haut niveau, Neobot est assez performant. Il utilise un format de base de données crée spécialement pour cette catégorie de bot appelé Xaiml.&lt;/p&gt;

&lt;p&gt;La deuxième est que vous pouvez poser des questions sur votre pc a Neobot et il pourra vous repondre. Par exemple si vous lui demandez de lancer Firefox et bien il ira chercher Firefox et le lancera pour vous. Vous pouvez aussi demander des inforomations sur votre système. Par exemple si vous lui demandez “Where am I” il vous repondra par le dossier courant dans lequel vous êtes dans votre temrinal.&lt;/p&gt;

&lt;p&gt;Si vous souhaitez voir un peu les autres projets sur lesquels Devyn C.Johnson a travaillé ou même en discuter, vous pouvez aller jeter un coup d’oeil sur &lt;a href=&quot;http://dcjtech.info/&quot;&gt;http://dcjtech.info&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bonne journée à tous!&lt;/p&gt;
</description>
				<pubDate>Fri, 30 Jan 2015 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2015/01/30/neobot-un-bot-en-ligne-de-commande-pour-les-unix-like.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2015/01/30/neobot-un-bot-en-ligne-de-commande-pour-les-unix-like.html</guid>
			</item>
		
			<item>
				<title>Premiers pas dans le développement de Firefox OS</title>
				
					<description>&lt;p&gt;Salut tout le monde!&lt;/p&gt;

&lt;p&gt;Comme je le disais dans &lt;a href=&quot;/2015/01/22/changer-de-homescreen-dans-firefox-os.html&quot;&gt;mon précédent article&lt;/a&gt;, il existe plusieurs applications pour changer son homescreen, mais elles datent toutes
 de plusieurs jour/mois et ne sont, pour la plupart, plus fonctionnelles. Je me suis donc dit que j’allais regarder l’un des projets que j’ai présenté et essayer de le patcher pour le faire fonctionner.
&lt;!--break--&gt;
J’ai choisi l’application &lt;a href=&quot;https://github.com/mgoodings/zwipe&quot;&gt;Zwipe&lt;/a&gt;, d’une part parce que les screenshots donnaient l’impression d’une application assez sympa ésthétiquement, et d’autre part car Zwipe
 fonctionne à l’aide du framework AngularJS, sur lequel j’avais déjà essayé de travailler il y a quelques semaines mais sans résultat. Pour (ré-)apprendre à utiliser AngularJS, je me suis aidé de &lt;a href=&quot;http://www.grafikart.fr/formations/angularjs&quot;&gt;ce cours
sur Graphikart &lt;/a&gt; qui explique vraiment très bien son fonctionnement&lt;img src=&quot;/images/zwipe1.png&quot; alt=&quot;Zwipe1&quot; style=&quot;float:right&quot; /&gt;.Je suppose que vous connaissez déjà
AngularJS ou que vous venez de regarder le cours que je viens de mettre en lien, sinon il y aura plusieurs points dans cet article que vous risquez de ne pas comprendre.&lt;/p&gt;

&lt;p&gt;Bon alors déjà première étape, ouvrir WebIDE. Pour ceux qui ne le savent pas WebIDE est un outil dans le navigateur Firefox pour le développement sous Firefox OS, il est mis par défaut dans Firefox
Developper Edition. Une fois ouvert, il faut cliquer sur “Open Packaged app”, puis sélectionner le dossier de zwipe que l’on vient de télécharger. Ensuite on sélectionne comme runtime son téléphone et on
installe l’application. On tombe sur ce qui est montré à sur l’image ci-contre. On voit…bah pas grand chose, mais l’oeil avisé aura remarqué le petit 1 dans son cadre rouge en bas à droite. Il faut donc
maintenant aller dans WebIDE et faire “Debug App” (ou appuyer sur F12).&lt;/p&gt;

&lt;p&gt;La Console nous donne ce message d’erreur “Error: $scope is undefined”, ce qui est un peu dommage vu qu’AngularJS fonctionne principalement à l’aide de cette variable. Donc on ouvre son éditeur de texte
favori et on va ouvrir les fichiers qui nous intéressent: /index.html et /js/app.js. Le fichier index.html nous apprend trois choses importantes. Premièrement le Module est nommé dans la balise html et
s’appelle &lt;u&gt;zwipe&lt;/u&gt;, deuxièmement le Controller dans lequel l’application travaille s’appelle &lt;u&gt;ZwipeCtrl&lt;/u&gt;, et enfin on sait qu’il existe un tableau de variables &lt;u&gt;apps&lt;/u&gt;, qui contient les applications et les
informations qui leurs sont liées.&lt;/p&gt;

&lt;p&gt;Bon maintenant regardons le fichier app.js. On a une première grosse fonction anonyme au début de ce fichier qui contient une fonction DashApplication, nous en reparlerons un peu plus tard, sachez simplement
qu’elle s’occupe de récupérer les données des applications installées pour nous. Juste après on a ce qui nous intéresse, c’est-à-dire la création du module &lt;u&gt;zwipe&lt;/u&gt;.&lt;/p&gt;

&lt;p&gt;Dedans on y distingue deux gros groupes plus une config:  une Factory qui s’appelle &lt;u&gt;AppService&lt;/u&gt;, et la définition du Controller &lt;u&gt;ZwipeCtrl&lt;/u&gt;. Dans ce dernier on a la définition de la function avec les variables
qui vont bien en deuxième paramètre, et notamment la fameuse variable $scope! Donc on la met bien en paramètre, pourquoi est-elle marqué comme indéfinie alors???  Si vous venez tout juste de regarder le
cours sur Graphikart, vous aurez peut-être une information essentielle enore fraîche dans votre esprit. Parfois le code d’une page web peut être amené à subir une opération de &lt;strong&gt;minimisation&lt;/strong&gt; afin d’optimiser
l’application/la page. Problème: cela passe parfois par un renommage des variables! Ainsi notre variable en paramètre n’est probablement plus la bonne :/ Donc pour pouvoir pallier à ce problème, on change un
peu le format du deuxième paramètre du Controller, pour le transformer en tableau!&lt;/p&gt;

&lt;p&gt;Et donc dans ce tableau on va mettre d’une part 3 chaines de caractère dans lequel on va copier chacun des paramètres de la fonction (autant le faire pour les trois paramètres, vu que le problème risque
d’être le même pour tout les paramètres ;) ), puis d’autre part en 4e paramètre la fonction en elle-même qui ne change pas. Au fait, nous avions aussi une Factory non? Peut-être doit-on lui faire subir la
même opération? Et bien effectivement! Donc rebelote avec la Factory ZwipeCtrl, on fait un tableau pour contenir la variable $q. Et surtout on oublie pas de fermer les crochets à la fin de la Factory.&lt;/p&gt;

&lt;p&gt;Si tout s’est passindex2.pngé comme il faut on se trouve avec ce qu’il y a à la capture d’écran à gauche. C’est déjà plutôt cool! Mais on voit apparaitre du coup un deuxième problème qui nous était invisible
avant. La plupart des icones sont remplacées par une icone par défaut, alors qu’elle fonctionnaient bien sur le Homescreen de base (enfin, je le suppose, si ce n’est pas le cas chez vous c’est dommage ;) ).
Bon, ça siginifie qu’on a un problème à la récupération des données des applications. Ça tombe bien on a une function qui s’en occupe: DashApplication! Quand on regarde son code dans le fichier app.js on
voit qu’il y a tout un tas de “sous-fonctions” pour récupérer certaines données, notamment une pour les icones. S’il existe un objet &lt;u&gt;this.manifest.icons&lt;/u&gt; alors on récupère la case ‘60’ dans cet objet, qui
contient le chemin vers l’image d’une taille de 60 pixel.&lt;/p&gt;

&lt;p&gt;Or si on regarde les icones pour les autres applications, toutes n’ont pas une icone de taille 60. On va devoir changer légèrement ce code. On initialise une variable i à 60, et on va la faire travailler
dans une boucle while, disons jusqu’à que i soit supérieur à 512. Pour chaque valeur jusqu’à 512 on va regarder si this.descriptor.icons[i] vaut quelque chose, si c’est le cas alors on a une icone et on le
retourne, sinon on incrémente de 2 et on recommence. Si à 512 on a vraiment rien trouvé alors là on renvoie null. Cette petite boucle pourra nous permettre de recupérer à peu près toutes les icones, sauf
celles qui pourraient être un peu exotique ( inférieure à 60 pixel ou supérieure à 512).&lt;/p&gt;

&lt;p&gt;Une nouvelle capture pour voir ce que ça donne?  Pas tout de suite car voici que nous avons encore des problèmes! Même si déjà ça s’améliore grandement ^^ Le premier problème est un texte incompréhensible
balancé en erreur dans la console, le deuxième est que certaines icones sont du coup sont plus
petites que d’autre, et c’est moche. Pour le premier problème je vais l’expliquer en accéléré parce que je ne me souviens pas de ce qui m’avais permis de me rendre compte de ce problème. En fait il y a une
application pour le thème par défaut de gaia, et elle ne dispose pas d’icone. Mais de toutes façon on n’en veut pas de cette “application” qui n’en est pas vraiment une. On retourne dans la Factory, et là on
a une variable &lt;u&gt;hiddenRoles&lt;/u&gt;, dans laquelle on va rajouter le role “theme”. Le role dans une application Firefox OS sert à définir ce que fait en gros l’application, il n’existe pas beaucoup de role pour
l’instant, alors beaucoup n’ont pas de rôles, et d’autres en ont pour un but bien précis, mais du coup ne sont pas des applications utilisable en tant que tel.
Pour le deuxième problème &lt;img src=&quot;/images/zwipe2.png&quot; alt=&quot;Zwipe2&quot; style=&quot;float:left&quot; /&gt;, en fait on peut simplement ajouter un style à la balise html qui contient l’image, pour luindex3.png, fixer une taille. Donc dans
index.html à la balise &lt;img /&gt; on rajoute un petit style=”width 70px; height: 70px”. C’est une valeur arbitraire on peut mettre ce que l’on veut ^^ À droite vous pouvez voir le résultat que l’on devrait
obtenir une fois tous ce bazar corrigé.
Victoire! Nous voilà avec une applications exploitable!&lt;/p&gt;

&lt;p&gt;Avec un peu de travail, et d’acharnement on a donc pu corriger les petit soucis d’une application utilisant un framework, et qui utilise les fonctions de récupérations de données des applications Firefox OS.
Bien sûr elle n’est pas encore parfaite, mais quelle applications pourrait se targuer de l’être ;)&lt;/p&gt;

&lt;p&gt;J’espère que cet article vous a plu, et plus important encore vous aura montré que parfois il suffit de pas grand chose pour faire planter une application, mais qu’on peut tout à fait y corriger pour peu
qu’on accepte d’y mettre le temps qu’il faut. J’ai personellement mis environ deux jours entier (du réveil au coucher à peu près) pour trouver et corriger ces bugs, et je suis un grand débutant dans le
domaine. N’hésitez pas à fouiller cette application pour comprendre un peu comment elle fonctionne et comment exploiter certaines fonctionnalité des API Firefox OS. J’ai forké ce projet pour faire mes
bidouilles mais aussi rajouter mes petits trucs, si ça intéresse quelqu’un mon fork est &lt;a href=&quot;https://github.com/Ilphrin/zwipe&quot;&gt;ICI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sur ce, je vous souhaite une agréable journée, pleine de bidouilles et de renards qui flambent.&lt;/p&gt;
</description>
				<pubDate>Sun, 25 Jan 2015 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2015/01/25/premiers-pas-dans-le-developmment-d-applications-firefox-os.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2015/01/25/premiers-pas-dans-le-developmment-d-applications-firefox-os.html</guid>
			</item>
		
			<item>
				<title>Changer de homescreen dans Firefox OS</title>
				
					<description>&lt;p&gt;Salut tout le monde!&lt;/p&gt;

&lt;p&gt;En discutant hier soir soir sur le salon #BuildOpenCEu, dattaz m’expliquait qu’il est possible sur Firefox OS de changer de Homescreen, l’écran d’accueil en français, pour quelque chose d’entièrement différent, du menu vertical ou horizontal jusqu’au cercle d’application que l’on peut faire tourner avec un mouvement de doigt. J’en ai donc essayé plusieurs  sur mon Open C et voilà ce que ça m’a donné pour chacun d’eux. Je tiens à rappeler que je suis en version Nightly que je met à jour chaque matin, donc il se peut que certains marchent mieux sur votre version de Firefox OS que sur la mienne, le mieux étant d’avoir au moins un test pour chaque version majeure de l’OS. Je m’excuse d’avance pour le manque de Screenshot, d’un part je n’ai pas pensé à en faire et de l’autre étant en Nightly et n’ayant pas encore de carte microSD je ne peux pas enregistrer de capture d’écran sur le téléphone.
&lt;!--break--&gt;&lt;/p&gt;

&lt;p&gt;Les homescreen peuvent être trouvés &lt;a href=&quot;https://gist.github.com/xfausto/7c954f1b31cf086aff79&quot;&gt;ICI&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mgoodings/zwipe&quot;&gt;Zwipe&lt;/a&gt;: Celui que je trouve le plus intéressant, il est censé afficher l’heure et la date au milieu de l’écran ainsi que les applications sous forme de cercle en bas. Il se lance mais n’affiche rien à part un bout de code en guise de titre. Dans le débugger on peut voir que la variable $scope est indéfinie, cette dernière est essentielle pour le framework AngularJS utilisé pour cette appli.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/xfausto/Grayscreen&quot;&gt;Grayscreen&lt;/a&gt;: Une interface simple et plutôt jolie, censé ne fonctionner que pour la 1.4 mais je l’ai testé quand même en 2.2 pour voir, et bien entendu elle ne fonctionnait pas vraiment. On a un fond blanc et la date et l’heure s’affichent correctement à droite mais c’est tout.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yorikvanhavre/MARSScreen&quot;&gt;Marsscreen&lt;/a&gt;: J’accroche pas du tout à celle-ci, la police de caractère n’est pas top et cela semble un peu flou. Néanmoins elle fonctionne à peu près, on a simplement pas les icones du coup toutes les applications ne s’affichent que par leur nom ce qui n’est pas très pratique. Si ça peut en intéresser certains, il n’y a surement pas grand chose à modifier pour faire afficher les icones.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Schoewilliam/Shyhome&quot;&gt;Shyhome&lt;/a&gt;: Cette application ne va pas révolutionner l’interface, mais au moins elle fonctionne à peu près et est agréable à l’oeil, avec un bon fond d’écran ça doit bien rendre.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/xfausto/betsuscreen&quot;&gt;Betsuscreen&lt;/a&gt;: Celle-ci est plutôt prometteuse si on en croit les screenshot, avec une interface qui revient à la mode horizontale des versions 1.x, mais sur mon téléphone je n’ai droit à rien d’autre qu’un écran blanc, dommage…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voilà ce sont les principaux que j’ai essayé, n’hésitez pas à les essayer vous aussi  pour faire des retour, certaines fonctionneront peut-être mieux avec des version différentes.&lt;/p&gt;

&lt;p&gt;Pour ceux qui se posent la question (comme moi ^^), pour tester ces homescreen il suffit de dezipper le paquet téléchargé sur la page github en question, et de faire “Open Packaged app” dans le WebIDE de Firefox, ensuite vous lui demandez de se connecter à votre téléphone (au moment de la sélection, Firefox OS vous demandera une confirmation pour cette connexion) et ensuite de faire “Install and run” avec le bouton en forme de flèche en haut de la fenêtre.&lt;/p&gt;

&lt;p&gt;Voilà c’est tout pour aujourd’hui, si d’autres personnes ont des homescreen à proposer ou que vous auriez trouvé, n’hésitez pas à m’en faire part dans les commentaires!&lt;/p&gt;

&lt;p&gt;Bonne journée à tous!&lt;/p&gt;

&lt;p&gt;PS: J’ai cru comprendre qu’on pouvait demander à WebIDE de faire une capture d’écran, je modifierai l’article pour ajouter des captures à l’occasion ^^&lt;/p&gt;
</description>
				<pubDate>Thu, 22 Jan 2015 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2015/01/22/changer-de-homescreen-dans-firefox-os.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2015/01/22/changer-de-homescreen-dans-firefox-os.html</guid>
			</item>
		
			<item>
				<title>Firefox OS 4 mois après son utilisation</title>
				
					<description>&lt;p&gt;Salut tout le monde!&lt;/p&gt;

&lt;p&gt;Depuis quelques temps sur diaspora* je demande un peu d’aide ou pose des questions par rapport à Firefox OS, car depuis le mois d’Aout j’ai fais la main base sur un Open C!&lt;/p&gt;

&lt;p&gt;Il faut savoir que depuis mon arrivé au lycée, il y a 4 ans, je suis resté avec un Samsung à clapet gris. Il me convenait très bien pour ce que j’en faisais, c’est-à-dire du sms en masse et très vite (j’enverrais une tartelette à la fraise au gars qui à inventé le T9) et puis c’est tout. Je ne m’intéressais absolument pas aux smartphones pour plusieurs raisons. La principale était le manque d’utilité que je pouvais accorder à ces gadgets. Pourquoi avoir une application pour lire mes mails quand je peux les lire des chez moi sous Thunderbird avec un écran qui me fasse pas plisser les yeux?
&lt;!--break--&gt;&lt;/p&gt;

&lt;p&gt;La deuxième raison venait du prix, parce que un petit téléphone à 20€ que je garde 3 ans c’est plus rentable qu’un smartphone à 100€ que je change tous les 6 mois parce que l’OS à été mis à jour et le téléphone ne marche plus trop bien avec.&lt;/p&gt;

&lt;p&gt;Mais mon avis à changé quand j’ai entendu parler de l’Open C l’été dernier. Bon je ne vais pas refaire tout le speech habituel sur le fait d’avoir la possibilité de faire du libre sur les téléphones etc… Donc pour résumer j’ai trouvé ça super cool. Je l’ai donc commandé. Première chose que j’ai fait: Me balader sur le net pour voir qu’est-ce qu’on pouvait bidouiller dessus. Une semaine après je suis passé sous Firefox OS 1.4, et encore une semaine après en version 2.1, version que j’ai toujours à l’heure où j’écris cet article.&lt;/p&gt;

&lt;p&gt;En tant que tout premier smartphone, je suis clairement satisfait de l’Open C et de son OS! La première chose qui m’a plu c’est le fait que l’interface soit vraiment intuitive, avec un assistant d’utilisation qui explique tout ce  qu’il faut pour utiliser son téléphone correctement. Lorsque j’ai voulu comparer avec des téléphone sous Android ou iOS il y a quelque chose qui m’a marqué aussi et j’ai trouvé ça formidable: Pas besoin de se faire de compte pour aller sur le Marketplace. On veut une appli? On cherche, on trouve, on télécharge, point. Je me souviens avoir passé deux heures avec une amie pour l’aider à se faire un compte pour utiliser iOS comme elle le voulait, en ayant abandonné au final parce que ça me cassait les pieds.&lt;/p&gt;

&lt;p&gt;Maintenant que j’ai pris un peu mes marques dans le monde des études supérieures, j’ai commencé à m’intégrer à diverses activités en rapport avec le Web pour pouvoir à terme développer des applications sous Firefox OS, car on est encore très loin des &lt;a href=&quot;http://fr.wikipedia.org/wiki/Google_Play&quot;&gt;800000 applications d’Android il y a deux ans&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mon objectif à court terme est d’arriver à développer des sites web qui respectent le responsive design pour pouvoir les tester dans le navigateur de Firefox OS et acquérir les bases du développement Web. J’ai réussi à convaincre un ami de ma promo autant intéressé que moi par Firefox OS à se prendre un Open C. (Le fait d’avoir cassé son HTC en voulant installer Firefox OS dessus l’a beaucoup aidé à passer le cap) Nous travaillons sur un projet que nous avions tenté de faire sans succès lors de l’événement de la &lt;a href=&quot;http://www.nuitdelinfo.com/&quot;&gt;Nuit de l’Info&lt;/a&gt;, et nous essayerons de faire une application lui correspondant pour Firefox OS.&lt;/p&gt;

&lt;p&gt;À moyen et long terme j’espère pouvoir convaincre l’association de développement web de mon bahut de l’importance de cet OS, et pouvoir proposer et travailler sur divers projets d’application. On pourrait même organiser des évènements ouverts à la promo pour leur parler de nos idées et pour promouvoir Firefox OS.&lt;/p&gt;

&lt;p&gt;Si tout ça est possible, je pense que je vais bien m’amuser. J’ai déjà noté deux trois petites choses dites sur le web concernant Firefox OS qu’il serait intéressant d’intégrer. Mais bon comme je le disais ce sont des objectifs, je n’arriverai peut-être pas à aller jusque là mais en tout cas ce sont ces buts finaux que je me fixe.&lt;/p&gt;

&lt;p&gt;Sinon c’est dommage que tout ce qui n’est pas en rapport avec le code ne soit pas mis un peu plus en avant. Je veux dire au niveau de la communication. Même si il est possible de bidouiller cet OS et que parfois il faut chercher un bon moment dans la doc pour faire ce que l’on veut, il reste largement accessible pour un utilisateur “lambda”. Et je pense qu’il serait bien de viser les personnes n’ayant jamais eu de smartphone dans les mains puisque son gros avantage c’est la simplicité dans l’utilisation basique par rapport à ses concurrents. Quand je parle d’utilisation basique c’est: SMS, MMS, appels et pourquoi pas musique et vidéos. Pour en revenir à la communication ce serait bien d’organiser des journées de présentation, en plus de ce qui est déjà fait avec E.Leclerc. Je prends l’exemple de Lyon, je n’ai rien vu concernant Firefox OS dans le coin, pourtant il y aurait surement quelque chose à faire, en plus il me semble que sur Diaspora* il y a une bonne petite communauté Lyonnaise. Ou peut-être est-ce simplement parce que je n’ai pas su regarder du bon coté. A creuser.&lt;/p&gt;

&lt;p&gt;Pour  conclure sur mon utilisation de ce téléphone, je dirais qu’il n’y a pas tellement de choses qui ont changées depuis mon Samsung à clapet. Il y a toujours 80% de l’utilisation de mon téléphone qui passe dans les SMS, 15% restant pour  la musique, chose que je ne faisais pas avant. Les 5% restant sont les jeux, que je teste plus qu’autre chose, pour me donner une idée de ce qu’il est possible de faire  en langage Web. À l’occasion j’irais chercher le code source de certaines applications pour voir comment ça fonctionne vraiment sous le capot.&lt;/p&gt;

&lt;p&gt;Si il y a des personnes qui ont déjà développé sous Firefox OS je suis preneur d’infos sur le sujet! ;)&lt;/p&gt;
</description>
				<pubDate>Sun, 14 Dec 2014 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/planet/2014/12/14/firefox-os-4-mois-apres-son-utilisation.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2014/12/14/firefox-os-4-mois-apres-son-utilisation.html</guid>
			</item>
		
			<item>
				<title>Tuxle Triad et Pygame: Avoir une main</title>
				
					<description>&lt;p&gt;Salut à tous!&lt;/p&gt;

&lt;p&gt;Me voilà aujourd’hui pour un deuxième article sur Pygame. Je vais cette fois-ci vous expliquer comment créer une “main” remplie de cartes tirées aléatoirement, et positionner les cartes dans la main.&lt;/p&gt;

&lt;p&gt;La dernière fois je vous avais expliqué comment fonctionnait un objet &lt;strong&gt;Card&lt;/strong&gt;. Mais pour pouvoir jouer il en faudra plus d’une (ça risque d’être quelque peu ennuyant sinon ;) ). Ceux qui ont essayé le jeu savent combien de carte il faut, c’est-à-dire 5 par joueur. Pour faire ça nous allons utiliser tout simplement une liste. Dans la fonction &lt;strong&gt;__init__&lt;/strong&gt; du fichier  game.py, on peut voir les deux lignes suivantes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;self.player1Hand = self.randomHand(1)

self.player2Hand = self.randomHand(-1)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;!--break--&gt;
&lt;p&gt;Je vais expliquer juste après ce qui est à gauche de chaque opérateur =. Je fais donc appel à une fonction r&lt;strong&gt;andomHand()&lt;/strong&gt;, qui appartient à la classe &lt;strong&gt;Application&lt;/strong&gt;. En descendant plus loin dans le fichier (dans les alentours de la ligne 500 à l’heure de l’écriture de cet article), on trouve la définition de cette fonction qui prend le paramètre &lt;strong&gt;player&lt;/strong&gt;. Ce paramètre doit valoir 1 ou -1.&lt;/p&gt;

&lt;p&gt;La ligne la plus importante dans cette fonction est &lt;strong&gt;listCards = [card for card in range(len(allCards))]&lt;/strong&gt;. Cette ligne va répertorier toutes les cartes existantes par un numéro correspondant à leur position dans la liste &lt;strong&gt;allCards&lt;/strong&gt; (qui est créée dans le fichier &lt;u&gt;listOfCards.py&lt;/u&gt;). Ensuite avec la fonction &lt;strong&gt;random.shuffle(listCards)&lt;/strong&gt;, on va mélanger tous ces numéros.&lt;/p&gt;

&lt;p&gt;La boucle &lt;strong&gt;for&lt;/strong&gt; de la fonction va passer 5 fois. A chaque fois, on va prendre le premier numéro de la liste, créer une carte correspondant au numéro de cette liste, l’ajouter à une liste de carte nommée &lt;strong&gt;Cards&lt;/strong&gt; (avec un ‘s’, ce n’est pas l’objet &lt;strong&gt;Card&lt;/strong&gt;) au début, puis supprimer le numéro qu’on a pioché de la liste de numéro. &lt;strong&gt;Cards&lt;/strong&gt; va donc contenir 5 cartes prises aléatoirement dans la liste. Enfin la fonction retourne un objet &lt;strong&gt;Hand&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;On va donc voir maintenant ce qu’est ce fameux objet &lt;strong&gt;Hand&lt;/strong&gt;. Pour cela on va changer de fichier et aller jeter un oeil du coté du fichier &lt;strong&gt;Hand.py&lt;/strong&gt;.  Bon déjà soulagement: il y a moins de 30 lignes de code à lire ;). Sinon, petite explication de l’utilité de cet objet &lt;strong&gt;Hand&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Tout d’abord on enregistre la liste de cartes dans l’instance d’objet &lt;strong&gt;Hand&lt;/strong&gt;. Ensuite on va faire une boucle pour parcourir chacune des cartes de cette liste, et on va à chacune donner des coordonnés pour la placer dans la fenêtre du jeu.&lt;/p&gt;

&lt;p&gt;Petite piqûre de rappel, les coordonnés dans une fenêtre fonctionnent par paires. L’abscisse X et l’ordonnée Y, qui respectivement déterminent la colonne et la ligne du pixel indiqué. On va donc à chaque fois modifier la position du centre de l’objet &lt;strong&gt;Rect&lt;/strong&gt; de la carte (rappelez-vous j’en ai parlé dans &lt;a href=&quot;/2014/08/17/introduction-a-pygame.html&quot;&gt;l’article précédent&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pygame01.png&quot; alt=&quot;Pygame01&quot; style=&quot;float:left&quot; /&gt;En abscisse X, il n’y a que deux valeur possible, selon si l’on est le joueur 1 ou 2 (ou plutôt en l’occurrence, -1 dans le code du jeu, c’est simplement plus facile à gérer d’appeler le joueur 2 par -1), 60 ou 740.&lt;/p&gt;

&lt;p&gt;En ordonnée Y c’est un poil plus compliqué mais pas tant que ça, en fait on prend une position de base, et à chaque fois que l’on parcourt un tour de boucle on veut que la carte suivante soit affiché plus bas, donc on la décale de I*DELTA, I étant le numéro de la carte traitée et DELTA la différence de pixel entre chaque carte.
L’avant dernière ligne est une petite subtilité pour la gestion d’évenement. En fait pour chaque carte on va recréer un objet &lt;strong&gt;Rect&lt;/strong&gt; avec les mêmes valeurs qu’avant SAUF pour la hauteur de l’objet rect qui sera fixé à la valeur DELTA. Pourquoi cela?&lt;/p&gt;

&lt;p&gt;Je n’ai pas encore parlé de la gestion des clics mais c’est assez simple à se représenter. Imaginons que l’on garde les valeur de base, lorsque dans le jeu je vais vouloir cliquer sur une carte, le programme va comparer la position de la souris au moment du clic avec celle des cartes pour voir sur laquelle j’ai cliqué. Mais du coup les cartes se superposent partiellement, et donc si je clique en haut de la deuxième carte, du point de vue du programme j’aurais aussi cliqué sur la carte du dessus qui est légèrement cachée. Et ca va être un bazar pas possible à gérer à chaque fois qu’on voudra poser une carte car il risque de poser celle du dessus.&lt;/p&gt;

&lt;p&gt;Donc pour palier a cela on réduit virtuellement la taille de l’objet &lt;strong&gt;Rect&lt;/strong&gt; de la carte pour qu’il ne s’occupe que d’une partie de la carte lorsque l’on clique. Cela implique un défaut: Si on clique en bas de la dernière carte il ne fera rien puisque ce n’est pas sur l’objet &lt;strong&gt;Rect&lt;/strong&gt;. Je n’ai pour le moment pas encore trouvé de solution convenable à cela. Mais si quelqu’un à une solution à me proposer qu’il se dévoue ;)&lt;/p&gt;

&lt;p&gt;Nous avons donc fait le tour de la question concernant la création d’une main entière de cartes. Voilà tout ce qui se passe quand on lance dans le fichier &lt;u&gt;game.py&lt;/u&gt; les deux lignes de code indiquées en haut de l’article. &lt;strong&gt;self.player1Hand&lt;/strong&gt; et &lt;strong&gt;self.player2Hand&lt;/strong&gt; ne sont donc que des instance d’objet Hand correspondant respectivement au joueur 1 et 2.&lt;/p&gt;

&lt;p&gt;Et vu que c’est la grosse mode du moment, j’ai rejoint Diaspora&lt;em&gt;! Et je dois avouer que je suis sous le charme, à un tel point que je n’utilise presque plus Facebook. Je vais essayer de mettre des news de mes articles à propos de Pygame et Tuxle Triad ainsi que son développement sur Diaspora&lt;/em&gt;, que vous pourrez donc suivre avec  #pygame, dont je suis le seul et unique participant pour l’instant! x) N’hésitez pas à me faire de remarques sur l’article ou même sur mon jeu, si vous l’avez essayé sous tout les angles et que vous avez des porpositions d’ajout et d’améliorations à me faire. ;)&lt;/p&gt;

&lt;p&gt;Je ne sais pas encore sur quoi je vais partir pour le prochain article. Surement la gestion des cases sur le terrain. Mais mes cours ayant prit une grande partie de mon temps je ne sais pas encore quand est-ce que je pourrais l’écrire. Je vais aussi surement faire de légères modifications d’apparence des articles pour rendre plus visible  certaines choses, comme les lignes de code que je met entre balises de citation. Faites-moi savoir si vous avez des idées là-dessus parce que je suis pas très doué pour tout ce qui touche à l’apparence. ^^&lt;/p&gt;

&lt;p&gt;Sur ce je vous souhaite bonne journée à tous et à la prochaine!&lt;/p&gt;
</description>
				<pubDate>Fri, 17 Oct 2014 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2014/10/17/tuxle-triad-et-pygame-avoir-une-main.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2014/10/17/tuxle-triad-et-pygame-avoir-une-main.html</guid>
			</item>
		
			<item>
				<title>Introduction à Pygame</title>
				
					<description>&lt;p&gt;Salut tout le monde!&lt;/p&gt;

&lt;p&gt;Cela fait un bon moment que j’étudie la programmation, j’ai d’abord commencé par le C pour le C++, et même les langages web. Mais ce n’était que de la théorie et je voulais essayer de créer mon propre petit programme, et j’ai découvert le langage Python il y a environ 1 an grâce au célèbre livre &lt;a href=&quot;http://python.developpez.com/cours/apprendre-python3/&quot;&gt;Apprendre à programmer avec Python 3&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mais encore une fois je n’avais rien crée moi-même, je n’avais pendant longtemps fait que la théorie, même si ce livre propose tout un tas d’applications du cours, ce n’était pas de moi que venaient les idées ni le gros du code.  Il y a plusieurs semaines je me suis donc lancé dans une tentative de faire mon propre programme, et plus exactement un jeu, et pour cela j’ai dû apprendre à utiliser la bibliothèque &lt;a href=&quot;http://www.pygame.org/news.html&quot;&gt;Pygame&lt;/a&gt;.
&lt;!--break--&gt;
Petite présentation de la bibliothèque: Pygame est une surcouche pour Python à SDL. On y retrouve absolument toutes les fonctionnalités, ainsi si vous avez déjà travaillé avec SDL, par exemple en C, vous ne serez pas destabilisé. La communauté est très grande et avec le chat IRC ont peut très rapidement recevoir de l’aide. Vous pouvez même, une fois votre programmation entamée, faire une petite page sur le site de Pygame pour le faire découvrir aux autres programmeurs et avoir/donner de nouvelles idées.&lt;/p&gt;

&lt;p&gt;Pygame est une librairie vraiment complète et puissante. Pour apprendre à l’utiliser la plupart des tutoriaux vont faire un pas-à-pas pour coder tel ou tel petit jeu, et avec une explication suffisante pour comprendre à quoi sert tel objet dans tel programme. (A ce propos je conseille la lecture de “Making Game with Python and Pygame”.)  Je n’ai pas la prétention de pouvoir faire mieux, ce que je veux essayer de faire avec cet/ces article c’est d’essayer d’expliquer certains mécanismes qui m’ont permis de coder mon jeu, comme par exemple la gestion du menu, les animations, etc… Au moins cela aura l’avantage d’être en français, parce qu’on peut dire ce que l’on veut, c’est quel que soit le niveau de maitrise on se sent bien plus à l’aise dans sa langue natale! (Enfin pour mon cas ;) )&lt;/p&gt;

&lt;p&gt;Quelques petits liens de documentation sur Pygame:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://python.developpez.com/cours/apprendre-python3/&quot;&gt;Apprendre à programmer avec Python 3&lt;/a&gt;  comme je le disais quelques lignes plus haut, pour ceux qui n’ont pas de base en Python.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/&quot;&gt;Invent With Python&lt;/a&gt; pour apprendre à utiliser PyGame (mais pas que!).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.pygame.org/docs/&quot;&gt;La doc de Pygame&lt;/a&gt;, classique :) Ainsi que les &lt;a href=&quot;http://www.pygame.org/tags/&quot;&gt;projets publiés sur le site&lt;/a&gt;, donc des tonnes de code que l’on peut lire et lancer pour apprendre!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=bMt47wvK6u0&quot;&gt;Une vidéo d’introduction à Pygame&lt;/a&gt;, faire lors de la PyCon. Je vous la conseille vivement même si c’est en anglais car c’est aussi tout un tas de mécanismes des jeux qui sont expliqués.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour commencer un petit mot ce le jeu en question. C’est un jeu de carte inspiré entièrement d’un mini-jeu proposé dans le jeu vidéo Final Fantasy VIII sur la Playstation (première du nom), appelé TripleTriad. Je vais essayer dans cet article d’expliquer d’une manière ou d’une autre comment je m’y suis pris pour coder ça. En rappellant que c’est mon premier vrai programme, et qu’il y a surement des choses à améliorer (ne serait-ce que les bugs que je n’arrive pas encore à résoudre x) ). Vous pouvez retrouver TuxleTriad ( je suis pas allé chercher bien loin pour le nom, pour ceux qui connaissent TripleTriad ;) ) &lt;a href=&quot;https://github.com/Ilphrin/TuxleTriad&quot;&gt;ICI&lt;/a&gt;. Pour le lancer il suffit d’utiliser python2.7 (Attention, pas une version 3.x!) sur le fichier &lt;strong&gt;Menu.py&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Pour ce premier article, je vais commencer par expliquer comment on gère les cartes du joueurs, c’est-à-dire comment récupérer un fichier image pour une carte,. Dans le dossier du jeu, chaque fichier de carte possède un nom sous cette forme:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Nom + &quot;B&quot; ou &quot;R&quot; + &quot;.jpg&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On a ‘B’ pour bleu si c’est le joueur de gauche, et ‘R’ pour rouge si c’est le joueur 2. Chaque carte possède donc un propriétaire (selon la couleur), un nom, et 4 numéro indiqués sur la carte. Ensuite il nous faut une liste pour enregistrer, d’une part, le nom de la carte, et d’autre part ses caractéristique. Cette liste correspond au fichier &lt;u&gt;listOfCards.py&lt;/u&gt;. La deuxième liste contient les caractéristique. L’indice de la liste de caractéristique correspond exactement à la carte du même indice dans la liste de nom.
La liste ‘value’ contient une sous-liste pour chaque carte. Les valeurs de cette liste sont:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Le numéro du haut&lt;/li&gt;
  &lt;li&gt;Le numéro de droite&lt;/li&gt;
  &lt;li&gt;Le numéro du bas&lt;/li&gt;
  &lt;li&gt;Le numéro de gauche&lt;/li&gt;
  &lt;li&gt;Les deux autres ne sont pas encore utilisé dans le jeu ne vous en préocuppez donc pas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Avant d’aller plus loin il faut faire un petit point sur deux outils SUPER importants, tellement importants qu’il n’y a quasiment qu’eux dans mon jeu, et sont présent dans tout les programmes Pygame.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pygame02.png&quot; alt=&quot;pygame02&quot; style=&quot;float:left&quot; /&gt;
Dans Pygame, lorsque l’on veut afficher quelque chose, il faut créer deux objets: &lt;strong&gt;Surface&lt;/strong&gt; et &lt;strong&gt;Rect&lt;/strong&gt;. Les deux peuvent être représentés par un carré à l’écran. Voyez la Surface comme un calque que l’on viendrait poser sur la fenêtre, avec quelque chose déssiné dessus. Une Surface contient donc tout les éléments qui permettent de colorier des pixels. A l’inverse, l’objet Rect ne gère aucun affichage, mais on peut l’imaginer comme une punaise que l’on mettrait sur un calque pour qu’il tienne en place. Sous forme aussi de carré, il contient les coordonnées du calque à plusieurs endroits, et permet de gérer des événements comme des collisions (entre deux Surface, ou même avec avec la souris si elle se trouve dessus).&lt;/p&gt;

&lt;p&gt;Maintenant vous avez tout ce qu’il faut pour comprendre le fichier &lt;u&gt;Card.py&lt;/u&gt;. Chaque carte sera une instance de la classe &lt;strong&gt;Card&lt;/strong&gt;. On enregistre donc dans cette classe:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;self.owner -&amp;gt; Le propriétaire de la carte&lt;/li&gt;
  &lt;li&gt;self.number -&amp;gt; La position du nom de la carte dans listOfCards.py&lt;/li&gt;
  &lt;li&gt;self.name -&amp;gt; le nom de la carte qu’on vient chercher directement dans la liste allCards de listOfCards.py&lt;/li&gt;
  &lt;li&gt;self.top, self.right,…. -&amp;gt; Les 4 valeurs de la carte&lt;/li&gt;
  &lt;li&gt;self.element, self.type, self.About -&amp;gt; Pas intéréssant pour le moment&lt;/li&gt;
  &lt;li&gt;self.inHand -&amp;gt; On veut constamment savoir si la carte est encore dans la main du joueur&lt;/li&gt;
  &lt;li&gt;self.image, self.rect -&amp;gt; La Surface et le Rect de la carte&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;self.image&lt;/strong&gt; vaut ‘None’ au début de la classe, mais on y met une Surface dans la fonction &lt;strong&gt;getCard(self)&lt;/strong&gt; du fichier &lt;u&gt;functions.py&lt;/u&gt;. Cette fonction va d’abord chercher le chemin du fichier carte en fonction du propriétaire, puis il va utiliser la fonction &lt;strong&gt;pygame.image.load&lt;/strong&gt; de Pygame. Cette fonction retourne une Surface remplie avec l’image envoyée en paramètre. Et pour finir, de retour dans la classe Card, on récupère le Rect correspondant à self.image avec une autre fonction de Pygame: &lt;strong&gt;self.image.get_rect()&lt;/strong&gt;. Cette fonction s’utlise uniquement sur une Surface, et va en extraire un objet Rect qui contient les information nécessaire à l’exploitation  de la Surface. (Sa largeur, sa hauteur, etc…).&lt;/p&gt;

&lt;p&gt;Voilà il me semble que l’on a fait le tour de cette première partie. La fonction &lt;strong&gt;changeOwner&lt;/strong&gt; permet au jeu de gérer le changement de propriétaire (lorsque l’adversaire capture notre carte ou réciproquement), et la fonction &lt;strong&gt;__repr__&lt;/strong&gt; est propre à Python, et nous permet de faire un “print notreObjet” même si cet objet n’est pas une chaine de caractères.&lt;/p&gt;

&lt;p&gt;C’est la première fois que je fais ce genre d’article, n’hésitez donc pas à me donner des retour, me dire ce qui vous a plu/déplu, ce qui aurait mérité plus d’éclaircissement etc… Et si quelqu’un lisant cet article s’y connait en Pygame et souhaite me corriger sur quelque chose, qu’il le fasse! Je ne voudrais pas dire de bêtises et être la cause du mal de crâne de plusieurs personnes ;)&lt;/p&gt;

&lt;p&gt;Voilà amusez-vous bien et bonne programmation ;)&lt;/p&gt;
</description>
				<pubDate>Fri, 15 Aug 2014 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/planet/2014/08/15/introduction-a-pygame.html</link>
				<guid isPermaLink="true">http://ilphrin.com/planet/2014/08/15/introduction-a-pygame.html</guid>
			</item>
		
			<item>
				<title>Sunflower passe en version 0.2-59</title>
				
					<description>&lt;p&gt;Bonjour à tous!&lt;/p&gt;

&lt;p&gt;Ce n’est pas la première fois que je parle de Sunflower. Petite piqûre de rappel, c’est un gestionnaire de fichier pour  GNU/Linux entièrement codé en Python, avec la bibliothèque GTK. La particularité de Sunflower réside dans le fait qu’il propose une vue en panneaux jumelés, c’est-à-dire que c’est comme si on avait deux onglets d’exploration d’ouvert simultanément, chacun des onglets prenant une portion de la largeur de la fenêtre.
&lt;!--break--&gt;
Récemment une version majeure pour Sunflower à été publiée, rajoutant plusieurs support et corrigeant quelques bugs. Voici une petite liste de ce qui a été modifié:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Configuration de la taille de police&lt;/li&gt;
  &lt;li&gt;Support de l’interface DBus&lt;/li&gt;
  &lt;li&gt;Verrouillage des onglets et menus&lt;/li&gt;
  &lt;li&gt;Plusieurs traductions mises à jour (dont la française par votre humble serviteur :p)&lt;/li&gt;
  &lt;li&gt;Amélioration des performances pour le chargement des répertoire&lt;/li&gt;
  &lt;li&gt;Plusieurs corrections pour la liaison avec Git&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et tout un tas d’autres ajouts et corrections que l’on peut retrouver en lisant le fichier &lt;a href=&quot;https://github.com/MeanEYE/Sunflower/blob/master/CHANGES&quot;&gt;CHANGES&lt;/a&gt;. (Vraiment, la liste est longue!)&lt;/p&gt;

&lt;p&gt;Si on veut vraiment la toute dernière version on peut aller la chercher directement sur le dépot Github. Mais des paquets stables existent aussi pour les distributions les plus courantes (Ubuntu-like, Archlinux, etc…)&lt;/p&gt;

&lt;p&gt;Voilà c’est tout pour cet article, j’en ai plusieurs autres en préparation que je vais essayer de sortir avant que les cours ne reprennent, notamment un article sur Pygame, et peut-être une liste des musiques ou livres libres que j’ai écoutées ou lus récemment.&lt;/p&gt;

&lt;p&gt;À la prochaine!&lt;/p&gt;
</description>
				<pubDate>Sun, 10 Aug 2014 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2014/08/10/sunflower-pass-en-version-0-2-59.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2014/08/10/sunflower-pass-en-version-0-2-59.html</guid>
			</item>
		
			<item>
				<title>Linux Kernel: Sécurité et Configuration (1ère partie)</title>
				
					<description>&lt;p&gt;Salut tout le monde!&lt;/p&gt;

&lt;p&gt;Je vous présente aujourd’hui la suite (qui s’est fait attendre) de traduction d’article sur le noyau Linux. Pour rappel vous pourrez retrouver ces articles sur &lt;a href=&quot;linux.org&quot;&gt;linux.org&lt;/a&gt;, ainsi que tout un tas d’autres articles et tutos vraiment super intéressants, je vous conseille vraiment d’y aller! ( Seul bémol: Faut aimer l’anglais. ^^) D’ailleurs on peut voir sur ce site qu’il y a une vingtaine d’articles qui continuent celui-ci sur le noyau Linux, pour vous dire à quel point j’ai pris du retard! Pour me rattraper j’ai fais deux articles en un ici ;)&lt;/p&gt;

&lt;p&gt;Et petit détail que je n’avais pas dis au début, quand vous lisez le pronom “je” dans ces articles, ce n’est pas moi mais l’auteur véritable de l’article qui est ciblé (C’est-à-dire Devyn Collier Johnson).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/2013/07/22/Linux-Kernel-:-Code-Source.html&quot;&gt;Article précédent&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Le noyau Linux est le cœur de tous les systèmes GNU/Linux. Si du code malicieux endommage ou prend le contrôle d’un élément du noyau, le système entier peut être sévèrement endommagé, des fichiers peuvent être supprimés ou corrompus, des informations privées peuvent être volées, etc… Il est clairement dans le meilleur intérêt de l’utilisateur de garder un noyau sécurisé. Heureusement, Linux est un système très sûr grâce à son noyau et a sa sécurité. Il y a moins de virus sous Linux que sous Windows, même en proportion du nombre d’utilisateurs. (C’est pourquoi beaucoup d’entreprises utilisent Linux pour gérer leur serveur.) Cependant, ce n’est pas une excuse pour négliger la sécurité du noyau. Linux possède de nombreuses fonctionnalités et programmes, mais seuls les Linux Security Modules (LSM) et autres système de sécurité du noyau seront abordés dans cet article.
&lt;!--break--&gt;
&lt;a href=&quot;http://fr.wikipedia.org/wiki/AppArmor&quot;&gt;AppArmor&lt;/a&gt; (Application Armor) est un module de sécurité crée à l’origine par Immunix. Depuis 2009, Canonical maintient le développement du code ( Novell s’en est occupé après Immunix et avant Canonical). Ce module de sécurité à été dans le noyau principal depuis sa version 2.6.36. AppArmor restreint les possibilités des programmes. AppArmor utilises les chemins de fichiers pour vérifier les restrictions de programme. Beaucoup d’ administrateurs Linux affirment que AppArmor est le module de sécurité le plus facile à configurer. Cependant, plusieurs utilisateur Linux pensent que ce module est moins sécurisé que ses alternatives.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://fr.wikipedia.org/wiki/SELinux&quot;&gt;Security-Enhanced Linux&lt;/a&gt; (SELinux) est une alternative à AppArmor, crée par la National Security Agency (NSA). SELinux à été ajouté au noyau depuis la version 2.6. Il opère sur les outils de l’espace utilisateur du noyau. SELinux donne aux programmes (principalement les démons et les applications de serveur). SELinux peut aussi être utilisé pour contrôler les droits de l’utilisateur. Il n’utilise pas les chemins de fichier comme AppArmor, à la place SELinux utilise le système de fichiers pour noter les exécutables quand il vérifie leurs permissions. C’est ce qui fait que SELinux ne peut pas apporter de protection partout, c’est-à-dire tous les systèmes de fichiers, tandis que AppArmor le peux.&lt;/p&gt;

&lt;p&gt;Note: Un démon (ou daemon en anglais, prononcer day-mon) est un programme qui tourne en tâche de fond.&lt;/p&gt;

&lt;p&gt;Note bis: Bien que AppArmor, SELinux, et d’autres soient dans le noyau, seulement un module peut être actif à la fois.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://fr.wikipedia.org/wiki/Smack&quot;&gt;Smack&lt;/a&gt; est une autre possibilité de module de sécurité. Smack fait partie du noyau Linux depuis sa version 2.6.25. Il est supposé offrir plus de sécurité que AppArmor est être plus facile à configurer que SELinux.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/TOMOYO_Linux&quot;&gt;TOMOYO&lt;/a&gt;, un autre module de sécurité, a été intégré au noyau depuis la version 2.6.30. L’objectif principal de TOMOYO est d’analyser le système à la recherche de failles de sécurités.&lt;/p&gt;

&lt;p&gt;AppArmor, SELinux, Smack et TOMOYO forment les quatre modules LSM standards. Les LSM ont une sorte de formulaire de listes d’entités et de ce qu’ils sont permit ou non de faire.&lt;/p&gt;

&lt;p&gt;Yama est un nouveau module de sécurité du noyau Linux. Il n’est pas encore considéré comme un module standard LSM, mais il pourrait à l’avenir être le cinquième. Yama utilises les mêmes principes de fonctionnement que les autres modules.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://fr.wikipedia.org/wiki/Grsecurity&quot;&gt;“grsecurity”&lt;/a&gt; est un groupe de patchs de sécurité pour améliorer la sécurité du noyau Linux. La plupart de ces patchs sont liés aux connections à distances et aux dépassement de tampons. L’un des composant intéressant est PaX. PaX donne au code en mémoire le minimum de privilège possible. Par exemple, un programme en mémoire est marqué comme protégé en écriture. Ce qui est logique si on y pense, pourquoi un programme en train d’être exécuté aurait besoin d’être ré-écrit alors qu’il est toujours en mémoire? Maintenant, du mauvais code ne peut pas changé un programme en cours d’exécution. Un dépassement de mémoire s’effectue lorsqu’un programme écrit des données en mémoire et dépasse sa plage de mémoire pour aller écrire dans la mémoire d’autres applications. Quand PaX est actif, il aide à prévenir ces dépassements de tampon/mémoire car le programme n’aura pas le droit d’écrire dans l’espace des autres programmes.&lt;/p&gt;

&lt;p&gt;Le Linux Intrusion Detection System LIDS) est un patch de sécurité de noyau qui ajoute les fonctionnalités du Mandatory Access Control (MAC). Ce patch agit que un module LSM.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Systrace&quot;&gt;Systrace&lt;/a&gt; est un outil qui réduit et contrôle les accès des application au système de fichier et aux appels systèmes. Les appels systèmes sont des requêtes faites au noyau. Par exemple, quand un éditeur de texte écrit sur le disque-dur, l’application crée un appel système au noyau pour écrire sur le disque-dur.&lt;/p&gt;

&lt;p&gt;Ce sont des éléments très important dans le système de sécurité du noyau Linux. Ces modules et patchs permettent de se protéger de programmes malicieux voulant attaquer le noyau. Sans ces fonctionnalités, le système Linux serait un système d’exploitation peu sûr.&lt;/p&gt;

&lt;p&gt;Maintenant que nous avons une meilleure compréhension du noyau, nous pouvons nous attaquer au plus gros: configurer et compiler le code. La configuration prend énormément de temps. Les outils de configuration posent beaucoup de questions et permettent aux développeurs de modifier chaque aspect du kernel. Si vous n’êtes pas sûr d’une de vos modification, mieux vaut laisser la valeur par défaut proposée par l’outil de configuration. Cette série de tutoriels permettra de comprendre l’ensemble du processus de configuration d’un noyau Linux.&lt;/p&gt;

&lt;p&gt;Pour configurer le code, ouvrez un terminal et déplacez-vous dans le répertoire du code source du noyau. Il existe plusieurs moyen de configurer le code, selon la préférence pour l’interface de configuration:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;make config - Interface en mode texte (celle utilisée couramment).&lt;/li&gt;
  &lt;li&gt;make menuconfig - Mode texte avec des menus colorés et des bouton radios. Cette option permet aux développeur de restaurer une configuration précédente. -ncurses (ncurses-devel) nécessite d’être installé.&lt;/li&gt;
  &lt;li&gt;make nconfig - Un autre mode texte avec des menus colorés. curses (libcdk5-dev) doit être installé.&lt;/li&gt;
  &lt;li&gt;make xconfig - Interface Qt/X-windows. Qt doit être installé.&lt;/li&gt;
  &lt;li&gt;make gconfig - Interface Gtk/X-windows. Gtk doit être installé&lt;/li&gt;
  &lt;li&gt;make oldconfig - Mode texte qui prend les réponses par défauts en fonction d’un fichier de configuration local.&lt;/li&gt;
  &lt;li&gt;make silentoldconfig - Même chose que le mode ‘oldconfig’ mais les réponses du fichier de configuration ne sont pas montrées.&lt;/li&gt;
  &lt;li&gt;make olddefconfig - Comme ‘silentoldconfig’ si ce n’est que plusieurs questions sont complétées automatiquement par leur valeur par défaut.&lt;/li&gt;
  &lt;li&gt;make defconfig - Cette option créée un fichier de config en utilisant les paramètre de l’architecture du système présent.&lt;/li&gt;
  &lt;li&gt;make ${PLATFORM}_defconfig - Crée un fichier de config en utilisant les valeurs de arch/$ARCH/configs/${PLATFORM}_defconfig.&lt;/li&gt;
  &lt;li&gt;make allyesconfig - Cette option crée un fichier de config qui répond ‘yes’ à toutes les question possible.&lt;/li&gt;
  &lt;li&gt;make allmodconfig - Cette option créée un fichier de configuration qui va prendre le plus possible chaque partie du kernel comme module.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NOTE: Le code du noyau Linux peut être inséré dans le noyau lui-même ou être utilisé comme module. Par exemple, les utilisateurs voulant utiliser les drivers Bluetooth comme module (séparément du noyau), l’ajoutent au noyau, ou n’ajoutent rien du tout. Quand le code est ajouté au noyau, celui-ci nécessite plus de mémoire RAM et le temps de boot peut prendre plus de temps. Cependant, les performances du noyau seront plus grandes. Si le code est ajouté comme module, celui-ci restera sur le disque-dur jusqu’à ce qu’il soit nécessaire de l’utiliser. Ensuite seulement le module est chargé dans la RAM. Cela permet de réduire la consommation de RAM du noyau et de réduire le temps de démarrage, mais ses performances seront plus faible car le noyau et les modules seront repartis dans la RAM. L’autre possibilité est de ne pas ajouter de code. Par exemple, un développeur kernel sait que tout les systèmes n’utilisent pas les périphériques Bluetooth. Ainsi donc, le driver n’est pas ajouté au noyau. Cela améliore les performances du noyau. Cependant, si un utilisateur veut utiliser un périphérique Bluetooth plus tard, il aura besoin d’installer le module Bluetooth ou de mettre à jour tout le noyau.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;make allnoconfig - Cette option créée un fichier de configuration qui n’ajoute que l’essentiel du code, en répondant ‘no’ au plus de question possible. Ceci peut parfois rendre le noyau non fonctionnel pour le système sur lequel il a été compilé.&lt;/li&gt;
  &lt;li&gt;make randconfig - Cette option prend des choix aléatoires pour le noyau.&lt;/li&gt;
  &lt;li&gt;make localmodconfig - Cette option créée un fichier de configuration basé sur la liste courante de modules et la configuration du système.&lt;/li&gt;
  &lt;li&gt;make localyesconfig - Cette commande met toutes les options des modules à ‘yes’, la majeure partie du kernel ne sera pas dans des modules.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Astuce: Il est préférable d’utiliser “make menuconfig” car l’utilisateur peut sauvegarder sa “progression” dans la configuration. “make config” ne permet pas cela.&lt;/p&gt;

&lt;h1 id=&quot;configuration&quot;&gt;Configuration&lt;/h1&gt;

&lt;p&gt;La plupart des développeurs choisissent “make menuconfig” ou l’un des menus graphique. Après avoir entré la commande voulue, la première question demande si le noyau qui va être construit sera en 64 bits ou non. Les choix sont “Y”, “n” et “?”. Le point d’interrogation permet de détailler la question, “n” de répondre non et “Y” de répondre oui. Nous choisirons oui ici. Entrez “Y” (attention à la casse, pensez bien à la majuscule).&lt;/p&gt;

&lt;p&gt;NOTE : Au début de l’écriture de cette série d’article, j’ai utilisé “make config”. J’ai plus tard utilisé “make menuconfig” (ncurses). “make config” est linéaire et toutes les questions sont posées les unes après les autres pendant que l’interface ncuses est un menu dérivé. Si vous utilisé une interface de configuration qui utilise des menus, commencez au premier élément du menu et continuez en descendant dans chaque menu et sous-menu. Cela vous permettra de suivre ces articles correctement le long de la configuration de votre kernel.&lt;/p&gt;

&lt;p&gt;NOTE BIS: Si le noyau est compilé sur un système 32 bits, l’outil de configuration vous demandera si le noyau devra être en 32 bits. La première question est différente sur d’autre processeurs.&lt;/p&gt;

&lt;p&gt;La ligne suivante affiche “Cross-Compiler tool prefix (CROSS_COMPILE) [].” Si vous ne fait pas de Cross-Compiling, appuyez sur Enter. Si vous êtes en train de le faire, entrez quelque chose comme “arm-unknown-linux-gnu-“ pour les systèmes ARM ou “x86-64-pc-linux-gnu-“ pour un système 64 bit. Il y a de nombreuses autres commandes possibles pour les autres types de processeurs, mais la liste serait bien trop longue. Une fois que le développeur sait pour quel type de processeur il veut compiler, il pourra aisément chercher la commande nécessaire pour ce processeur.&lt;/p&gt;

&lt;p&gt;NOTE: Le &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross_compiler&quot;&gt;cross-compiling&lt;/a&gt; est le fait de compiler du code pour d’autres processeurs. Par exemple, un système Intel qui fait du  Cross-compiling de code le fera pour d’autres processeurs qu’ Intel. Donc ce système pourra compiler pour un processeur ARM ou AMD par exemple.&lt;/p&gt;

&lt;p&gt;NOTE BIS: Chaque choix changera quelle questions viendront après et quand elles apparaitront. Je vais écrire chacun de mes choix pour que le lecteur potentiel de cet article pour suivre la méthode de configuration sur son propre système.&lt;/p&gt;

&lt;p&gt;Ensuite, on peut voir “Local version - append to kernel release (LOCAL VERSION) []”. Ici on peut donner un numéro de version spécial ou un nom à son kernel personnalisé. Je vais entrer “LinuxDotOrg”. La version du noyau est maintenant “3.9.4-LinuxDotOrg”. Ensuite, l’outil de configuration demande “Automatically append version information to the version string (LOCAL VERSION_AUTO) [N/y/?]”. Si une arborescence de version git est trouvée, le numéro de révision sera ajouté. Dans cet exemple nous n’utilisons pas git, je réponds donc non. Vous vous souvenez de vmlinux et autres fichiers similaires? Et bien la question suivante demandera quel format de compression devra être utilisé. On peut choisir l’une des cinq propositions. Les choix sont:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Gzip (KERNEL_GZIP)&lt;/li&gt;
  &lt;li&gt;Bzip2 (KERNEL_BZIP2)&lt;/li&gt;
  &lt;li&gt;LZMA (KERNEL_LZMA)&lt;/li&gt;
  &lt;li&gt;XZ (KERNEL_XZ)&lt;/li&gt;
  &lt;li&gt;LZO (KERNEL_LZO)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Gzip est le format par défaut, j’entre “1” et je confirme. Chaque format de compression possède plus ou moins de taux de compression que ses concurrents. Un plus grand taux de compression signifie un fichier plus petit, mais plus de temps sera nécessaire pour le décompresser, et inversement.&lt;/p&gt;

&lt;p&gt;Maintenant le logiciel nous affiche “Default hostname (DEFAULT_HOSTNAME) [(none)]”. Le nom d’hôte peut être configuré. Généralement ceci est laissé en blanc, ainsi c’est l’utilisateur final de Linux qui pourra configurer le sien.&lt;/p&gt;

&lt;p&gt;Ensuite on peut activer ou désactiver l’utilisation de la mémoire swap. Linux utilise une partition séparée appelée “swap” qu’il utilise comme mémoire virtuelle. C’est équivalent à la mémoire paginée de Windows. Fréquemment on répond oui à cette question “Support for paging of anonymous memory (swap) (SWAP) [Y/n/?]”.&lt;/p&gt;

&lt;p&gt;La ligne suivante “System V IPC (SYSVIPC) [Y/n/?]” demande si le kernel doit supporter IPC. IPC, qui signifie Inter Process Communication, permet aux processus de communiquer et de se synchroniser. Il est préférable d’activer IPC, sinon de nombreuses applications risquent de ne pas fonctionner. Répondre oui à cette question entrainera l’outil de configuration à demander ‘POSIX Message Queues (POSIX_MQUEUE) [Y/n/?]”. Cette question sera posée uniquement si vous avez activé IPC. Le POSIX Message Queues est une file de messages ( une sorte de communication inter-processus) où chaque message possède un niveau de priorité. Le choix par défaut est oui. Appuyer sur Entrée pour prendre le choix par défaut (indiqué par le caractère en majuscule).&lt;/p&gt;

&lt;p&gt;Ensuite, “Open by fhandle syscalls (FHANDLE) [Y/n/?]” demande si les programmes pourront utiliser le gestionnaire de fichier plutôt que les noms de fichiers quand le système de fichiers aura besoin d’effectuer une opération. Par défaut la réponse est oui.&lt;/p&gt;

&lt;p&gt;Parfois, selon les choix du développeur, certaines questions seront automatiquement complétées. Par exemple, la question suivante “Auditing support (AUDIT) [Y/?]”, est répondue par un oui sans demander à cause des choix précédents. Le support de l’audit permet de faire des logs sur les accès et les modifications de tous les fichiers. La question suivante parle aussi d’audit: “Enable system-call auditing support (AUDITSYSCALL) [Y/n/?]”. Si il est activé, tous les appels système sont enregistrés dans les logs. Si le développeur a besoin de performance, alors il vaudrait mieux désactiver le plus possible de fonctions d’audit et ne pas y ajouter au noyau. Certains peuvent activer ces option pour des questions de sécurité. Nous choisirons non pour cette question. Ensuite nous avons “Make audit loginuid immutable (AUDIT_LOGINUID_IMMUTABLE) [N/y/?]”, qui demande si les processus peuvent changer leur loginuid (LOGIN User ID). Si activée, les processus dans l’espace utilisateur ne pourront pas changer leur loginuid. Pour des questions de performances, nous désactiverons cette fonctionnalité.&lt;/p&gt;

&lt;p&gt;NOTE: Si vous utilisez l’outil à l’aide de la commande “make config”, les questions dont les réponses ont été données automatiquement par l’outil de configuration seront affichées, mais leur réponses ne pourront être modifiées. Si vous utilisez “make menuconfig”, vous ne pourrez changer le choix quel que soit le bouton pressé. De toute façon, changer ces options ne servirait pas à grand chose car un choix précédent à fait qu’il est nécessaire que cette question-là soit répondue d’une manière précise.&lt;/p&gt;

&lt;p&gt;Dans le prochain article, nous configurerons le sous-système IRQ et les choix qui suivent.&lt;/p&gt;
</description>
				<pubDate>Thu, 01 May 2014 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2014/05/01/linux-kernel-securite-et-configuration-partie-1.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2014/05/01/linux-kernel-securite-et-configuration-partie-1.html</guid>
			</item>
		
			<item>
				<title>Passage de Skype à Ekiga</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Ça faisait un moment que je n’avais pas écrit. La cause: Un manque de temps effroyable. Entre les cours, les activités extérieures et deux trois occupations je n’ai plus le temps de rien faire. Mais bon voilà après une longue absence je reviens pour vous parler d’une alternative à Skype qui est déjà bien connue, répondant au nom de &lt;a href=&quot;http://ekiga.org/&quot;&gt;Ekiga&lt;/a&gt;.
&lt;!--break--&gt;
Cela faisait un moment que je me disais qu’il fallait que j’enlève Skype de mon ordinateur. Il est un peu lourd, les notifications sonores sont vraiment moches sur mon pc, et tout récemment à l’acquisition de ma nouvelle webcam je me suis rendu compte que quand je voulais la configurer avec &lt;a href=&quot;http://doc.ubuntu-fr.org/guvcview&quot;&gt;guvcview&lt;/a&gt;, et bien Skype n’était pas content et faisait planter ma session. Ce qui est tout de même gênant car ma caméra permet de faire du 720p avec une luminosité et des couleurs plus qu’acceptable, et Skype me réduit tout ça à du 320x260 et des bandes de couleurs.&lt;/p&gt;

&lt;p&gt;Soit, il ne me restait qu’à trouver un autre logiciel pouvant le remplacer, et essayer de faire venir mes contacts dessus, ce qui n’est pas chose aisée quand le monde entier est habitué à ce seul Skype. A bout d’environ 5 secondes de recherches je trouve mon bonheur. Ekiga est un logiciel de visioconférence sous licence GPLv2 et multiplateforme, qui permet de gérer l’appel Pc à Pc, Pc à téléphone, ainsi que la messagerie instantanée, exactement ce que je cherche somme toute.&lt;/p&gt;

&lt;p&gt;Je lance donc l’installation avec le gestionnaire de logiciels de Linux Mint, et tout de suite un assistant de configuration apparait pour m’aider à configurer mon premier compte en 9 étapes. Ekiga nous demande d’abord de saisir Nom et Prénom, ou son pseudo si l’on veut apparaitre avec quelque chose d’un peu personnalisé aux autres contacts. Ensuite après une brève explication sur l’utilisation du &lt;a href=&quot;https://fr.wikipedia.org/wiki/Session_Initiation_Protocol&quot;&gt;SIP&lt;/a&gt; et du &lt;a href=&quot;https://fr.wikipedia.org/wiki/H.323&quot;&gt;H323&lt;/a&gt;, Ekiga nous invite à créer un compte SIP par le biais de son site, ce que j’ai fais dans mon cas mais l’on peut très bien sauter cette étape si l’on possède déjà un compte avec un autre service en cochant la case en bas de la fenêtre.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ekiga1.png&quot; alt=&quot;Ekiga&quot; title=&quot;ekiga1.pnh&quot; /&gt;&lt;/p&gt;

&lt;p&gt;L’inscription sur le site ekiga.net se fait comme n’importe quel autre compte.  Si ce n’est qu’il y a l’adresse ekiga à prendre en compte (ce n’est pas celle-ci qui faut indiquer à la 4e étape de la configuration de compte). Je n’ai pas fait la configuration Pc-To-Phone parce que ce n’est pas pour ça que je l’ai installé, et je ne pense pas avoir à m’en servir donc je l’ai passée.  Pour ce qui est du type de connexion et des périphériques audio je conseille de laisser tout par défaut au début, et si ça ne marche vraiment pas à ce moment-là vous pourrez toujours revenir configurer tout cela. Pareil pour le périphérique d’entrée vidéo, ce n’est utile que si vous avez une caméra sinon cela ne sert à rien d’y toucher. (Note: Si vous en avez une de branché, sélectionnez-la maintenant sinon ce sera l’autre qui sera prit par défaut, qui est une icone mouvante qui se balade à la place du cadre de l’image de votre caméra)&lt;/p&gt;

&lt;p&gt;Voilà après un récapitulatif des paramètres vous pouvez cliquer sur Appliquer pour terminer la configuration! Si tout s’est bien passé maintenant il vous reste à ajouter des contacts. C’est là que l’adresse Ekiga est utile! Car c’est elle qu’il faut indiquer dans la fenêtre d’ajout de contact. La case Nom peut être remplacé par ce que vous voulez, c’est vous qui choisissez le nom par lequel cette personne apparaitra dans votre liste de contact ou dans vos discussions!&lt;/p&gt;

&lt;p&gt;Bon pour tout vous avouer certaines choses ne marchent pas encore correctement, mais il faudrait que j’essaie avec d’autre personnes pour être certain. Par exemple je reçoit bien la flux vidéo et audio de mon contact (moi sur un Linux Mint 16 et mon contact sur un Windows 8), le son de micro lui est bien envoyé et je me vois bien moi-même en petit avec ma caméra mais mon contact ne me voit pas.&lt;/p&gt;

&lt;p&gt;Voilà j’espère que ce court article vous aura plu, n’hésitez pas à me dire si certaines explication sont incorrecte/incompréhensible/mal dite.&lt;/p&gt;

&lt;p&gt;Sur ce, bonne journée et amusez-vous bien!&lt;/p&gt;
</description>
				<pubDate>Sat, 08 Mar 2014 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/2014/03/08/passage-de-skype-a-ekiga.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2014/03/08/passage-de-skype-a-ekiga.html</guid>
			</item>
		
			<item>
				<title>Dungeon Crawl Stone soup: La perle à avoir</title>
				
					<description>&lt;p&gt;Si il y a bien un domaine auquel personne n’ayant une vie sociale ne peut se souscrire ou au moins en entendre des ragots, c’est bien celui du jeu vidéo. Mais revenons quelques années en arrière. Pas tout à fait à ses débuts, mais à une époque ou les graphismes n’importaient pas tant que ça et, du fait de leurs nombre encore restreint à ce moment-là, l’accent était mis sur le temps de jeu et l’intérêt, et c’était bien visible pour les jeux de rôles notamment (pour ceux qui ont un peu de culture à ce niveau-là, rappelez-vous des Might &amp;amp; Magic et The Eye of the Beholder).
&lt;!--break--&gt;
Pourquoi je parle de ça? Et bien c’est parce que l’on peut classer Dungeon Crawl: Stone soup dans cette catégorie de jeux de rôle “old-school” et pourtant si prenant, si intéressant. Ce jeu se veut d’une simplicité poussée à l’extrême en terme de graphisme, si bien qu’il pourrait tourner sur n’importe quelle machine et autre ordinausore. Si l’on se tourne du coté du ‘background’, l’histoire et l’univers, il n’y a rien. Nous incarnons un aventurier dont la quête est de retrouver l’Orbe de Zot dans un dangereux donjon, et pour ce faire on doit récupérer un certains nombre de runes. Ce n’est pas quelque chose de gênant en soi d’avoir peu d’information car il y a déjà fort à faire avec ce qui est présent!&lt;/p&gt;

&lt;p&gt;Vous pouvez retrouver le jeu et toutes les infos utiles à cette ici: &lt;a href=&quot;http://crawl.develz.org/wordpress/&quot;&gt;Dungeon Crawl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Avant de vous donner un aperçu du jeu et de l’interface, j’aimerais parler des points positifs et négatifs (très peu pour lui) de ce jeu. Tout d’abord l’objectif est de faire des parties “courtes”, c’est-à-dire pas plus de quelques heures. Pour y parvenir il y a trois ingrédients : Une création de personnage qui permette de faire a peu près tout ce que l’on veut ( 24 races et 26 classes pour l’instant), une difficulté plutôt élevé (je n’ai jamais réussi à gagner de parties, mais ça vient probablement aussi de mon coté boulet :) ), et enfin une génération aléatoire de donjon très au point puisque aucun problème de construction n’est apparu de mon coté, du genre salle inatteignable ou monstre surpuissant devant l’entrée du donjon. On peut faire deux milles parties ça ne sera jamais pareil et ça c’est quand même un gros bon point.&lt;/p&gt;

&lt;p&gt;Ensuite sa facilité d’utilisation malgré les nombreuses possibilités et actions qui nous sont offertes. On peut utiliser tout un armadas d’objet allant de la lance à l’arbalète en passant par la fronde, des potions, des parchemins de sorts, des armures de tout types, etc… Avec en plus le système de gestion de nourriture, d’empoisonnement, de fatigue, de contamination magique et tous les autres que j’ai oublié. Et enfin le système de religion qui propose de vénérer tout une palette de dieux en tout genres dont j’ai oublié les noms, déesse de la magie, dieu du chaos, et de à peu près tout et n’importe quoi. A noter que l’importance des dieux peut être tantôt faible tantôt absolument géniale ou mortelle. (Je parle par expérience personnelle, le dieu du chaos qui me fait téléporter au milieu des monstres c’est pas vraiment la joie!).&lt;/p&gt;

&lt;p&gt;J’ai un peu bâclé les points positifs mais je vous laisse le plaisir de découvrir le reste. Je n’aurais que deux choses à reprocher au jeu pour l’instant:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Il n’ existe qu’ en anglais. N’ étant qu’en version 0.13 cela peut se comprendre et de ce que j’en sais plusieurs projets de traductions sont en cours donc ce n’ est qu’ une question de temps.&lt;/li&gt;
  &lt;li&gt;Sa difficulté est un point tout aussi positif que négatif. Il permet un vrai challenge comme je les aime, mais là j’en suis à très exactement 26 parties et je n’ai encore jamais vu de rune!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bon allez assez bavardé regardons un petit peu à quoi ressemble l’ interface du jeu:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/dungeoncrawl01.png&quot; alt=&quot;dungeon&quot; /&gt;&lt;/p&gt;

&lt;p&gt;a) La vue du donjon. On peut voir au centre le personnage, dont l’équipement est la majeur partie du temps très bien visible sur l’avatar, que ce soit une cape, une armure ou des gants. On voit aussi qu’à partir d’un certain nombre de case de mon personnage, les cases découvertes du donjon sont plus sombres pour représenter la portée de vue, qui peut être diminuée ou augmentée selon les situations.&lt;/p&gt;

&lt;p&gt;b) La boite de dialogue. Tous les messages du jeu, les objets et monstres qui apparaissent, les événements, les informations systèmes, les textes de tutoriel, les actions des dieux, etc…&lt;/p&gt;

&lt;p&gt;c) Tout ce qui compose votre personnage sous forme d’onglet et de cases. Tout en haut nous avons les ‘abilities’, actions offertes par la vénération d’un dieu. Plus en dessous il y a les principales actions à utiliser (Attaquer le monstre le plus proche, se reposer, prier, attendre un tour etc…). Ensuite dans l’ordre d’affichage on a ces onglets:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Inventory: L’inventaire, pas grand chose à dire là dessus je pense ;)
  Spells: Les sorts mémorisés par votre personnage, ils en existe bien assez pour assouvir votre soif de destruction!&lt;/li&gt;
  &lt;li&gt;Memorisation: Les sorts que vous pouvez apprendre grâce aux livres contenus dans votre inventaire.&lt;/li&gt;
  &lt;li&gt;Skills: Les compétences, c’est ce qui détermine si vous êtes un bon bagarreur, un assassin aguerri ou un mage puissant.&lt;/li&gt;
  &lt;li&gt;System commands: Divers outils d’information, notamment celui qui à mon sens est le plus important, la liste des mutations qu’à subi votre personnage, je vous laisse la surprise de les découvrir!&lt;/li&gt;
  &lt;li&gt;Navigation: L’onglet de navigation. Pratique pour se déplacer rapidement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;d) Les monstres qui sont a votre portée de vue peuvent être attaqués directement en cliquant sur l’icône correspondante.&lt;/p&gt;

&lt;p&gt;e) La mini carte est très pratique pour se repérer et aller rapidement vers des points précis, il suffit de cliquer sur l’endroit ou vous voulez aller et votre personnage s’y rendra immédiatement! La plupart des informations sont dessus comme les escaliers menant à l’étage supérieur ou inférieur, les cadavres ou les portes.&lt;/p&gt;

&lt;p&gt;f) Et enfin les caractéristiques principales de votre personnage. Votre nom, vos barres de santé et de mana, les stats’ telles que le niveau, la Force la Dextérité et l’Intelligence, la classe d’armure, votre arme, etc…&lt;/p&gt;

&lt;p&gt;Si vous voulez l’installer il suffit sous Archlinux il suffit de lancer la commande:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yaourt -S crawl
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sous Mint il faudra quelques manipulations de plus, mais rien de bien méchant:&lt;/p&gt;

&lt;p&gt;1) Aller dans le centre de contrôle&amp;gt;sources de logiciels et ajouter le dépôt:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deb http://crawl.develz.org/debian crawl 0.13
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2) Ajouter la clé de signature du dépôt:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://crawl.develz.org/debian/pubkey -O - | sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3) Installer le paquet en lançant:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install crawl crawl-tiles
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Et vous voilà en possession de ce jeu! J’espère que vous vous amuserez bien, bonne journée à tous! ;)&lt;/p&gt;
</description>
				<pubDate>Fri, 25 Oct 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/10/25/dungeon-craw-stone-soup-la-perle-a-avoir.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/10/25/dungeon-craw-stone-soup-la-perle-a-avoir.html</guid>
			</item>
		
			<item>
				<title>Arrivee D Octopi 2 0</title>
				
					<description>&lt;hr /&gt;
&lt;p&gt;layout: post_kevin
title: “Arrivée de Octopi 0.2.0”
author: kevin
cover: octopi.jpg
—-&lt;/p&gt;

&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Ça fait un moment que je n’ai pas manifesté ma présence sur le blog, mais je continue de faire les traductions des articles sur le noyau Linux, qui sont longs,  et le prochain ne devrait pas tarder à arriver.&lt;/p&gt;

&lt;p&gt;Aujourd’hui vient de sortir la nouvelle version de Octopi, j’ avais parlé il y a quelque temps de ce gestionnaire de logiciel pour Arch Linux. Cette nouvelle version apporte plusieurs modifications dont de nombreuses traductions (comme le lituanien, le norvégien, l’allemand, le russe, le vietnamien, et plusieurs autres). Voici un aperçu des modifications apportées:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Séparation du projet “octopi” et “octopi-notifier”.&lt;/li&gt;
  &lt;li&gt;Yaourt ne se lance plus avec les permissions root.&lt;/li&gt;
  &lt;li&gt;Ajout du support du terminal Xterm.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vous pouvez voir en détails les modifications &lt;a href=&quot;http://octopiproject.wordpress.com/2013/08/26/octopi-0-2-0-hits-the-wild/&quot;&gt;ICI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Voilà, à la prochaine et profitez bien de ces derniers jours d’été! ;)&lt;/p&gt;
</description>
				<pubDate>Mon, 26 Aug 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/08/26/arrivee-d-octopi-2-0.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/08/26/arrivee-d-octopi-2-0.html</guid>
			</item>
		
			<item>
				<title>Arrivée de Octopi 0.2.0</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Ça fait un moment que je n’ai pas manifesté ma présence sur le blog, mais je continue de faire les traductions des articles sur le noyau Linux, qui sont longs,  et le prochain ne devrait pas tarder à arriver.
&lt;!--break--&gt;
Aujourd’hui vient de sortir la nouvelle version de Octopi, j’ avais parlé il y a quelque temps de ce gestionnaire de logiciel pour Arch Linux. Cette nouvelle version apporte plusieurs modifications dont de nombreuses traductions (comme le lituanien, le norvégien, l’allemand, le russe, le vietnamien, et plusieurs autres). Voici un aperçu des modifications apportées:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Séparation du projet “octopi” et “octopi-notifier”.&lt;/li&gt;
  &lt;li&gt;Yaourt ne se lance plus avec les permissions root.&lt;/li&gt;
  &lt;li&gt;Ajout du support du terminal Xterm.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vous pouvez voir en détails les modifications &lt;a href=&quot;http://octopiproject.wordpress.com/2013/08/26/octopi-0-2-0-hits-the-wild/&quot;&gt;ICI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Voilà, à la prochaine et profitez bien de ces derniers jours d’été! ;)&lt;/p&gt;
</description>
				<pubDate>Mon, 26 Aug 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/08/26/arrivee-d&#39;octopi-2-0.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/08/26/arrivee-d&#39;octopi-2-0.html</guid>
			</item>
		
			<item>
				<title>Linux Kernel: Code source</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Comme promis voici un nouvel article sur le noyau Linux. Comme le précédent ceci est une traduction d’un autre article sur linux.org. Disponible à cette &lt;a href=&quot;http://www.linux.org/threads/the-linux-kernel-the-source-code.4204/&quot;&gt;adresse&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Après que le code source du noyau soit téléchargé et décompressé, les utilisateurs peuvent voir de nombreux dossiers et fichiers. Il peut être d’une grande difficulté de trouver un fichier en particulier. Heureusement, le code source est trié d’une façon spécifique. Cela permet  aux développeurs de retrouver un fichier ou un élément du noyau.
&lt;!--break--&gt;
La racine du code source du noyau contient les dossiers suivants:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;arch
blockcrypto
Documentation
drivers
firmware
fs
include
init
ipc
kernel
lib
mm
net
samples
scripts
security
sound
tools
usr
virt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Il y a aussi quelques fichiers dans la racine du code source, listés ci-dessous :&lt;/p&gt;

&lt;p&gt;COPYING - Informations à propos de la licence et des droits. Le noyau Linux est sous licence&lt;/p&gt;

&lt;p&gt;GPLv2. Cette licence autorise toute personne à utiliser, modifier, distribuer, et partager le code source et à le compiler librement. Cependant, vous ne pouvez pas revendre le code source.&lt;/p&gt;

&lt;p&gt;CREDITS - Liste des contributeurs&lt;/p&gt;

&lt;p&gt;Kbuild - Ceci est un script qui configure plusieurs paramètres pour le noyau. Par exemple, ce script configure la variable ARCH qui est le type de processeur que le développeur veut que le noyau supporte.&lt;/p&gt;

&lt;p&gt;Kconfig - Ce script est utiliser quand un développeur configure le noyau, nous en reparlerons dans un prochain article.&lt;/p&gt;

&lt;p&gt;MAINTAINERS - Ceci est une liste ces mainteneurs, leurs adresses mail, site web, et le fichier ou la partie de code du noyau qu’ils développent ou réparent. C’est assez utile lorsqu’un développeur trouve un bug dans le noyau et veut le rapporter à un mainteneur qui pourra s’occuper du problème.&lt;/p&gt;

&lt;p&gt;Makefile - Ce script est le fichier principal utilisé pour compiler le noyau. Ce fichier passe es paramètres au compilateur comme une liste de fichiers à compiler ainsi que tout autre information nécessaire.&lt;/p&gt;

&lt;p&gt;README - Ce fichier texte fourni des information aux développeur savoir comment compiler le noyau.&lt;/p&gt;

&lt;p&gt;REPORTING-BUGS - Ce fichier texte fourni les informations pour rapporter un bug.Le code du noyau se trouve dans des fichiers portant l’extension “.c” ou “.h”. L’extension “.c” indique que le noyau est écrit en langage C, l’un des nombreux langages de programmation. Les fichiers en “.h” sont des fichiers d’en-tête, et sont aussi écrit en C. Les fichiers d’en-tête (aussi appelé “header” en anglais) contiennent du code fréquemment utilisé dans les fichiers “.c”. Cela permet d’économiser le temps des programmeurs car ils peuvent utiliser ces codes au lieu de ré-écrire le code à chaque fois. Autrement, un morceau de code qui fait la même action serait présent dans tous les fichiers “.c”. Ce qui gaspillerait de l’espace sur le disque-dur.&lt;/p&gt;

&lt;p&gt;Tous les fichiers contenus dans les dossiers cités ci-dessus sont bien organisés. Le nom des dossiers aident les développeurs pour au moins avoir une vision correcte du contenu. L’arbre des répertoires et leurs descriptions sont données ci-dessous.&lt;/p&gt;

&lt;p&gt;arch - Ce dossier contient un Kconfig qui permet de configurer certains paramètres pour compiler le code contenu dans ce dossier. Chaque architecture de processeur dans son dossier correspondant. Par exemple, le code source pour les processeurs Alpha est présent dans le dossier alpha.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alpha
arc
arm
arm64
avr32
blackfin
c6x
cris
frv
h8300
hexagon
ia64
m32r
m68k
metag
microblaze
mips
mn10300
openrisc
parisc
powerpc
s390
score
sh
sparc
tile
um
unicore32
x86
xtensa
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;block - Ce dossier contient les codes des drivers des dispositifs blocks. Les dispositifs block acceptent et envoient des données dans des blocs. Les blocs de données sont des extraits de donnés plutôt qu’un flux continu.&lt;/p&gt;

&lt;p&gt;crypto - Ce dossier contient le code source de nombreux algorithmes de chiffrement. Par exemple, “sha1_generic.c’ est le fichier contenant le code pour l’algorithme de chiffrement sha1.&lt;/p&gt;

&lt;p&gt;Documentation - Ce dossier contient des documents texte qui fournissent des informations sur le noyau et la plupart des fichiers. Si un développeur a besoin d’information, celle-ci peuvent être trouvées ici.&lt;/p&gt;

&lt;p&gt;drivers - Ce répertoire contient les codes source des drivers. Un driver est un logiciel controlant un élément du matériel. Par exemple, pour qu’un ordinateur comprenne un clavier et le rende utilisable, il a besoin d’un driver. Il y a de nombreux dossiers dans celui-ci. Chaque sous-dossier est nommé d’après un morceau ou un type de matériel. Par exemple, le dossier bluetooth contient les codes des drivers pour le bluetooth. Parmi d’autres drivers évidents se trouvent les scsi, usb et firewire. D’autres sont plus difficiles à trouver. Par exemple, les drivers de joystick ne se trouvent pas dans le dossier joystick. Cependant, ils sont dans ./drivers/input/joystick. Les souris et claviers se trouvent aussi dans le dossier input. Les dossiers Macintosh contiennent les codes pour le matériel Apple. Les dossiers Xen contiennent les codes pour l’hyperviseur Xen. Un hyperviseur est un logiciel ou un matériel permettant à un utilisateur de faire fonctionner plusieurs systèmes d’exploitation sur un seul ordinateur en même temps. Ainsi, l’utilisateur peut faire fonctionner Windows, Solaris, FreeBSD ou un autre système avec le système Linux. Il y a de nombreux dossiers par driver, mais ils sont trop nombreux pour tous les nommer ici, cependant, ils le seront dans un prochain article.&lt;/p&gt;

&lt;p&gt;firmware - Le dossier des firmware contient le code qui permet à l’ordinateur de lire et comprendre les signaux des périphériques. Par exemple, une webcam gère son propre matériel, mais l’ordinateur doit comprendre les signaux que la webcam lui envoie. Le système Linux utilisera le firmware vicam pour comprendre la webcam. Autrement, sans firmware, le système Linux ne saurait gérer les information que la webcam lui envoie. En outre, les firmware permettent au système Linux d’envoyer des messages aux périphériques. Linux peut donc dire par, exemple, à la webcam de se recadrer ou de s’éteindre.&lt;/p&gt;

&lt;p&gt;fs - Ceci est le dossier FileSystem. Tout le code nécessaire à la compréhension et l’utilisation des système de fichiers est contenu ici. Dans ce dossier, le code de chaque système de fichier est dans son dossier. Par exemple, le code du système de fichier ext4 est dans le dossier ext4. Dans le dossier fs, les développeurs pour voir que certains fichiers ne sont pas dans des dossiers. Ces fichiers permettent de gérer de façon globale les systèmes de fichiers. Par exemple, mount.h contient le code pour monter un système de fichier. Un système de fichier est une façon structurée de stocker et gérer des fichier et des dossiers dans un système de stockage. Chaque système de fichier possède ses propres avantages et désavantages. Ceci est dû à la programmation du système de fichier. Pour prendre un exemple, le système de fichier NTFS supporte la compression transparente (quand activé, les fichiers sont automatiquement compressés sans que l’utilisateur n’en soit informé). La plupart des systèmes de fichiers n’ont pas cette fonction, ils ne pourraient obtenir cela qu’en le programmant sur les fichiers dans le dossier fs.&lt;/p&gt;

&lt;p&gt;include - Le dossier include contient divers fichiers importants utilisés par le noyau. Le nom du dossier vient de la commande en C “include” utilisée pour importer un fichier important en C dans la compilation.&lt;/p&gt;

&lt;p&gt;init - Le dossier init possède les codes pour le démarrage du noyau (INITialisation). Le fichier principal en .c est le cœur du noyau. C’est le fichier de code source principal connecté avec tous les autres fichiers.&lt;/p&gt;

&lt;p&gt;ipc - IPC signifie Inter-Process Communication (communication à l’intérieur du processus). Ce dossier contient le code pour les communications entre le noyau et les processus. Le noyau contrôle le matériel et les programmes ne peuvent que demander au noyau d’effectuer un tâche. Mettons qu’un utilisateur a un programme permettant d’ouvrir le lecteur DVD. Le programme n’ouvre pas le lecteur lui-même. En revanche, il informe le noyau que le lecteur doit être ouvert. Ensuite, le noyau ouvre le lecteur en envoyant un signal au matériel. Ce code s’occupe aussi des signaux de mort. Par exemple, lorsqu’un système administrateur ouvre un gestionnaire de processus pour fermer un programme qui a vérrouillé le signal pour le fermer est appelé un signal de mort. Le noyau reçoit le signal et (en fonction du type de signal) va demander au programme de s’arrêter ou va simplement enlever le processus de la mémoire et du CPU.&lt;/p&gt;

&lt;p&gt;kernel - Le code dans ce dossier contrôle de noyau lui-même. Par exemple, si un débogueur a besoin de tracer un problème, le noyau peut utiliser le code provenant des fichiers sources de ce dossier pour informer les débogueur de toutes les actions du noyau. Il y aussi du code pour la gestion du temps. Dans le dossier kernel se trouve un autre dossier nommé “power”. Du code dans ce dossier donne la possibilité à l’ordinateur de redémarrer, s’arrêter, et se mettre en veille.&lt;/p&gt;

&lt;p&gt;lib - Le dossier library (librairie) contient le code pour les librairies du noyau, qui est un regroupement de fichiers dont le noyau aura besoin d’utiliser.&lt;/p&gt;

&lt;p&gt;mm - Le dossier Memory Management (gestion de la mémoire) contient le code source pour gérer la mémoire. La mémoire n’est pas aléatoirement placé dans la RAM. Au lieu de cela, le noyau place les données soigneusement dans la RAM. Le noyau ne ré-écrit jamais de morceau de mémoire déjà utilisé ou qui contient des données importantes.&lt;/p&gt;

&lt;p&gt;net - Le dossier réseau contient le code pour les protocoles réseaux. Ceci inclut du code pour IPv6 et Appletalk mais aussi le protocole Ethernet, wifi, bluethoot, etc… Aussi, le code pour gérer les pont réseaux et la résolution des nom DNS est dans ce dossier.&lt;/p&gt;

&lt;p&gt;samples - Ce dossier contient des modèles de projets de modules en cours de développement. Mettons que l’on a besoin d’un nouveau module avec une caractéristique particulière, mais qu’aucun programmateur n’a annoncé vouloir travailler dessus. Et bien, ce genre de module va dans ce dossier. Cela permet aux nouveaux développeurs de noyau de piocher dedans un module qu’il voudrait développer.&lt;/p&gt;

&lt;p&gt;scripts - Ce dossier contient les scripts nécessaires pour compiler le noyau. Il est plus raisonnable de ne rien changer dans ce dossier. Sinon il se pourrait que vous ne puissiez plus configurer ou construire le noyau.&lt;/p&gt;

&lt;p&gt;security - Ce dossier contient le code pour les sécurité du noyau. Il est important de protéger le noyau des virus et des hackers(pirates?). Sinon le système Linux pourrait être endommagé. La sécurité du noyau sera le sujet d’un prochain article.&lt;/p&gt;

&lt;p&gt;son - Ce répertoire contient le code des drivers son pour les carte audio.&lt;/p&gt;

&lt;p&gt;tools - Ce répertoire contient des outils pour interagir avec le noyau&lt;/p&gt;

&lt;p&gt;usr - Vous souvenez-vous que le fichier vmlinuz et d’autres fichiers similaires avaient été mentionnés dans l’article précédent ? Le code dans ces dossiers créé les fichiers après la compilation du noyau.&lt;/p&gt;

&lt;p&gt;virt - Ce dossier contient les codes de virtualisation permettant aux utilisateurs de faire fonctionner plus d’un système. Il est différent de Xen (voir ci-dessus). Avec la virtualisation, le système d’exploitation “invité” agit comme n’importe quelle autre application dans le système d’exploitation Linux (système hôte). Avec un hyperviseur comme Xen, les deux systèmes d’exploitations gèrent le matériel ensemble et en même temps. Dans une virtualisation, le système fonctionne par-dessus du noyau Linux tandis qu’avec un hyperviseur, il n’y a pas de système “invité” et aucun des systèmes ne dépend du ou des autres.&lt;/p&gt;

&lt;p&gt;Note: Ne jamais déplacer un fichier dans le dossier du noyau sauf si vous êtes certain de savoir ce que vous faites. Sinon la compilation pourrait se terminer par une erreur du genre “missing file”.&lt;/p&gt;

&lt;p&gt;La structure du dossier du noyau Linux est toujours restée relativement constante. Les développeurs du noyau ont fait quelque modifications, mais dans l’ensemble, cette organisation est la même dans toutes les versions du noyau. Le dossier des drivers garde aussi la même disposition. Nous parlerons des drivers du noyau prochainement.&lt;/p&gt;

&lt;p&gt;Voilà voilà. Le prochain article devrait être fait soit d’ici la fin de la semaine soit la semaine prochaine.&lt;/p&gt;

&lt;p&gt;Et je remercie énormément Yunero Kisapsodos de m’avoir grandement aidé dans la rédaction/traduction de cet article!&lt;/p&gt;
</description>
				<pubDate>Mon, 22 Jul 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/07/22/Linux-Kernel-Code-Source.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/07/22/Linux-Kernel-Code-Source.html</guid>
			</item>
		
			<item>
				<title>Parcellite: la version 1.1.5 est sortie</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Alors tout d’abord brève présentation de ce logiciel qu’est Parcellite. C’est ou outils qui sert de presse-papier (pour le copier-coller). Il permet d’enregistrer facilement une quinzaine d’éléments copiés, allant de la simple phrase jusqu’au fichier en passant par les blocs de textes. Au lancement il affiche une petite icône dans la barre des tâches qui permet de gérer et choisir quel élément on veut coller. Et récemment est sortie la version 1.1.5 de ce logiciel, qui contient surtout des corrections de bugs, comme par exemple:
&lt;!--break--&gt;
* Mise à jour de la traduction allemande
* Correction du bug 79 qui était provoqué lors de l’inversion de la liste d’éléments
* Correction du bug 73, le Ctrl + c/v ne fonctionnait pas avec Blender.&lt;/p&gt;

&lt;p&gt;Et plusieurs dizaines d’autres! Vous pouvez voir la liste complète des modifications sur le &lt;a href=&quot;http://parcellite.sourceforge.net/&quot;&gt;site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Voilà c’était tout pour aujourd’hui! (le prochain article sur le noyau linux arrive bientôt, c’est juste que j’ai fait parti des “chanceux” de framapad à avoir perdu des données à cause des récents problèmes sur le site.^^”)&lt;/p&gt;
</description>
				<pubDate>Sun, 21 Jul 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/07/21/Parcellite-la-version-1.1.5-est-sortie.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/07/21/Parcellite-la-version-1.1.5-est-sortie.html</guid>
			</item>
		
			<item>
				<title>Linux Kernel: Introduction</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Aujourd’hui on va parler du noyau linux (au cas où vous n’auriez pas lu le titre… :p), et cet article est le premier d’une suite sur le sujet, qui proviennent du site linux.org que je me permet de vous retranscrire en français ici.
&lt;!--break--&gt;
En 1991, un étudiant Finlandais du nom de Linus Benedict Torvalds crée  le noyau du système d’exploitation tel qu’on le connaît aujourd’hui. En  septembre 1991 sort la version 0.01 de Linux, et en Février 1992, il  passe sous licence GPL.  La licence  GNU General Public License (GPL) autorise les utilisateurs à utiliser, récupérer, modifier et  distribuer le code source légalement. Ceci a permit au noyau de devenir très populaire car tout le monde pouvait le télécharger gratuitement. Maintenant que tout le monde peut construire son propre noyau, il peut être utile de savoir comment obtenir, éditer, configurer, compiler et installer un noyau Linux.&lt;/p&gt;

&lt;p&gt;Le noyau  est le cœur du système d’exploitation. Le système d’exploitation regroupe tous les programmes qui s’occupent du matériel et autorise l’utilisateur à lancer des applications sur un ordinateur. Le noyau contrôle le matériel et les applications. Les applications ne communiquent pas directement avec le matériel, au lieu de cela ils vont demander au noyau. Pour faire simple, le logiciel s’exécute à partir du noyau et celui-ci agit sur le matériel. Sans noyau, un ordinateur n’est qu’un objet sans utilité.&lt;/p&gt;

&lt;p&gt;Il y a de nombreuses raisons pour qu’un utilisateur veuille faire son propre noyau. De nombreux utilisateurs veulent faire un noyau qui ne contient que le code nécessaire pour faire tourner leur système. Par exemple, un noyau contient des drivers pour des outils FireWire, mais mon ordinateur n’a pas ces ports. Quand le système se “boot”, du temps et de la RAM sont gaspillés sur des drivers pour les outils que mon système n’a pas d’installé. Si je voulais modifier mon noyau, je pourrais faire mon propre noyau qui n’aurai pas les drivers FireWire. Il y a une autre raison : un outil pourrait appartenir à un utilisateur avec un hardware particulier, mais le noyau qui vint avec la dernière version d’Ubuntu ne contient pas le driver nécessaire. Cet utilisateur pourrait donc télécharger le dernier noyau (qui a quelques versions d’avance sur les noyaux Linux Ubuntu) et faire leur propre noyau qui a le driver nécessaire. Cependant, ces deux raisons sont les plus communes pour les utilisateurs qui veulent faire leur propre noyau.&lt;/p&gt;

&lt;p&gt;Avant de télécharger un noyau, nous devrions discuter de quelques faits et définitions importantes. Le noyau Linux est un noyau monolithique. Cela veut dire que le système d’opérant entier est sur la RAM réservée comme espace pour le noyau. Pour être plus clair, le noyau est mis sur la RAM. L’espace utilisé par le noyau est révervé pour le noyau. Le noyau seul peut utiliser cet espace réservé. Le noyau s’approprie cet espace sur la RAM jusqu’à ce que le système soit éteint. En contraste avec l’espace du noyau, il y a l’espace de l’utilisateur. L’espace d’utilisateur est l’espace sur la RAM auquel appartient l’utilisateur des programmes. Des applications comme les navigateurs web, les jeux vidéos, les processeurs word, media players, fond d’écran, thèmes, etc, sont tous sur l’espace d’utilisateur sur la RAM. Quand une application est fermée, n’importe quel programme peut utiliser l’espace nouvellement disponible. Avec l’espace du noyau, une fois que l’espace sur la RAM est prise, rien d’autre ne peut avoir cet espace.&lt;/p&gt;

&lt;p&gt;Le noyau  Linux est aussi un noyau multi-tâches. Cela signifie que le noyau met en pause certaines taches afin de s’assurer que chaque application puisse utiliser un peu de charge CPU pour sa propre utilisation. Par exemple, si une application est exécutée mais attend de recevoir des données, le noyau mettra cette application en attente et autorisera un autre programme à utiliser les nouvelles ressources CPU disponible jusqu’à ce que les données arrivent. Sinon, le système gaspillerait des ressources pour les tâches qui attendent des données ou qu’un autre programme s’exécute. Le noyau va forcer le programme à attendre pour utiliser du CPU ou arrêtera d’utiliser de la charge CPU. Les applications de peuvent pas sortir de leur pauses ou utiliser des ressources CPU sans l’accord du noyau.&lt;/p&gt;

&lt;p&gt;Le noyau  Linux fait apparaître les périphériques comme des fichiers dans le dossier /dev . Les ports USB, par exemple, sont situés dans /dev/bus/usb. Les partitions du disque-dur peuvent être trouvées dans /dev/disk/by-label. C’est parce que Linux agit ainsi que beaucoup de gens disent que “Sous Linux, tout est fichier”. Si un utilisateur voulait accéder aux données de sa carte mémoire par exemple, il ne pourraient pas y avoir accès directement par le biais de ces fichiers.&lt;/p&gt;

&lt;p&gt;Le noyau Linux est portable. La portablité est une des principales caractéristique qui rends Linux si populaire. La portabilité est la capacité du noyau à fonctionner sur une grande variété de processeurs et de systèmes. Cela inclut donc de nombre supports de processeurs tels que Alpha, AMD, ARM, C6X, Intel, x86, Microblaze, MIPS, PowerPC, SPARC, UltraSPARC, etc… Ceci n’est pas une liste exhaustive.&lt;/p&gt;

&lt;p&gt;Dans le dossier de démarrage (/boot), les utilisateurs peuvent voir un fichier “vmlinux” ou “vmlinuz”. Ces deux fichier sont des noyaux Linux compilés. Celui que finit par “z” est compressé. Le “vm” signifie mémoire virtuelle. Sur les systèmes avec un/des processeurs SPARC, les utilisateurs peuvent voir un fichier zImage à la place. Un petit nombre peuvent trouver aussi un fichier bzImage; c’est aussi un noyau Linux compressé. Cela ne change rien de savoir de quel type est celui de l’utilisateur, ce sont tous des fichiers exécutables qui ne devraient pas être modifiés tant que l’utilisateur ne sait pas ce qu’il fait. Sinon leur système pourraient ne pour être démarré, et le système de fonctionnerai plus.&lt;/p&gt;

&lt;p&gt;Le code source est le codage du programme. Avec le code source, les programmeurs peuvent faire des changements au noyau et  voir comment il fonctionne.&lt;/p&gt;

&lt;p&gt;Maintenant que nous comprenons un peu plus le fonctionnement du noyau, il est temps de télécharger le code source. Allez sur &lt;a href=&quot;https://www.kernel.org/&quot;&gt;kernel.org&lt;/a&gt; et cliquez sur le gros bouton “download”. Une fois que le téléchargement est fini, décompressez le fichier téléchargé.&lt;/p&gt;

&lt;p&gt;Voilà, à une prochaine fois pour de nouvelle infos! ;) Vous pouvez trouver l’article original &lt;a href=&quot;http://www.linux.org/threads/%EF%BB%BFthe-linux-kernel-introduction.4203/&quot;&gt;ICI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Un grand merci à &lt;a href=&quot;http://riku-paradise-finder.deviantart.com/&quot;&gt;Octopussy&lt;/a&gt; qui a fait la moitié du boulot pour cette traduction! (en plus de m’avoir encore corrigée un article ;) )&lt;/p&gt;
</description>
				<pubDate>Sat, 13 Jul 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/07/13/Linux-Kernel-Introduction.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/07/13/Linux-Kernel-Introduction.html</guid>
			</item>
		
			<item>
				<title>Faire de la traduction avec gettext : Exemple avec Sunflower</title>
				
					<description>&lt;p&gt;Salut tout le monde!&lt;/p&gt;

&lt;p&gt;J’ai plusieurs fois eu affaire à des logiciels que je trouvais vraiment sympa, mais qui n’étaient pas disponibles en français, ce qui m’empêchait de bien l’utiliser, ou de le montrer à d’autres personnes qui n’y connaissent rien à l’anglais.  Ne connaissant pas encore bien la programmation, j’ai eu l’idée de faire un peu de traduction pour contribuer un peu aux logiciels que j’utilise. Je me suis donc tourné vers Sunflower, dont le site dispose d’un lien expliquant comment lui préparer une traduction. En fait on utilise un logiciel libre qui apparemment est très utilisé dans le monde de la traduction de logiciels.
&lt;!--break--&gt;
Le principe de base de ce logiciel n’est pas très compliqué à comprendre. Il va regarder le code source du logiciel et noter toutes les chaînes de caractères que l’utilisateur final pourrait voir d’une façon ou d’une autre, et les stocker dans un fichier avec l’extension .pot qui servira de base pour toutes les traductions que l’on peut faire du logiciel. Lorsque l’on décide de faire une traduction, on crée un dossier dans le répertoire où se trouve le fichier .pot avec comme nom l’indicatif de la langue (français -&amp;gt; fr, espagnol -&amp;gt; es, etc…). Dedans on crée un fichier avec l’extension .po qui sera une copie de l’autre fichier.&lt;/p&gt;

&lt;p&gt;Sunflower dispose déjà de son fichier sunflower.pot situé dans  /usr/share/sunflower/translations/  (pour ma distribution Arch Linux) ainsi que quelques dossiers de traduction. J’ai donc crée un répertoire fr/LC_MESSAGES/   avec dedans un fichier sunflower.po qui est l’exacte copie du sunflower.pot.  Lorsque l’on ouvre le fichier on tombe sur quelque chose comme ça :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/home/pellet_k/Perso/Site web/_site/images/sunflower01.png&quot; alt=&quot;Sunflower&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Au début on a quelques commentaires de descriptions, puis quelques lignes de texte qui rajoutent de la description (où vous pouvez , notamment, indiquer la langue dans laquelle vous souhaitez traduire et quelques informations comme votre nom et votre mail qui pourront être utile, par exemple pour l’auteur du logiciel pour vous contacter).  Ensuite et bien on a l’utile: les blocs de traduction. Il sont composés de trois éléments.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un commentaire qui indique le fichier et la ligne dans laquelle se trouve la chaîne de caractère&lt;/li&gt;
  &lt;li&gt;Le msgid suivit d’une ligne en Anglais ( enfin qui est dans la langue source du logiciel, c’est quand même généralement l’Anglais!)&lt;/li&gt;
  &lt;li&gt;le msgstr qui est simplement composé de deux guillemets. C’est entre ces guillemets que vous mettrez votre traduction de la ligne du dessus.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(Pour y avoir fait, il y a environ 500 termes à traduire pour Sunflower, mais avec un peu de boulot, d’aide et de google traduction on en vient à bout en quelques jours ^^). Quand vous pensez avoir fini ou fait la majeure partie de la traduction, il va falloir transformer ceci en un fichier binaire que Sunflower utilisera pour charger les traductions. Pour ce faire on utilise la commande suivante :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msgfmt sunflower.po
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Et voilà un fichier .mo qui est crée. Si votre système est configuré pour le français, Sunflower devrait par la suite charger le fichier généré ainsi (Note: Cela nécessite que le fichier crée soit appelé sunflower.mo  mais il est de  base nommé messages.mo, il suffit de le renommer pour que tout rentre en ordre). Et vous voilà avec un beau logiciel en français! Gettext est capable de bien des choses, j’ai mis un lien vers la documentation un peu en dessous.  Sur ce bonne journée à tous et bonne traduction!&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Sources:&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/sunflower-fm/&quot;&gt;Sunflower&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/software/gettext/&quot;&gt;Documentation Gettext&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Sun, 23 Jun 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/06/23/faire-de-la-traduction-avec-gettext-exemple-avec-sunflower.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/06/23/faire-de-la-traduction-avec-gettext-exemple-avec-sunflower.html</guid>
			</item>
		
			<item>
				<title>Sunflower version 0.1a-56</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Dans un article précédent je vous avais parlé de Sunflower, un gestionnaire de fichiers qui avait l’air prometteur. Aujourd’hui est sortie la version 0.1a-56 qui apporte quelques nouvelles fonctionnalités mais surtout des corrections de bug parmi lesquelles:
&lt;!--break--&gt;
* Possibilité de faire des liens symboliques et des liens en dur
* Séparation de Support.LINK en deux options HARD_LINK et SYMBOLIC_LINK.
* Mise à jour de la traduction en Czech
* Correction d’une erreur avec la méthode get_selection_list&lt;/p&gt;

&lt;p&gt;Et quelques autres encore. Vous pouvez voir tout cela sur la page du projet à cette adresse:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mintic.blog4ever.com/code.google.com/p/sunflower-fm/downloads/detail?name=Sunflower-0.1a-56.tgz&quot;&gt;Sunflower 0.1a-76&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Thu, 13 Jun 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/06/13/sunflower-version-0.1a-56.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/06/13/sunflower-version-0.1a-56.html</guid>
			</item>
		
			<item>
				<title>Pour Les Nostalgiques Du Graphique Installez Sous Arch Avec Octopi</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Cela commence à faire quelque mois que je tourne sous Archlinux, et mis à part un plantage Xorg qui m’a forcé à faire une petite ré-installation, je me plais vraiment avec cette distribution! Notamment grâce au dépôt communautaire AUR qui, jusqu’à maintenant, m’a permis d’installation tous les soft dont j’avais envie, et que je ne trouvais pas dans les gestionnaire de paquet des autres distributions.
&lt;!--break--&gt;
Aujourd’hui je vais vous parler d’un logiciel fournissant un frontend comme on dit à l’outil de gestion de paquet Pacman (ou Yaourt) : Octopi. C’est un projet d’un monsieur Alexandre Albuquerque Arnt (auprès duquel je m’excuse déjà si j’ai écorché son nom ^^”), il est sous licence GPL2 et est écrit en C++ avec Qt4. Mr Arnt est aussi la créateur de  &lt;a href=&quot;http://qtgzmanager.wordpress.com/&quot;&gt;QTgzManager&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pas de temps à perdre, voyons comment l’installer avec ses dépendances:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacman -S octopi-git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note : Il est préférable d’installer aussi un frontend pour sudo, tel que gksu, kdsu, etc… car Pacman/Yaourt nécessite les droit d’administrateur pour agir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/octopi01.png.png&quot; alt=&quot;octopi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Comme vous pouvez le voir dans la capture ci-dessus, il se présente comme un gestionnaire de paquet classique:  (Dé-)Installation, mise à jour système, etc…. Mais il présente aussi certaines fonctionnalités sympas, comme l’affichage des news sur Archlinux dans “Actualités, ou l’onglet “Utilisation” qui donne tout ce qu’il faut pour savoir utiliser correctement ce logiciel, où l’on peut voir notamment qu’un bon nombre de raccourcis en facilitent l’utilisation.&lt;/p&gt;
</description>
				<pubDate>Sun, 02 Jun 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/06/02/pour-les-nostalgiques-du-graphique-installez-sous-arch-avec-octopi.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/06/02/pour-les-nostalgiques-du-graphique-installez-sous-arch-avec-octopi.html</guid>
			</item>
		
			<item>
				<title>Réinstallation forcée --&gt; Point sur Arch Linux</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Bon comme l’indique le titre de l’article, j’ai été obligé de faire un ré-installation de mon pc. En effet la moitié de mes applications ne voulaient plus s’ouvrir et j’avais d’autres problèmes important, et j’ai jamais réussi à comprendre pourquoi ça faisait ça tout d’un coup. Alors après quelques jours de combat j’ai finalement abandonné et ai télechargé une image iso d’archlinux. Malheureusement je ne pourrai donc pas continuer l’article pour détailler l’installation, mais si vous êtes intéressés je vous conseille vivement le wiki d’archlinux anglais et français.
&lt;!--break--&gt;
Bon, tout le monde ne connait pas forcément Arch Linux, j’vais donc faire une petite intro pour vous présenter le contexte. Arch est une distribution sortie en 2002, qui se veut basée sur la simplicité, au sens sans “option” rajoutée. Lorsque l’on se procure une Arch linux, on dispose du strict nécessaire pour avoir un système, le reste c’est à l’utilisateur de choisir ce qu’il veut avoir. Et bien sur je ne peux pas parler du fonctionnement d’Arch Linux sans mentionner le principe &lt;a href=&quot;http://wiki.archlinux.fr/kiss&quot;&gt;KISS&lt;/a&gt;! Pour faire court, il s’agit de laisser un éventail d’action maximum pour l’utilisateur afin qui puisse prendre sons système en main dans sa totalité. On trouvera rarement des GUI aux outils fourni par Archlinux car généralement un programme en interface graphique offre moins de contrôle sur le programme, alors qu’en ligne de commande on peut savoir précisément ce que l’on fait.&lt;/p&gt;

&lt;p&gt;Cela signifie que l’on peut choisir la quasi-totalité des logiciels qui vont composer notre système. Du gestionnaire de réseaux au dock du bureau en passant par votre lecteur vidéo. Les avantages de cette procédure sont juste énormes à mon sens. L’utilisation de la RAM et de la mémoire CPU seront moins importants puisque vous n’aurez pas tous les logiciels lancés au démarrage sur les autres distributions. Et pour les disques durs qui ne font pas quinze millions de terra-octets vous aurez plus de place pour vos données après l’installation ^^ ( moi personellement avec mes 20Go ça m’aide plutôt bien…)&lt;/p&gt;

&lt;p&gt;Bon en tout cas, j’ai fini de l’installer il y a de cela plusieurs semaines déjà et j’en suis plus que content. Les principaux logiciels que j’utilisais avant sous Linux Mint fonctionnent plus la plus grande majorité, comme sunflower, vlc, xchat, gimp etc… Pareil pour ce qui est de la composition de mon bureau Openbox avec conky, nitrogen,tint2 et wbar principalement. Le démarrage de ma session donne l’impression d’être plus rapide mais pas de beaucoup. Mais surtout ce que j’apprécie le plus avec cette distribution, c’est la gestion des paquêts qui est grandement améliorée avec l’&lt;a href=&quot;https://wiki.archlinux.org/index.php/AUR_User_Guidelines&quot;&gt;AUR&lt;/a&gt;, qui est en gros un dépôt ou chaque utilisateur peut venir rajouter son paquet, le tout géré par le système de PKGBUILD sur lequel je ne m’attarderais pas car je ne suis pas encore assez connaisseur là-dedans…&lt;/p&gt;

&lt;p&gt;Néanmoins il me reste encore pas mal de choses à corriger, même si je pense que certaines sont dues à l’âge avancé de mon ordinateur.  Je mets ici la liste des choses que j’ai à corriger; plus pour servir de pense-bête qu’autre chose:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Comportement D-Bus étrange&lt;/li&gt;
  &lt;li&gt;Gestion du wifi non-fonctionnelle&lt;/li&gt;
  &lt;li&gt;Slim  ne veut pas se lancer parfois quand je me déconnecte simplement de ma session&lt;/li&gt;
  &lt;li&gt;Gestion du son avec Alsa vraiment bizarre.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En tout cas je vous conseille vivement cette distribution si vous n’avez pas froid aux yeux en voyant que vous devez commencer par du mode texte pendant un bon moment et lire un peu de documentation pour comprendre le fonctionnement. Pour vous aider je vous renvoie aux liens que j’ai donné dans mon ancien article Test Archlinux en Virtualbox (1/2)&lt;/p&gt;

&lt;p&gt;Sur ce je vous souhaite une bonne journée et à bientôt! ;)&lt;/p&gt;
</description>
				<pubDate>Fri, 26 Apr 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/04/26/reinstallation-forcee-point-sur-archlinux.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/04/26/reinstallation-forcee-point-sur-archlinux.html</guid>
			</item>
		
			<item>
				<title>Jouer tout en apprenant Python</title>
				
					<description>&lt;p&gt;Salut à toutes et à tous,&lt;/p&gt;

&lt;p&gt;Aujourd’hui je tiens à vous présenter un site internet fort sympathique, répondant au nom de Chekio. Ce site est destiné à toute personnes voulant apprendre/s’améliorer avec Python, mais un peu sous forme de jeu flash en ligne. Vous commencez sur une petite ile et pour vous balader sur d’autres iles il vous faudra avoir accompli un certain nombre de “missions”, qui sont en fait des exercices à résoudre sous forme de code Python.
&lt;!--break--&gt;
&lt;img src=&quot;/images/checkio01.png&quot; alt=&quot;checkio&quot; /&gt; 
Toutefois le site est entièrement en Anglais (mais bon si vous voulez faire de la programmation ce sera un passage obligatoire par l’anglais ;) ) et en guise de “captcha” principal à l’inscription, on vous demande de résoudre un petit exercice tout simple. J’y ai quand même passé un quart d’heure mais bon ^^&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.checkio.org/&quot;&gt;Chekio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si vous avez des problèmes pour choisir un itinéraire, réousdre un exercice ou quoi que ce soit,  surtout ne me demandez pas j’en suis toujours à essayer de résoudre le premier!&lt;/p&gt;

&lt;p&gt;Bonne fin de semaine et amusez-vous bien ;)&lt;/p&gt;
</description>
				<pubDate>Thu, 11 Apr 2013 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2013/04/11/jouer-tout-en-apprenant-python.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/04/11/jouer-tout-en-apprenant-python.html</guid>
			</item>
		
			<item>
				<title>Faire son propre écran de login MDM en HTML</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.linuxmint.com/?p=2327&quot;&gt;The Linux Mint Blog&lt;/a&gt; à publié récemment un article concernant MDM expliquant qu’il gère maintenant les thèmes HTML5.  Si vous n’aimez pas l’Anglais, voici comment avoir la dernière version de mdm:
&lt;!--break--&gt;
- Télécharger et installer l’archive ici : &lt;a href=&quot;http://build.linuxmint.com/automate/www/instances/linuxmint/ubuntu/pool/main/m/mdm/&quot;&gt;archive&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Enlever les “ajustements de Mint” (je met entre guillemet car je ne sais pas vraiment à quoi cela correspond) :&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  rm -f /etc/linuxmint/adjustments/15-mdm.overwrite 
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Redémarrer son pc&lt;/li&gt;
  &lt;li&gt;Ensuite vous pouvez configurer MDM par deux façons:&lt;/li&gt;
  &lt;li&gt;Par le menu du panel   :  Menu-&amp;gt;Administration-&amp;gt;Ecran de démarrage (Login Window)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ou en ligne de commande avec:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  sudo mdmsetup 
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Dans l’onglet “Locale”, mettez “Style” sur HTML&lt;/li&gt;
  &lt;li&gt;Faites une copie du répertoire /usr/share/mdm/html-themes/mdm dans votre dossier personnel, ce sera ce dossier là avec lequel vous ferez mumuse ;)&lt;/li&gt;
  &lt;li&gt;Quand vous avez fini vous pouvez nommer votre thème comme bon vous semble puis le copier dans le répertoire /usr/share/mdm/html-themes/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vous pouvez avoir un aperçu de votre résultat en entrant la commande&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mdm-theme-emulator 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Et en ouvrant le fichier &lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Et voilà vous avez de quoi vous occuper un bon moment! Moi je ne peux pas encore faire  grand chose vu qu’il faut connaitre l’html/css et le javascript pour faire de joli trucs, du coup je me suis contenté de celui proposé de base.&lt;/p&gt;

&lt;p&gt;Bonne journée à tous! _o/&lt;/p&gt;
</description>
				<pubDate>Fri, 01 Mar 2013 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/2013/03/01/faire-son-propre-ecran-de-login-mdm-in-html.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/03/01/faire-son-propre-ecran-de-login-mdm-in-html.html</guid>
			</item>
		
			<item>
				<title>Encore du jeu à l&#39;ancienne - PS1 &amp; Chromium-bsu</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Aujourd’hui je vais aborder deux choses dont voici tout de suite la première:&lt;/p&gt;

&lt;p&gt;Jusqu’à récemment sur mon ordinateur se trouvait l’émulateur Epsxe, qui me permettait d’émuler une console de Playstation 1 et d’y faire tourner tout les jeux de cette console qui à fait mon enfance. Néanmoins en voulant le montrer à une amie il ne voulait plus marcher. En fait c’est comme si le plugin qui permet de gérer les commandes n’existait plus.
&lt;!--break--&gt;
En cherchant de l’aide sur le net je suis tombé sur cette page de doc Ubuntu. Ce Pcsx-reloaded serait un fork de Pcsx en version libre et dont le développement continue contrairement à Pcsx (epsxe à l’air de continuer à être développer mais pas pour Linux qui en est toujours à une version 1.6 alros que la 1.8 est sortie récemment pour Windows).&lt;/p&gt;

&lt;p&gt;Je l’ai donc testé, pour le téléchargement et l’installation rien de plus simple il suffit d’installer pcsxr qui est disponible dans les dépôts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pcsxr.png&quot; alt=&quot;pcsxr&quot; /&gt;&lt;/p&gt;

&lt;p&gt;L’interface a l’air d’être exactement la même que pour Pcsx, mais plusieurs plugins libre sont déjà présent. Vous pouvez rajouter des plugins, notamment si vous aviez déjà epsxe ou pcsx avant vous pouvez copier les fichiers de plugins dans le répertoire plugin. D’ailleurs pour information, à l’installation un répertoire  .pcsx/ a dû être crée, c’est là-dedans que se trouvent tous les fichiers de configuration et de plugins ainsi que les sauvegardes et les cartes-mémoire.&lt;/p&gt;

&lt;p&gt;Mais pour ce qui est de configurer cet engin, je ne pourrais pas vous aider. En effet ce type de logiciel est assez spécial, cela ne prend pas seulement en compte les capacités de votre machine pour tourner mais tout un tas d’autres paramètres, du coup pour trouver la bonne configuration il faut essayer tous les boutons jusqu’à ce qu’il y ai quelque chose de convenable…&lt;/p&gt;

&lt;p&gt;Pour trouver un bios et des jeux vous pouvez aller sur mondemul.net. Néanmoins je vous conseille d’y aller avec au moins adblock plus pour les pubs…&lt;/p&gt;

&lt;p&gt;Voilà maintenant passons au deuxième sujet qui sera un peu plus court. Il s’agit du jeu Chromium-bsu, dont j’ai entendu parler auprès du poadcast Parole de Tux (que je conseille d’ailleurs grandement ;) ).&lt;/p&gt;

&lt;p&gt;C’est un jeu de type Shoot-them Up, vous avez un vaisseau que vous bougez avec les flèches et le but est de casser les autres vaisseaux jusqu’à ce que vous finissiez le jeu ou que mort s’en suive (à la faon Raptor sur Dos ^^ ). Je ne sais pas vraiment quoi dire dessus, je ne l’ai essayé qu’une petite demi-heure, et je le trouve particulièrement difficile, et au début je ne comprenais pas vraiment pourquoi je perdais mes vies, c’est qu’en fait il ne faut laisser passer aucun vaisseaux! Vous avez aussi d’après le poadcast une touche qui vous permet de vous suicider et je n’ai pas écouté de ce fait je ne sais toujours pas quelle touche c’est… Enfin bref, un bon petit jeu sympa ^^&lt;/p&gt;

&lt;p&gt;Voilà sur ce amusez-vous bien avec vos nouveaux jouet et bonne journée à tous! _o/&lt;/p&gt;
</description>
				<pubDate>Fri, 01 Mar 2013 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/2013/03/01/encore-du-jeu-a-l-ancienne-ps1-&amp;-chromium-bsu.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/03/01/encore-du-jeu-a-l-ancienne-ps1-&amp;-chromium-bsu.html</guid>
			</item>
		
			<item>
				<title>Un nouveau guide fait son arrivée chez les manchots verts</title>
				
					<description>&lt;p&gt;Salut à tous!&lt;/p&gt;

&lt;p&gt;Aujourd’hui je suis particulièrement content. Pourquoi? Parce qu’il existe dorénavant un nouveau petit guide d’introduction en français pour Linux, et plus particulièrement adapté à Linux Mint.&lt;/p&gt;

&lt;p&gt;Le guide est disponible à cette adresse :
&lt;a href=&quot;http://ubuntuone.com/11lU9gJUgcCNsx1yednwlT&quot;&gt;GUIDE&lt;/a&gt;
&lt;!--break--&gt;
Pour moi ce guide est juste superbe. Il est relativement court, très agréable à lire sur un ordinateur (déjà il est en format paysage c’est plus pratique pour les écrans…), et il introduit aux principes de Linux, des paquets, des environnement de bureau et de tout un tas d’autres choses de façon rapide et concise.&lt;/p&gt;

&lt;p&gt;Enfin voilà, je recommande vivement ce guide à tout néophyte de Linux, et si vous voulez faire venir quelqu’un sur notre système préféré, vous pourrez lui faire lire sans problèmes.&lt;/p&gt;

&lt;p&gt;Pour finir, je pense que l’on peut faire un grand bravo et un grand remerciement à killinjoe du forum LinuxMint - Fr pour avoir réalisé ce guide. En suivant le lien que je vous ais donné précédemment, vous pourrez télécharger le pdf avec le petit bouton en haut à droite correspondant.&lt;/p&gt;

&lt;p&gt;Sur ce, bonne lecture et bonne fin de soirée! _o/&lt;/p&gt;
</description>
				<pubDate>Wed, 20 Feb 2013 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/2013/02/20/un-nouveau-guide-fait-son-arrivee-chez-les-manchots-verts.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/02/20/un-nouveau-guide-fait-son-arrivee-chez-les-manchots-verts.html</guid>
			</item>
		
			<item>
				<title>GridWars: Combien de temps tiendrez vous?</title>
				
					<description>&lt;p&gt;Salut à tous! J’espère que vous allez bien. Moi en tout cas je pète la forme!&lt;/p&gt;

&lt;p&gt;Allez trêves de bavardages. Aujourd’hui je vais vous présenter un jeu que j’ai découvert en farfouillant sur le site de jeuxlinux.fr. Ce jeu c’est : Gridwars!&lt;/p&gt;

&lt;p&gt;Vous vous souvenez de mon article sur M.A.R.S ? Prenez un petit peu le même style psychédélique du genre dans un jeu de tir brut où l’objectif est de survivre le plus longtemps possible. En guise de décors on se retrouve avec une grille simple. L’intérêt de cette grille est qu’elle se déforme selon les mouvement que vous faites et vos tirs! Voilà ce que ça donne en situation:
&lt;!--break--&gt;
&lt;img src=&quot;/images/gridwars01.png&quot; alt=&quot;gridwars01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Oui ça part un peu dans tout les sens je l’admets. Mais c’est ce qui fait tout son charme ;)&lt;/p&gt;

&lt;p&gt;Pour l’installer il faut le télécharger à l’adresse suivante:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;gridwars.marune.de&quot;&gt;gridwars.marune.de&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ensuite il vous suffit de choisir la version qui convient selon votre OS, car il est disponible aussi sous Windows et Mac. Vous vous retrouvez ensuite avec une archive zip qu’il faut extraire. Il n’y a pas d’installation. Le jeu se lance directement par le biais de l’exécutable!&lt;/p&gt;

&lt;p&gt;Petite information: Si comme moi vous n’avez pas de son, il faut lancer cet exécutable avec la commande suivante:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aoss ./gridwars
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Après avoir lancé le jeu, vous vous retrouvez devant un écran d’accueil qui vous demande d’appuyer sur la touche “Bomb”. C’est en théorie le clic-droit. Mais avant peut-être devriez-vous configurer un peu le jeu. Libre à vous de configurer tout ça comme bon vous semble mais surtout faites attention, bien qu’il n’en ai pas l’air ce jeu peux vite prendre beaucoup de ressources. Alors ne mettez pas une grille de 5000 par 3000! (oui j’ai essayé, et mon ordi était pas d’accord…)&lt;/p&gt;

&lt;p&gt;Pour jouer, si vous avez gardé les configuration de base, tout ce joue à la souris. Clic gauche pour activer le tir automatique dans la dernière direction du vaisseau, et clic-droit pour lancer une méga-bombe qui casse toute la grille!&lt;/p&gt;

&lt;p&gt;Votre objectif? Survivre le plus longtemps possible. Ma meilleure partie en moyen à durée 13 minutes, et on les voit pas passer je vous assure. Petite astuce: Il y a 3 décors pour ce jeu, le premier est très jolie mais est un peu gourmand, vous pouvez en changer en pleine partie avec la touche F3&lt;/p&gt;

&lt;p&gt;Voilà sur ce je vous laisse faire mumuse, manifestement il n’y a plus l’air d’avoir de support pour ce jeu c’est dommage, donc on peut abandonner l’idée de mises à jour rajoutant du contenu, sauf si quelqu’une reprend la main (peut-être l’un d’entre vous…).&lt;/p&gt;

&lt;p&gt;N’hésitez pas à me donner votre score en commentaire ;)&lt;/p&gt;
</description>
				<pubDate>Sun, 17 Feb 2013 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/2013/02/17/gridwars-combien-de-temps-tiendrez-vous.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/02/17/gridwars-combien-de-temps-tiendrez-vous.html</guid>
			</item>
		
			<item>
				<title>Les vieux jeux sont toujours d&#39;actualité</title>
				
					<description>&lt;p&gt;Salut tout le monde!&lt;/p&gt;

&lt;p&gt;En ce moment je passe mon temps à fouiller le web à la découverte de nouveaux logiciels libre, et en me baladant sur un forum, quelqu’un posait la question: “Est-ce qu’il existe un jeux de casse-brique cool sous Linux? Un peu à la DxBall2
&lt;!--break--&gt;
DxBall2 pour ceux qui ne connaissent pas est un jeu de casse-brique qui commence à avoir une bonne paire d’années. Ce qui fait tout son charme est, à mes souvenirs, le nombre d’objets que l’on peut récupérer en cours de partie, tels que les missiles, les billes explosives, la bonus de raquette etc…&lt;/p&gt;

&lt;p&gt;Alors en cherchant de ce coté-là je suis allé faire un tour sur Framasoft et j’y ai trouvé Lbreakout2. Il est téléchargeable sur ce site –&amp;gt; &lt;a href=&quot;http://lgames.sourceforge.net/index.php?project=LBreakout2&quot;&gt;ICI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pour l’installation, il suffit d’ouvrir un terminal et le fichier texte README dans le dossier du jeu téléchargé, dans lequel toutes les commandes à entrer y sont indiquées.&lt;/p&gt;

&lt;p&gt;Après avoir suivi toutes ces étapes, si tout s’est bien passé, vous pouvez lancer la commande lbreakout2 dans un terminal. Vous voilà donc normalement dans le menu du jeu. On peut voir qu’un mode de jeu en réseau est disponible. Mais en voulant le tester j’ai donné en paramètre l’adresse de base, et il m’a dit que le serveur ne répondait pas. Bon soit, je n’ai pas voulu creuser plus loin.&lt;/p&gt;

&lt;p&gt;Je pense que je vais arrêter mon explication ici, je vous laisse la joie de découvrir toutes les petites merveilles de ce jeu, grâce à son système d’objets qui est contient à ma connaissance plus d’objets que DxBall2 (et qui peuvent d’ailleurs avoir des effets…désarmant!)&lt;/p&gt;

&lt;p&gt;Sur ce bonne partie a vous et amusez-vous bien! ;)&lt;/p&gt;
</description>
				<pubDate>Sun, 20 Jan 2013 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/2013/01/20/les-vieux-jeux-sont-toujours-d-actualite.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/01/20/les-vieux-jeux-sont-toujours-d-actualite.html</guid>
			</item>
		
			<item>
				<title>Test ArchLinux en VirtualBox ( 1/2 )</title>
				
					<description>&lt;p&gt;Récemment je me suis décidé à apprendre à utiliser et à comprendre le fonctionnement de Linux. Du coup j’ai voulu me tourner vers une distribution qui m’offrirait cette possibilité dès son installation. Je me suis rapidement laissé dire que ArchLinux conviendrait à mes besoins. Mais comme mon laptop ne possède pas une capacité de stockage extraordinaire (20 Go…) je l’ai mis sur un disque dur externe sous virtualbox. En lui accordant une place de 20Go, ce qui devrait largement suffire étant donné que je ne vais rien installer de superflu sur cette machine virtuelle. Je me suis aussi dit que ça pourrait en intéresser quelques-uns si je décrivais tout ce que j’avais fait dans un article. Néanmoins il y a trop de choses à faire, et je serais obligé de découper cet article en deux (sinon ça fait quand même un peu gros et lourd à la fin…)
&lt;!--break--&gt;
Voilà la majorité des sites sur lesquels je me suis basé pour cette installation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://mintic.blog4ever.com/wiki.archlinux.fr/Installation&quot;&gt;Wiki Archlinux&lt;/a&gt;  &amp;lt;– Surtout celui-ci, en fait cet article ne fera que détailler cette page la plupart du temps&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mintic.blog4ever.com/wiki.archlinux.fr/Xorg&quot;&gt;Wiki ArchLinux - Xorg&lt;/a&gt;  &amp;lt;– Pour la suite (la deuxième partie de l’article)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/VirtualBox#Arch_Linux_guests&quot;&gt;ArchLinux Virtualbox&lt;/a&gt; &amp;lt;– Les additions invités de virtualbox&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour cet exemple j’ai téléchargé le dernier iso d’ArchLinux 32bits et j’ai suivi les étapes sur le wiki pour le mettre sur une clé USB bootable.&lt;/p&gt;

&lt;p&gt;Pour tous les fichier à créer/éditer, j’utilise le logiciel nano, qui est mon préferé quand il s’agit de s’occuper des fichiers en ligne de commande.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;On lance la machine virtuelle (je ne décris pas ici la création d’une machine virtuelle, normalement une rapide recherche sur le net vous permet d’en savoir largement sur l’utilisation de Virtualbox).&lt;/p&gt;

&lt;p&gt;Au démarrage on appuie sur F12 pour sélectionner un démarrage précis (j’ai eu un moment de doute et je ne sais plus si j’ai démarré sur floppy ou sur CD/DVD désolé…)&lt;/p&gt;

&lt;p&gt;Ensuite normalement arrive le menu de démarrage Live. On prend : BOOT ArchLinux
Là on à un défilement de message incompréhensibles… Puis on arrive sur une invite de commande connecté sous root.
Commencez par mettre un clavier français:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;loadkeys fr-pc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;partitionnement&quot;&gt;Partitionnement&lt;/h2&gt;

&lt;p&gt;D’après ArchlinuxFR on devrait faire 4 partitions, mais j’omets celle correspondante au swap, ce qui m’en fait seulement 3.&lt;/p&gt;

&lt;p&gt;Partitionemement grâce à fdisk avec:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fdisk /dev/sda
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Faites ensuite comme je l’ai fait (avec vos valeur pour la taille des différentes partitions si vous en avez fais des différentes):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Command(m for help) : n              
Parition type:                                
p  primary                                  
e  extended                                
Select(default p): p                       
Partition number(1-4, default1): 1
First sector (default 2048): 2048  
End sector: +100M                      
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Puis par le même procédé on entre pour chacune des partitions:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;p              
2              
206848    
+12288M             (12Go)

p              
3              
25372672
(laisser vide pour prendre toute la place restante)
Command(m for help): w  (Pour quitter et enregistrer les modifications)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;formatage&quot;&gt;Formatage&lt;/h2&gt;

&lt;p&gt;On devrait donc avoir maintenant nos 3 partitions, on va les formater pour qu’elle soient en ext4 (sauf /dev/sda1 qu’on mettra en ext2). Donc pour formater tout ça on va faire :&lt;/p&gt;

&lt;p&gt;mkfs.ext2 /dev/sda1 
mkfs.ext4 /dev/sda2 
mkfs.ext4 /dev/sda3&lt;/p&gt;

&lt;p&gt;Attendre que chacune des commandes se termine avant de faire quoi que ce soit/passer à la suivante.&lt;/p&gt;

&lt;h2 id=&quot;montage-des-partitions&quot;&gt;Montage des partitions&lt;/h2&gt;

&lt;p&gt;On monte maintenant toutes les partitions pour qu’elles correspondent au dossier que l’on veut, c’est-à-dire:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mount /dev/sda2 /mnt                  # Racine
mkdir /mnt/{boot,home}              # Création des deux répertoires pour les points de montages restants
mount /dev/sda1 /mnt/boot          # Répertoire de boot
mount /dev/sda3 /mnt/home        # Répertoire perso
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Au final au devrait donc avoir des partitions ressemblant à ça:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/home : ~8Go --&amp;gt; /dev/sda3        ext4 Monté dans /mnt/home
/ : 12Go --&amp;gt; /dev/sda2                 ext4 Monté dans /mnt   
/boot: 100Mo --&amp;gt; /dev/sda1         ext2 Monté dans /mnt/boot  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;connexion-rseau&quot;&gt;Connexion réseau&lt;/h2&gt;

&lt;p&gt;Normalement si on est en connexion filiairele pc est automatiquement connecté au réseau. Cependant étant donné que nous sommes sous une machine Virtualbox ce n’est pas toujours le cas.
Il faut lancer la commande suivante afin de démarrer le démon qui gère la connexion filiaire au réseau eth0:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dhcpd etho0         (A lancer avec &quot;sh&quot; et non &quot;bash&quot; !) 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;installation-du-systme-de-base&quot;&gt;Installation du système de base&lt;/h2&gt;

&lt;p&gt;On peut changer le fichier /etc/pacman.d/mirrorlist pour obtenir le miroir le plus proche mais ce n’est pas obligatoire. Donc on va lancer l’installation
directement même si ça prend un peu plus de temps. On fait ça grâce à la commande:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacstrap /mnt base
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Là il faut laisser faire quelques minutes/heures selon votre connexion. Il se peut qu’il y ait une demande de confirmation de la part de l’utilisateur.&lt;/p&gt;

&lt;p&gt;Ensuite il faut installer base-devel pour l’utilisation des dépôts d’utilisateur d’Arch avec la commande;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacstrap /mnt base-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Là aussi il faut attendre quelques minutes que le téléchargement/installation se fasse, j’ai eu droit à une demande de confirmation qui s’est…confirmée toute seul O_ô. Bon passons l’éponge pour cette fois-ci…&lt;/p&gt;

&lt;p&gt;Enfin, pour terminer avec ces installations dans tous les sens, il faut installer le chargeur de démarrage. La plupart du temps on choisit GRUB ou LILO, mais la documentation se base sur l’installation de syslinux. On va donc suivre leur exemple avec:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacstrap /mnt syslinux
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;L’installation devrait être beaucoup plus rapide. Et bien entendu…une auto-confirmation de la part de pacstrap! Faudrait que je pose la question sur les forums quand même.&lt;/p&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;Il faut générer un fichier de configuration /etc/fstab. Il contiendra toutes les informations concernant le partitionnement du/des disque(s) et leur arborescence.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;genfstab -U -p /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Je ne suis pas sûr de la signification des paramètres envoyés à genfstab (-U  et -p). Vous pouvez lancer un genfstab -h pour voir leur signification si vous arrivez à mieux comprendre que moi ^^”
Le symbole de flux » permet d’enregistrer la sortie de la commande dans un fichier spécifié (ici /mnt/etc/fstab,  il y aura donc un fichier nommé fstab avec comme contenu la sortie de la commande à gauche du symbole de flux). Si le fichier existe déjà le contenu sera ajouté à la fin.&lt;/p&gt;

&lt;p&gt;Ensuite on va démarrer dans un nouveau système, on appelle cela Chrooter. On utilise la commande suivante:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;arch-chroot /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On démarre un nouveau système avec comme racine l’argument spécifié après la commande arch-chroot. De ce fait on “enferme” un système dans un autre, le premier n’ayant donc plus accès aux dossiers supérieurs (on peut pas aller au-dessus de la racine /).&lt;/p&gt;

&lt;p&gt;Donc ici on démarre un nouveau système dans /mnt qui contient tout ce dont on a besoin pour la suite de la configuration (puisque le(s) disque(s) et leur(s) partitions sont dans ce dossier).&lt;/p&gt;

&lt;p&gt;On va ensuite donner un nom à la machine. Pour cela on va modifier le fichier /etc/hostname avec par exemple la commande nano (voir la documentation pour l’utilisation de cet outil). A ma connaissance on peut donner celui que l’on veut.&lt;/p&gt;

&lt;p&gt;Le fichier étant vide, et vu qu’il n’y a aucune information spécifique sur le wiki d’ArchLinux, j’en déduis qu’il suffit simplement d’écrire le nom que l’on veut. Pour ma part je me contente d’un “archiso”.&lt;/p&gt;

&lt;p&gt;Ensuite petite modification du fichier /etc/locale.gen pour définir la langue du système à utiliser et sous quel format. Pour le choisir il faut dé-commenter (enlever le #) la ligne que l’on veut. J’ai enlevé celui de la ligne “fr_FR.UTF-8 UTF-8”. Puis on lance la commande “locale-gen” pour enregistrer ce paramètre et générer le locale correspondant.
Puis on créé le fichier /etc/locale.conf et on y met:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LANG=&quot;fr_FR.UTF-8&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Pour que le paramètre soit celui enregistré par défaut. Il se peut que ce paramètre ne soit pris en compte qu’au redémarrage de la machine. Pour le faire pour la session courante on lance la commande:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export LANG=fr_FR.UTF-8
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On édite ensuite le fichier /etc/vconsole.conf pour la configuration du type de clavier et l’on y met:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;KEYMAP=fr-pc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On règle maintenant l’heure locale avec un lien à /etc/localtime vers le fuseau horaire correspondant. Ici:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Si le votre est différent, je vous conseille de fouiller le répertoire zoneinfo pour y trouver le votre.&lt;/p&gt;

&lt;p&gt;On va ensuite créer les ramdisks. Ne me demandez pas une définition je ne sais pas encore exactement ce que c’est, simplement qu’il sert pour l’image du noyau linux.
On configure ensuite le chargeur de démarrage pour qu’il…démarre x) Plus exactement on lance l’installation automatique sur le MBR (Master Boot Record) :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;syslinux-install_update -iam
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ça devrait se faire assez rapidement en théorie.&lt;br /&gt;
Allez on à presque terminé! Maintenant on va définir un mot de passe pour le compte root avec la commande “passwd” (sans les guillemets”), et l’on entre ensuite le mot de passe que l’on veut (Deux fois pour vérification).
Pour finir, on va démonter toutes les partitions avec un :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;umount /mnt/boot /mnt/home /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Vous pouvez maintenant redémarrer/éteindre votre ordinateur (virtuel) en toute tranquillité!&lt;/p&gt;

&lt;p&gt;Et voilà on à terminé! Terminé? En fait pas exactement, mais ceci est la fin de la première partie de cet article. Vous pouvez continuer par-vous même par le biais du site ArchLinux. Notamment pour la création d’un utilisateur dont je ne donnerais pas d’explication ici.
Dans la deuxième partie je m’occuperais de l’installation du serveur Xorg et d’un environnement graphique.&lt;/p&gt;

&lt;p&gt;Merci d’avoir pris le temps de lire cet article,  n’hésitez pas à me dire si vous avez des problème ou des suggestions. Sur ce je vous dis à bientôt et bonne fin de journée!&lt;/p&gt;
</description>
				<pubDate>Fri, 04 Jan 2013 00:00:00 +0100</pubDate>
				<link>http://ilphrin.com/2013/01/04/test-archlinux-en-virtualbox-(1-2).html</link>
				<guid isPermaLink="true">http://ilphrin.com/2013/01/04/test-archlinux-en-virtualbox-(1-2).html</guid>
			</item>
		
			<item>
				<title>Conky et Lua pour les non-angolophobes</title>
				
					<description>&lt;p&gt;Salut tout l’monde!&lt;/p&gt;

&lt;p&gt;Aujourd’hui je ne vais pas vraiment faire d’article réellement complet. J’aimerais juste partager un lien très utile quand a l’utilisation du langage Lua et la bibliothèque Cairo avec Conky.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://crunchbanglinux.org/forums/post/180798/#p180798&quot;&gt;Ici le lien sera&lt;/a&gt;
&lt;!--break--&gt;&lt;/p&gt;

&lt;p&gt;C’est un gars qui a fait un cours absolument génial sur Conky et Lua. Seulement voilà: C’est entièrement en Anglais.&lt;/p&gt;

&lt;p&gt;Mais il permet de faire pleins de choses sympa comme une barre d’affichage du taux d’utilisation de CPU ou même une petite horloge.&lt;/p&gt;

&lt;p&gt;Par exemple voilà mon Conky en suivant ce tutos avec quelques petite touche persos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/conky_01.png&quot; alt=&quot;conky&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Je me suis notamment permis de rajouter les numéros pour l’horloge et de mettre en cercle autour mes utilisation CPU et RAM. Après en dessous ce n’est qu’une utilisation basique des commandes de Conky.&lt;/p&gt;

&lt;p&gt;Si vous êtes vraiment intéressé par Conky vous pouvez aussi aller du coté du forums Ubuntu qui recense des centaines de centaines de Conky:  &lt;a href=&quot;http://forum.ubuntu-fr.org/viewtopic.php?id=426625&amp;amp;p=1&quot;&gt;(4) Conky : Postez vos conkyrc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Et surtout n’hésitez pas à poster les vôtre en commentaires.&lt;/p&gt;

&lt;p&gt;Sur ce bonne journée a tous et à bientôt!&lt;/p&gt;
</description>
				<pubDate>Sat, 13 Oct 2012 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2012/10/13/conky-et-lua-pour-les-non-anglophones.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2012/10/13/conky-et-lua-pour-les-non-anglophones.html</guid>
			</item>
		
			<item>
				<title>Un jeu de dessin basé sur les lois de la physique</title>
				
					<description>&lt;p&gt;Caph est un petit jeu extrêmement sympathique dont le but est de faire se coller un objet A sur un objet B. Basé sur deux principes : Primo tout est a base de dessins. Pour parvenir a votre objectif, vous n’avez que votre souris qui vous permet de dessiner des formes sur lesquelles vont venir se construire vos techniques pour faire avances l’objet A. Secundo la difficulté la plus importante, est que ce jeu est basé sur les lois de la physique ! En effet selon ce que vous dessinez il y aura des effet de gravité et d’énergie mécanique variable.
&lt;!--break--&gt;
##Installation&lt;/p&gt;

&lt;p&gt;Pour installer ce jeu il faut aller télécharger a partir de → &lt;a href=&quot;http://caphgame.sourceforge.net/&quot;&gt;Caph&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Normalement une commande par le terminal et apt-get permettrai de l’installer. Mais depuis peu il y a des problèmes avec le fichier deb. Mais pour les autres version il n’y a manifestement pas de problème, vous pouvez donc continuer à utiliser ces version du jeux. Pour le reste il faut suivre le lien précédent et dans la catégorie “Downloads” cliquer sur le lien et télécharger la dernière version. Ensuite dans le répertoire où vous l’avez téléchargé vous faites une extraction d’un contenu de l’archive avec votre gestionnaire d’archive préféré. Ensuite ça se complique légèrement. Il faut aller dans le dossier caph/src/ puis vous ouvrez un terminal dans ce répertoire. vous lancez ensuite les commandes suivante:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./config                           
./build                            
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ne faites pas attention aux quelques messages apparaissant, maintenant vous pouvez exécuter le fichier caph avec un simple ./caph . Le jeu se lance alors!&lt;/p&gt;

&lt;p&gt;A partir de là libre à vous de créer les raccourcis que vous voulez pour lancer le jeu plus rapidement. (Par exemple en exécutant une commande avec Gnome-Pie!)&lt;/p&gt;

&lt;p&gt;Si vous voulez plus d’infos sur le jeu, il y a un répertoire doc dans le jeu avec un fichier README qui fournit pas mal d’informations.&lt;/p&gt;

&lt;h2 id=&quot;comment-jouer&quot;&gt;Comment jouer&lt;/h2&gt;

&lt;p&gt;Voici les commande de base a connaître :&lt;/p&gt;

&lt;p&gt;La souris vous permet de dessiner toutes les formes qui vous passent par la tête pour arriver au bout du niveau. Le clic-droit vous permet de changer de types de matériaux (Noir : Solide , Vert:Solide déformable et Bleu :Corde flexible).&lt;/p&gt;

&lt;p&gt;Echap permet de faire un retour arrière dans les objets crées. Il est surtout a combiner avec la touche T qui permet de stopper les temps.&lt;/p&gt;

&lt;p&gt;La touche R permet de recommencer le niveau&lt;/p&gt;

&lt;p&gt;La touche N permet de passer au niveau suivant (n’ayant pas de système de sauvegarde vous pouvez retourner a votre niveau de cette façon)&lt;/p&gt;

&lt;p&gt;Et enfin la touche Q vous permet de quitter le jeu.&lt;/p&gt;

&lt;p&gt;Voilà j’espère que vous vous amuserez bien avec ce petit jeu, en tout cas au début c’est un peu difficile a prendre en main mais après ça va mieux. Bien sur les niveau vont en difficulté crescendo ! (je ne sais pas encore combien de niveau il existe, je vous le dirais quand je l’aurais fini x) ). Sur ce bonne fin de journée a tous et amusez-vous bien !&lt;/p&gt;
</description>
				<pubDate>Mon, 08 Oct 2012 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2012/10/08/un-jeu-de-dessin-base-sur-les-lois-de-la-physiques.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2012/10/08/un-jeu-de-dessin-base-sur-les-lois-de-la-physiques.html</guid>
			</item>
		
			<item>
				<title>Mirage - Voir ses images simplement et rapidement</title>
				
					<description>&lt;p&gt;Mirage est un logiciel qui permet de visualiser des images. Tout simplement. Je pense qu’une image vaut mieux que de longs discours:
&lt;!--break--&gt;
&lt;img src=&quot;/images/mirage01.jpg&quot; alt=&quot;mirage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Je trouve l’apparence de Mirage particulièrement agréable. On voit rapidement une liste des images du dossier que l’on regarde sur la gauche (configurable dans le menu Edit&amp;gt;Preferences). Et l’affichage se fait rapidement, même pour de grosses images.&lt;/p&gt;

&lt;p&gt;Pour l’installer, rien de plus simple. Mirage est disponible dans la quasi-totalité des distributions. De ce fait il suffit d’aller dans son gestionnaire de logiciel préféré et d’entrer Mirage, et de l’installer.&lt;/p&gt;

&lt;p&gt;Si vous êtes un adepte de la ligne de commande, sous Ubuntu et ses derivées ils suffit d’un:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install mirage                  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Si vous l’appréciez, vous pouvez même le définir comme logiciels a utiliser par défaut. Sous Linux Mint il faut aller dans:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Menu &amp;gt; Préférences &amp;gt; Details &amp;gt; Applications par défaut &amp;gt; Photos : Mirage.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Et voilà, vous avez un nouveau petit logiciel pour afficher vos images.&lt;/p&gt;

&lt;p&gt;Sur ce je vous souhaite une bonne fin de semaine et a bientôt pour un prochain article!&lt;/p&gt;
</description>
				<pubDate>Sat, 22 Sep 2012 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2012/09/22/mirage-voir-ses-images-simplement-et-rapidement.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2012/09/22/mirage-voir-ses-images-simplement-et-rapidement.html</guid>
			</item>
		
			<item>
				<title>Présentation de Gnome-pie</title>
				
					<description>&lt;p&gt;Gnome-pie est un petit logiciel fort sympathique. Il permet, par le biais d’un raccourcis tapé au clavier, de faire apparaître un disque de ses logiciels.&lt;/p&gt;

&lt;p&gt;En fait le terme exact devrait être une « tarte » de logiciels. Puisque ‘Pie’ en anglais veut dire aussi bien disque que tarte. Mais d’après le développeur on parle plus généralement de tartes. (je le soupçonne d’être fondateur d’une multinationale alimentaire…)
&lt;!--break--&gt;
Bon voici clairement a quoi ressemble les tartes :&lt;/p&gt;

&lt;p&gt;&amp;lt;iframe width:”420” height:”360” src=”https://vimeo.com/30618179” frameborder=”0”&amp;gt;&amp;lt;/iframe&amp;gt;
(Vidéo officielle de Simon Schneegans, le développeur).&lt;/p&gt;

&lt;p&gt;Pour l’installation, je vais honteusement recopier le tuto du site de Mr Schneegans ^_^ :&lt;/p&gt;

&lt;h2 id=&quot;installation-par-pparecommand&quot;&gt;Installation par PPA(recommandé)&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo add-apt-repository ppa:simonschneegans/testing
sudo apt-get update
sudo apt-get install gnome-pie
Installation par les sources
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Avec gtk2 :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install git build-essential libgtk2.0-dev libcairo2-dev libappindicator-dev libgee-dev libxml2-dev libxtst-dev libgnome-menu-dev valac cmake libunique-dev libbamf-dev libwnck-dev bamfdaemon
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Avec gtk3 :&lt;/p&gt;

&lt;p&gt;sudo apt-get install git build-essential libgtk-3-dev libcairo2-dev libappindicator3-dev libgee-dev libxml2-dev libxtst-dev libgnome-menu-3-dev valac cmake libunique-3.0-dev libbamf3-dev libwnck-3-dev bamfdaemon&lt;/p&gt;

&lt;p&gt;Ensuite pour les deux cas vous n’avez plus qu’à télécharger Gnome-pie, le compiler et l’installer comme ceci :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git://github.com/Simmesimme/Gnome-Pie.git
cd Gnome-Pie &amp;amp;&amp;amp; ./make.sh
cd build &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ensuite, quelle que soit votre méthode d’installation, je vous recommande de le faire lancer au démarrage de votre session.&lt;/p&gt;

&lt;h2 id=&quot;configurationpossibilits-de-base&quot;&gt;Configuration/Possibilités de base&lt;/h2&gt;

&lt;p&gt;Au premier lancement plusieurs tartes sont déjà disponibles. Donc notamment les raccourcis clavier qui vont avec, voici plus ou moins ce que donnent ces raccourcis :&lt;/p&gt;

&lt;p&gt;-Ctrl+Alt+A : 6 objets ; Redémarrer Déconnecter Arrêter ainsi que trois logiciel qui sont sur votre ordinateur (je ne me souviens plus desquels je les ais changés depuis longtemps).&lt;/p&gt;

&lt;p&gt;-Ctrl+Alt+B : x objets ; Tous les dossier de votre répertoire personnel ainsi que les différents volumes montés.&lt;/p&gt;

&lt;p&gt;-Ctrl+Alt+Espace ; Représente les différents types de logiciels présents sur votre ordinateur ( Ceux qui sont dans votre menu de bureau par exemple Accessoire Internet Préférence Administration etc…)&lt;/p&gt;

&lt;p&gt;-Ctrl+Alt+W : Les différentes options de fenêtre c’est-à-dire Réduire Agrandir Restaurer Fermer.&lt;/p&gt;

&lt;p&gt;-Ctrl+Alt+M : Celui que j’utilise le plus fréquemment. Il correspond aux boutons de base de votre lecteur de musique. Lecture/Pause Précédant Suivant Stop.&lt;/p&gt;

&lt;p&gt;-Ctrl+Alt+Q : Redémarrer Arrêter Déconnecter.&lt;/p&gt;

&lt;p&gt;Il y a deux moyens pour créer/éditer ses propres tartes :&lt;/p&gt;

&lt;p&gt;-Le mode graphique : Dans le menu préférence de gnome-pie. Vous pouvez sélectionner les tartes existantes en cliquant sur l’un de ceux de la liste de gauche, puis en cliquant dans le vide sur la tarte montrée a droite pour en ajouter une. Là il ne vous reste plus qu’à taper la commande a lancer et a vous choisir un nom ainsi qu’une icône.&lt;/p&gt;

&lt;p&gt;Vous pouvez aussi ajouter une tarte en cliquant sur l’icône + en bas a gauche de la fenêtre. Là il vous est demandé d’entrer un nom ainsi que d’appuyer sur la combinaison de touche nécessaire a l’ouverture de cette tarte. Vous pouvez dès lors y ajouter des applications.&lt;/p&gt;

&lt;p&gt;Attention : Sur mon ordinateur la sélection d’icône provoque un crash du logiciel, peut-être que vous aurez plus de chances que moi, en attendant si c’est votre cas vous pourrez choisir l’icône avec la deuxième méthode que je vais vous présenter.&lt;/p&gt;

&lt;p&gt;-Le mode texte : Vous pouvez aussi tout écrire a la main, en allant directement dans le fichier de config. L’avantage ? Si comme moi vous avez un problème avec les icône, vous pouvez les choisir en donnant le chemin de l’icône.&lt;/p&gt;

&lt;p&gt;Chez moi le fichier de config se trouve dans : /home/chezmoi/.conf/gnome-pie/pies.conf&lt;/p&gt;

&lt;p&gt;Vous devez normalement vous retrouver devant un fichier de type texte xml. Vous pouvez créer une tarte de la façon suivante :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;pie name=&quot;Multimédia&quot; id=&quot;831&quot; icon=&quot;stock_media-play&quot; hotkey=&quot;Control+Alt+m&quot;&amp;gt;&amp;lt;/pie&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Vous avez plusieurs choses bizarres dans ces lignes, je vais vous y décrire ce que fait chaque attribut :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&amp;lt; pie&amp;gt; &amp;lt; /pie&amp;gt; Correspond a la création d’une tarte avec une balise ouvrante et une fermante.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;name= ‘‘Multimédia ‘’ Correspond au nom donné a la tarte, ici c’est Multimédia (plus quelques caractères pour gérer l’accent du ‘‘é’’ ).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&#39;’id=831’’ Bon alors celui-ci je dois avouer que je ne saurais l’utiliser correctement. Je ne sais non plus comment il fonctionne (si quelqu’un peut me le dire d’ailleurs ce serait cool x) ).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;icon=’‘stock_media-play’’ Là il vous est possible de choisir votre icône. Soit c’est une icône système auquel cas vous pouvez directement entrer son nom, ou alors vous écrivez le chemin (de préférence le chemin absolu) pour y accéder.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;hotkey=”Control+Alt+m” Là il s’agit du raccourcis sur lequel appuyer pour ouvrir la tarte, je ne saurais expliquer comment savoir a quoi correspondent les caractères qu’il y a entre chacune des touches a entrer.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vous pouvez aussi a l’intérieur d’une tarte mettre une nouvelle application. Les lignes ressemblent a ceci : (j’ai pris une icône de la tarte Multimédia)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;slice type=&quot;key&quot; name=&quot;Piste Suivante&quot; icon=&quot;stock_media-next&quot; command=&quot;XF86AudioNext&quot; quickAction=&quot;true&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Alors là à l’inverse des balises &lt;pie&gt; et &amp;lt; /pie&amp;gt; la balise &amp;lt; slice /&amp;gt; est dite orpheline, car elle se termine sur la même balise qui l&#39;à commencé (on peut le voir notamment avec le &#39;/&#39; a la fin). Littéralement slice en français veut dire &#39;part&#39; comme...part de tarte ! C&#39;est bien fait n&#39;est-ce pas ^^&lt;/pie&gt;&lt;/p&gt;

&lt;p&gt;Bon passons au découpage de cette balise :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;type=’‘key’’ signifie que c’est une commande un peu spéciale. Généralement quand vous voudrez ajouter une part de tarte cela sera plutôt : type=’‘app’’ .&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;name= ‘‘Piste suivante’’ Est le nom qui va s’afficher pour le bouton.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;icone=’‘stock_media-next’’ Est la même chose que pour la balise &lt;pie&gt; .&lt;/pie&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;command=’’ XF86AudioNext’’ Est la commande qui va être lancée. Vous pouvez écrire une commande comme vous le feriez dans un terminal.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;quickAction=’true’’ Bon je dois avouer ne pas connaître grand chose non plus sur l’utilité de cet attribut, mais toutes les applications que j’ai ajouté se sont vues mettre l’attribut : quickAction=”false” .&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Personnellement je n’ai crée qu’un seule tarte nommée ‘Jeux’ dans laquelle j’ai mis….mes jeux !&lt;/p&gt;

&lt;p&gt;Voici le lien sur site de Mr Schneegans: &lt;a href=&quot;http://www.simonschneegans.de&quot;&gt;http://www.simonschneegans.de&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bon et bien voilà je crois que j’ai fait le tour. Sur ce je vais vous souhaiter une bonne fin de journée, tout en espérant en avoir amadoué quelques uns ;P&lt;/p&gt;
</description>
				<pubDate>Sun, 16 Sep 2012 00:00:00 +0200</pubDate>
				<link>http://ilphrin.com/2012/09/16/presentation-de-gnome-pie.html</link>
				<guid isPermaLink="true">http://ilphrin.com/2012/09/16/presentation-de-gnome-pie.html</guid>
			</item>
		
	</channel>
</rss>
